{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\nimport Surface from './Surface';\nimport { useInternalTheme } from '../core/theming';\nimport { addEventListener } from '../utils/addEventListener';\nimport { BackHandler } from '../utils/BackHandler/BackHandler';\nimport useAnimatedValue from '../utils/useAnimatedValue';\nconst DEFAULT_DURATION = 220;\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\nfunction Modal({\n  dismissable = true,\n  dismissableBackButton = dismissable,\n  visible = false,\n  overlayAccessibilityLabel = 'Close modal',\n  onDismiss = () => {},\n  children,\n  contentContainerStyle,\n  style,\n  theme: themeOverrides,\n  testID = 'modal'\n}) {\n  var _theme$colors;\n  const theme = useInternalTheme(themeOverrides);\n  const onDismissCallback = useLatestCallback(onDismiss);\n  const {\n    scale\n  } = theme.animation;\n  const {\n    top,\n    bottom\n  } = useSafeAreaInsets();\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n  const [visibleInternal, setVisibleInternal] = React.useState(visible);\n  const showModalAnimation = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start();\n  }, [opacity, scale]);\n  const hideModalAnimation = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start(({\n      finished\n    }) => {\n      if (!finished) {\n        return;\n      }\n      setVisibleInternal(false);\n    });\n  }, [opacity, scale]);\n  React.useEffect(() => {\n    if (visibleInternal === visible) {\n      return;\n    }\n    if (!visibleInternal && visible) {\n      setVisibleInternal(true);\n      return showModalAnimation();\n    }\n    if (visibleInternal && !visible) {\n      return hideModalAnimation();\n    }\n  }, [visible, showModalAnimation, hideModalAnimation, visibleInternal]);\n  React.useEffect(() => {\n    if (!visible) {\n      return undefined;\n    }\n    const onHardwareBackPress = () => {\n      if (dismissable || dismissableBackButton) {\n        onDismissCallback();\n      }\n      return true;\n    };\n    const subscription = addEventListener(BackHandler, 'hardwareBackPress', onHardwareBackPress);\n    return () => subscription.remove();\n  }, [dismissable, dismissableBackButton, onDismissCallback, visible]);\n  if (!visibleInternal) {\n    return null;\n  }\n  return React.createElement(Animated.View, {\n    pointerEvents: visible ? 'auto' : 'none',\n    accessibilityViewIsModal: true,\n    accessibilityLiveRegion: \"polite\",\n    style: StyleSheet.absoluteFill,\n    onAccessibilityEscape: onDismissCallback,\n    testID: testID\n  }, React.createElement(AnimatedPressable, {\n    accessibilityLabel: overlayAccessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: !dismissable,\n    onPress: dismissable ? onDismissCallback : undefined,\n    importantForAccessibility: \"no\",\n    style: [styles.backdrop, {\n      backgroundColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.backdrop,\n      opacity\n    }],\n    testID: `${testID}-backdrop`\n  }), React.createElement(View, {\n    style: [styles.wrapper, {\n      marginTop: top,\n      marginBottom: bottom\n    }, style],\n    pointerEvents: \"box-none\",\n    testID: `${testID}-wrapper`\n  }, React.createElement(Surface, {\n    testID: `${testID}-surface`,\n    theme: theme,\n    style: [{\n      opacity\n    }, styles.content, contentContainerStyle],\n    container: true\n  }, children)));\n}\nexport default Modal;\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: Object.assign({}, StyleSheet.absoluteFillObject, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","Animated","Easing","StyleSheet","Pressable","View","useSafeAreaInsets","useLatestCallback","Surface","useInternalTheme","addEventListener","BackHandler","useAnimatedValue","DEFAULT_DURATION","AnimatedPressable","createAnimatedComponent","Modal","dismissable","dismissableBackButton","visible","overlayAccessibilityLabel","onDismiss","children","contentContainerStyle","style","theme","themeOverrides","testID","_theme$colors","onDismissCallback","scale","animation","top","bottom","opacity","visibleInternal","setVisibleInternal","useState","showModalAnimation","useCallback","timing","toValue","duration","easing","out","cubic","useNativeDriver","start","hideModalAnimation","finished","useEffect","undefined","onHardwareBackPress","subscription","remove","createElement","pointerEvents","accessibilityViewIsModal","accessibilityLiveRegion","absoluteFill","onAccessibilityEscape","accessibilityLabel","accessibilityRole","disabled","onPress","importantForAccessibility","styles","backdrop","backgroundColor","colors","wrapper","marginTop","marginBottom","content","container","create","flex","Object","assign","absoluteFillObject","justifyContent"],"sources":["C:\\Users\\robin\\Documents\\RpgHybrid\\node_modules\\react-native-paper\\src\\components\\Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  Pressable,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\n\nimport Surface from './Surface';\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\nimport { addEventListener } from '../utils/addEventListener';\nimport { BackHandler } from '../utils/BackHandler/BackHandler';\nimport useAnimatedValue from '../utils/useAnimatedValue';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the modal dismisses it.\n   */\n  dismissable?: boolean;\n  /**\n   * Determines whether clicking Android hardware back button dismisses the dialog.\n   */\n  dismissableBackButton?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the modal.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Style for the wrapper of the modal.\n   * Use this prop to change the default wrapper style or to override safe area insets with marginTop and marginBottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst DEFAULT_DURATION = 220;\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](./Portal) component.\n * Note that this modal is NOT accessible by default; if you need an accessible modal, please use the React Native Modal.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *   const hideModal = () => setVisible(false);\n *   const containerStyle = {backgroundColor: 'white', padding: 20};\n *\n *   return (\n *     <PaperProvider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n *           <Text>Example Modal.  Click outside this area to dismiss.</Text>\n *         </Modal>\n *       </Portal>\n *       <Button style={{marginTop: 30}} onPress={showModal}>\n *         Show\n *       </Button>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nfunction Modal({\n  dismissable = true,\n  dismissableBackButton = dismissable,\n  visible = false,\n  overlayAccessibilityLabel = 'Close modal',\n  onDismiss = () => {},\n  children,\n  contentContainerStyle,\n  style,\n  theme: themeOverrides,\n  testID = 'modal',\n}: Props) {\n  const theme = useInternalTheme(themeOverrides);\n  const onDismissCallback = useLatestCallback(onDismiss);\n  const { scale } = theme.animation;\n  const { top, bottom } = useSafeAreaInsets();\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n  const [visibleInternal, setVisibleInternal] = React.useState(visible);\n\n  const showModalAnimation = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start();\n  }, [opacity, scale]);\n\n  const hideModalAnimation = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n\n      setVisibleInternal(false);\n    });\n  }, [opacity, scale]);\n\n  React.useEffect(() => {\n    if (visibleInternal === visible) {\n      return;\n    }\n\n    if (!visibleInternal && visible) {\n      setVisibleInternal(true);\n      return showModalAnimation();\n    }\n\n    if (visibleInternal && !visible) {\n      return hideModalAnimation();\n    }\n  }, [visible, showModalAnimation, hideModalAnimation, visibleInternal]);\n\n  React.useEffect(() => {\n    if (!visible) {\n      return undefined;\n    }\n\n    const onHardwareBackPress = () => {\n      if (dismissable || dismissableBackButton) {\n        onDismissCallback();\n      }\n\n      return true;\n    };\n\n    const subscription = addEventListener(\n      BackHandler,\n      'hardwareBackPress',\n      onHardwareBackPress\n    );\n    return () => subscription.remove();\n  }, [dismissable, dismissableBackButton, onDismissCallback, visible]);\n\n  if (!visibleInternal) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      pointerEvents={visible ? 'auto' : 'none'}\n      accessibilityViewIsModal\n      accessibilityLiveRegion=\"polite\"\n      style={StyleSheet.absoluteFill}\n      onAccessibilityEscape={onDismissCallback}\n      testID={testID}\n    >\n      <AnimatedPressable\n        accessibilityLabel={overlayAccessibilityLabel}\n        accessibilityRole=\"button\"\n        disabled={!dismissable}\n        onPress={dismissable ? onDismissCallback : undefined}\n        importantForAccessibility=\"no\"\n        style={[\n          styles.backdrop,\n          {\n            backgroundColor: theme.colors?.backdrop,\n            opacity,\n          },\n        ]}\n        testID={`${testID}-backdrop`}\n      />\n      <View\n        style={[\n          styles.wrapper,\n          { marginTop: top, marginBottom: bottom },\n          style,\n        ]}\n        pointerEvents=\"box-none\"\n        testID={`${testID}-wrapper`}\n      >\n        <Surface\n          testID={`${testID}-surface`}\n          theme={theme}\n          style={[{ opacity }, styles.content, contentContainerStyle]}\n          container\n        >\n          {children}\n        </Surface>\n      </View>\n    </Animated.View>\n  );\n}\n\nexport default Modal;\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}