{"ast":null,"code":"import { initializeApp, getApps } from 'firebase/app';\nimport { getAuth, initializeAuth, getReactNativePersistence } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAokpSG0MrYQVWYWXDQCOtVjM10ilYZRBA\",\n  authDomain: \"hybridrpg-53f62.firebaseapp.com\",\n  projectId: \"hybridrpg-53f62\",\n  storageBucket: \"hybridrpg-53f62.appspot.com\",\n  messagingSenderId: \"195554523219\",\n  appId: \"1:195554523219:web:04e0abb1ecbdd38c926ea6\"\n};\nlet app;\nlet auth;\nlet db;\nif (getApps().length === 0) {\n  app = initializeApp(firebaseConfig);\n  if (Platform.OS !== 'web') {\n    auth = initializeAuth(app, {\n      persistence: getReactNativePersistence(AsyncStorage)\n    });\n  } else {\n    auth = getAuth(app);\n  }\n  db = getFirestore(app);\n  console.log('Firebase initialisé avec succès');\n} else {\n  app = getApps()[0];\n  auth = getAuth(app);\n  db = getFirestore(app);\n  console.log('Firebase déjà initialisé');\n}\nexport { auth, db };\nexport default app;","map":{"version":3,"names":["initializeApp","getApps","getAuth","initializeAuth","getReactNativePersistence","getFirestore","AsyncStorage","Platform","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","length","OS","persistence","console","log"],"sources":["C:/Users/robin/Documents/RpgHybrid/src/services/firebase.js"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth, initializeAuth, getReactNativePersistence } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Platform } from 'react-native';\r\n\r\n// Configuration Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAokpSG0MrYQVWYWXDQCOtVjM10ilYZRBA\",\r\n  authDomain: \"hybridrpg-53f62.firebaseapp.com\",\r\n  projectId: \"hybridrpg-53f62\",\r\n  storageBucket: \"hybridrpg-53f62.appspot.com\",\r\n  messagingSenderId: \"195554523219\",\r\n  appId: \"1:195554523219:web:04e0abb1ecbdd38c926ea6\"\r\n};\r\n\r\n// Initialiser Firebase une seule fois\r\nlet app;\r\nlet auth;\r\nlet db;\r\n\r\nif (getApps().length === 0) {\r\n  // Première initialisation\r\n  app = initializeApp(firebaseConfig);\r\n  \r\n  // Initialiser Auth avec persistance pour React Native\r\n  if (Platform.OS !== 'web') {\r\n    auth = initializeAuth(app, {\r\n      persistence: getReactNativePersistence(AsyncStorage)\r\n    });\r\n  } else {\r\n    auth = getAuth(app);\r\n  }\r\n  \r\n  // Initialiser Firestore\r\n  db = getFirestore(app);\r\n  \r\n  console.log('Firebase initialisé avec succès');\r\n} else {\r\n  // Firebase déjà initialisé\r\n  app = getApps()[0];\r\n  auth = getAuth(app);\r\n  db = getFirestore(app);\r\n  console.log('Firebase déjà initialisé');\r\n}\r\n\r\n// Exporter les services\r\nexport { auth, db };\r\nexport default app;\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,OAAO,QAAQ,cAAc;AACrD,SAASC,OAAO,EAAEC,cAAc,EAAEC,yBAAyB,QAAQ,eAAe;AAClF,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,YAAY,MAAM,2CAA2C;AAAC,OAAAC,QAAA;AAIrE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,iCAAiC;EAC7CC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,6BAA6B;EAC5CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAGD,IAAIC,GAAG;AACP,IAAIC,IAAI;AACR,IAAIC,EAAE;AAEN,IAAIhB,OAAO,CAAC,CAAC,CAACiB,MAAM,KAAK,CAAC,EAAE;EAE1BH,GAAG,GAAGf,aAAa,CAACQ,cAAc,CAAC;EAGnC,IAAID,QAAQ,CAACY,EAAE,KAAK,KAAK,EAAE;IACzBH,IAAI,GAAGb,cAAc,CAACY,GAAG,EAAE;MACzBK,WAAW,EAAEhB,yBAAyB,CAACE,YAAY;IACrD,CAAC,CAAC;EACJ,CAAC,MAAM;IACLU,IAAI,GAAGd,OAAO,CAACa,GAAG,CAAC;EACrB;EAGAE,EAAE,GAAGZ,YAAY,CAACU,GAAG,CAAC;EAEtBM,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAChD,CAAC,MAAM;EAELP,GAAG,GAAGd,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAClBe,IAAI,GAAGd,OAAO,CAACa,GAAG,CAAC;EACnBE,EAAE,GAAGZ,YAAY,CAACU,GAAG,CAAC;EACtBM,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AACzC;AAGA,SAASN,IAAI,EAAEC,EAAE;AACjB,eAAeF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}