{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Documents\\\\RpgHybrid\\\\src\\\\screens\\\\SkillTreeScreen.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { collection, doc, getDocs, getDoc, query, where } from 'firebase/firestore';\nimport { db } from '../services/firebase';\nimport { useAuth } from '../contexts/AuthContext';\nimport SkillNode from '../components/SkillNode';\nimport programs from '../data/programs.json';\nimport { colors } from '../theme/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  width: screenWidth,\n  height: screenHeight\n} = Dimensions.get('window');\nconst NODE_SIZE = 80;\nconst PADDING = 20;\nconst COLUMN_WIDTH = Math.max(120, (screenWidth - PADDING * 2) / 5);\nconst ROW_HEIGHT = Math.max(140, COLUMN_WIDTH * 1.2);\nconst TREE_WIDTH = 5 * COLUMN_WIDTH;\nconst TREE_HEIGHT = 10 * ROW_HEIGHT;\nconst SkillTreeScreen = ({\n  navigation\n}) => {\n  const {\n    user\n  } = useAuth();\n  const userId = user?.uid;\n  const [userProgress, setUserProgress] = useState({});\n  const [completedPrograms, setCompletedPrograms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [selectedProgram, setSelectedProgram] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [userStats, setUserStats] = useState({\n    totalCompleted: 0,\n    totalXP: 0,\n    currentTier: 0\n  });\n  const streetCategory = programs.categories.find(cat => cat.id === 'street');\n  const streetPrograms = streetCategory?.programs || [];\n  const loadUserData = useCallback(async () => {\n    if (!userId) return;\n    try {\n      setLoading(true);\n      const progressQuery = query(collection(db, 'userProgress'), where('userId', '==', userId));\n      const progressSnapshot = await getDocs(progressQuery);\n      const progressData = {};\n      progressSnapshot.forEach(doc => {\n        const data = doc.data();\n        progressData[data.programId] = data;\n      });\n      setUserProgress(progressData);\n      const userDoc = await getDoc(doc(db, 'users', userId));\n      const userData = userDoc.data();\n      const completed = userData?.completedPrograms || [];\n      setCompletedPrograms(completed);\n      const totalCompleted = completed.length;\n      const totalXP = completed.reduce((sum, programId) => {\n        const program = streetPrograms.find(p => p.id === programId);\n        return sum + (program?.xpReward || 0);\n      }, 0);\n      let currentTier = 0;\n      streetPrograms.forEach(program => {\n        const isUnlocked = program.prerequisites.length === 0 || program.prerequisites.every(prereq => completed.includes(prereq));\n        if (isUnlocked && program.position.tier > currentTier) {\n          currentTier = program.position.tier;\n        }\n      });\n      setUserStats({\n        totalCompleted,\n        totalXP,\n        currentTier\n      });\n    } catch (error) {\n      console.error('Erreur lors du chargement des données:', error);\n      Alert.alert('Erreur', 'Impossible de charger vos progrès');\n    } finally {\n      setLoading(false);\n      setDataLoaded(true);\n    }\n  }, [userId]);\n  useEffect(() => {\n    if (userId && !dataLoaded) {\n      loadUserData();\n    }\n  }, [userId]);\n  const getProgramState = useCallback(program => {\n    const isCompleted = completedPrograms.includes(program.id);\n    const isUnlocked = program.prerequisites.length === 0 || program.prerequisites.every(prereq => completedPrograms.includes(prereq));\n    const progress = userProgress[program.id];\n    const hasProgress = progress && progress.currentLevel > 0;\n    if (program.id === 'beginner-foundation' && completedPrograms.length === 0 && Object.keys(userProgress).length === 0) {\n      return 'UNLOCKED';\n    }\n    if (isCompleted) return 'COMPLETED';\n    if (hasProgress) return 'IN_PROGRESS';\n    if (isUnlocked) return 'UNLOCKED';\n    return 'LOCKED';\n  }, [completedPrograms, userProgress]);\n  const handleNodePress = useCallback(program => {\n    const state = getProgramState(program);\n    if (program.id === 'beginner-foundation' && completedPrograms.length === 0 && Object.keys(userProgress).length === 0) {\n      setSelectedProgram(program);\n      setModalVisible(true);\n      return;\n    }\n    if (state === 'LOCKED') {\n      const missingPrereqs = program.prerequisites.filter(prereq => !completedPrograms.includes(prereq));\n      const missingNames = missingPrereqs.map(id => {\n        const prereqProgram = streetPrograms.find(p => p.id === id);\n        return prereqProgram?.name || id;\n      });\n      Alert.alert('🔒 Programme verrouillé', `Vous devez d'abord compléter :\\n${missingNames.join('\\n')}`, [{\n        text: 'OK'\n      }]);\n      return;\n    }\n    navigation.navigate('ProgramDetail', {\n      program,\n      category: streetCategory,\n      userProgress: userProgress[program.id]\n    });\n  }, [getProgramState, completedPrograms, streetPrograms, navigation, streetCategory, userProgress]);\n  const handleNodeLongPress = useCallback(program => {\n    setSelectedProgram(program);\n    setModalVisible(true);\n  }, []);\n  const calculateConnectionLine = useCallback((fromProgram, toProgram) => {\n    const fromX = fromProgram.position.x * COLUMN_WIDTH + COLUMN_WIDTH / 2;\n    const fromY = fromProgram.position.y * ROW_HEIGHT + ROW_HEIGHT / 2;\n    const toX = toProgram.position.x * COLUMN_WIDTH + COLUMN_WIDTH / 2;\n    const toY = toProgram.position.y * ROW_HEIGHT + ROW_HEIGHT / 2;\n    const deltaX = toX - fromX;\n    const deltaY = toY - fromY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const angle = Math.atan2(deltaY, deltaX) * (180 / Math.PI);\n    return {\n      left: fromX,\n      top: fromY,\n      width: distance,\n      height: 3,\n      transform: [{\n        rotate: `${angle}deg`\n      }],\n      transformOrigin: '0 50%'\n    };\n  }, []);\n  const renderConnections = useCallback(() => {\n    const connections = [];\n    streetPrograms.forEach((program, index) => {\n      if (program.unlocks && program.unlocks.length > 0) {\n        program.unlocks.forEach(unlockedId => {\n          const unlockedProgram = streetPrograms.find(p => p.id === unlockedId);\n          if (unlockedProgram) {\n            const lineStyle = calculateConnectionLine(program, unlockedProgram);\n            const fromState = getProgramState(program);\n            const toState = getProgramState(unlockedProgram);\n            let lineColor = colors.border;\n            let opacity = 0.3;\n            if (fromState === 'COMPLETED' && toState !== 'LOCKED') {\n              lineColor = colors.success;\n              opacity = 0.8;\n            } else if (fromState === 'COMPLETED' || fromState === 'IN_PROGRESS') {\n              lineColor = colors.primary;\n              opacity = 0.6;\n            }\n            connections.push(_jsxDEV(View, {\n              style: [styles.connectionLine, {\n                left: lineStyle.left,\n                top: lineStyle.top,\n                width: lineStyle.width,\n                height: lineStyle.height,\n                transform: lineStyle.transform,\n                backgroundColor: lineColor,\n                opacity\n              }]\n            }, `${program.id}-${unlockedId}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this));\n          }\n        });\n      }\n    });\n    return connections;\n  }, [streetPrograms, calculateConnectionLine, getProgramState]);\n  const renderModal = () => {\n    if (!selectedProgram) return null;\n    const prereqNames = selectedProgram.prerequisites.map(id => {\n      const prereqProgram = streetPrograms.find(p => p.id === id);\n      return prereqProgram?.name || id;\n    });\n    const unlockNames = selectedProgram.unlocks?.map(id => {\n      const unlockProgram = streetPrograms.find(p => p.id === id);\n      return unlockProgram?.name || id;\n    }) || [];\n    return _jsxDEV(Modal, {\n      visible: modalVisible,\n      transparent: true,\n      animationType: \"fade\",\n      onRequestClose: () => setModalVisible(false),\n      children: _jsxDEV(View, {\n        style: styles.modalOverlay,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: [selectedProgram.icon, \" \", selectedProgram.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.modalDifficulty,\n            children: [\"Difficult\\xE9: \", selectedProgram.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.modalDescription,\n            children: selectedProgram.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.modalSection,\n            children: [_jsxDEV(Text, {\n              style: styles.modalSectionTitle,\n              children: \"\\uD83D\\uDCCA Informations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"Dur\\xE9e: \", selectedProgram.totalWeeks, \" semaines\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"R\\xE9compense XP: \", selectedProgram.xpReward]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"Tier: \", selectedProgram.position.tier]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), prereqNames.length > 0 && _jsxDEV(View, {\n            style: styles.modalSection,\n            children: [_jsxDEV(Text, {\n              style: styles.modalSectionTitle,\n              children: \"\\uD83D\\uDD12 Pr\\xE9requis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), prereqNames.map(name => _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"\\u2022 \", name]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), unlockNames.length > 0 && _jsxDEV(View, {\n            style: styles.modalSection,\n            children: [_jsxDEV(Text, {\n              style: styles.modalSectionTitle,\n              children: \"\\uD83D\\uDD13 D\\xE9bloque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), unlockNames.map(name => _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"\\u2022 \", name]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.modalCloseButton,\n            onPress: () => setModalVisible(false),\n            children: _jsxDEV(Text, {\n              style: styles.modalCloseText,\n              children: \"Fermer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Chargement de votre arbre...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.headerTitle,\n        children: \"\\uD83C\\uDFCB\\uFE0F Street Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.statsContainer,\n        children: _jsxDEV(Text, {\n          style: styles.statsText,\n          children: [userStats.totalCompleted, \"/\", streetPrograms.length, \" \\u2022 \", userStats.totalXP, \" XP \\u2022 Tier \", userStats.currentTier]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      contentContainerStyle: {\n        minWidth: TREE_WIDTH + PADDING * 2\n      },\n      style: styles.horizontalScroll,\n      children: _jsxDEV(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          minHeight: TREE_HEIGHT + PADDING * 2,\n          paddingHorizontal: PADDING,\n          paddingVertical: PADDING\n        },\n        style: styles.verticalScroll,\n        children: _jsxDEV(View, {\n          style: styles.treeContainer,\n          children: [renderConnections(), streetPrograms.map(program => {\n            const state = getProgramState(program);\n            const progress = userProgress[program.id];\n            return _jsxDEV(View, {\n              style: [styles.nodeContainer, {\n                left: program.position.x * COLUMN_WIDTH + (COLUMN_WIDTH - NODE_SIZE) / 2,\n                top: program.position.y * ROW_HEIGHT + (ROW_HEIGHT - NODE_SIZE) / 2\n              }],\n              children: _jsxDEV(SkillNode, {\n                program: program,\n                state: state,\n                progress: progress,\n                onPress: () => handleNodePress(program),\n                onLongPress: () => handleNodeLongPress(program)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)\n            }, program.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.legend,\n      children: [_jsxDEV(View, {\n        style: styles.legendRow,\n        children: [_jsxDEV(Text, {\n          style: styles.legendItem,\n          children: \"\\uD83D\\uDD12 Verrouill\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.legendItem,\n          children: \"\\uD83D\\uDFE2 Disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.legendRow,\n        children: [_jsxDEV(Text, {\n          style: styles.legendItem,\n          children: \"\\uD83D\\uDFE1 En cours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.legendItem,\n          children: \"\\u2705 Compl\\xE9t\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), renderModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.background\n  },\n  loadingText: {\n    color: colors.textPrimary,\n    marginTop: 16,\n    fontSize: 16\n  },\n  header: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  statsContainer: {\n    alignItems: 'center'\n  },\n  statsText: {\n    fontSize: 14,\n    color: colors.textSecondary\n  },\n  horizontalScroll: {\n    flex: 1\n  },\n  verticalScroll: {\n    flex: 1\n  },\n  treeContainer: {\n    width: TREE_WIDTH,\n    height: TREE_HEIGHT,\n    position: 'relative'\n  },\n  nodeContainer: {\n    position: 'absolute',\n    width: NODE_SIZE,\n    height: NODE_SIZE\n  },\n  connectionLine: {\n    position: 'absolute',\n    height: 3,\n    borderRadius: 1.5,\n    zIndex: 1,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  legend: {\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n    backgroundColor: colors.surface\n  },\n  legendRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 4\n  },\n  legendItem: {\n    fontSize: 12,\n    color: colors.textSecondary\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  modalContent: {\n    backgroundColor: colors.surface,\n    borderRadius: 16,\n    padding: 24,\n    maxWidth: '90%',\n    maxHeight: '80%'\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  modalDifficulty: {\n    fontSize: 14,\n    color: colors.accent,\n    textAlign: 'center',\n    marginBottom: 16\n  },\n  modalDescription: {\n    fontSize: 14,\n    color: colors.textSecondary,\n    textAlign: 'center',\n    marginBottom: 20,\n    lineHeight: 20\n  },\n  modalSection: {\n    marginBottom: 16\n  },\n  modalSectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    marginBottom: 8\n  },\n  modalText: {\n    fontSize: 14,\n    color: colors.textSecondary,\n    marginBottom: 4\n  },\n  modalCloseButton: {\n    backgroundColor: colors.primary,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16\n  },\n  modalCloseText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});\nexport default SkillTreeScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","ScrollView","Dimensions","StyleSheet","Alert","TouchableOpacity","Modal","ActivityIndicator","SafeAreaView","collection","doc","getDocs","getDoc","query","where","db","useAuth","SkillNode","programs","colors","jsxDEV","_jsxDEV","width","screenWidth","height","screenHeight","get","NODE_SIZE","PADDING","COLUMN_WIDTH","Math","max","ROW_HEIGHT","TREE_WIDTH","TREE_HEIGHT","SkillTreeScreen","navigation","user","userId","uid","userProgress","setUserProgress","completedPrograms","setCompletedPrograms","loading","setLoading","dataLoaded","setDataLoaded","selectedProgram","setSelectedProgram","modalVisible","setModalVisible","userStats","setUserStats","totalCompleted","totalXP","currentTier","streetCategory","categories","find","cat","id","streetPrograms","loadUserData","progressQuery","progressSnapshot","progressData","forEach","data","programId","userDoc","userData","completed","length","reduce","sum","program","p","xpReward","isUnlocked","prerequisites","every","prereq","includes","position","tier","error","console","alert","getProgramState","isCompleted","progress","hasProgress","currentLevel","Object","keys","handleNodePress","state","missingPrereqs","filter","missingNames","map","prereqProgram","name","join","text","navigate","category","handleNodeLongPress","calculateConnectionLine","fromProgram","toProgram","fromX","x","fromY","y","toX","toY","deltaX","deltaY","distance","sqrt","angle","atan2","PI","left","top","transform","rotate","transformOrigin","renderConnections","connections","index","unlocks","unlockedId","unlockedProgram","lineStyle","fromState","toState","lineColor","border","opacity","success","primary","push","style","styles","connectionLine","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","renderModal","prereqNames","unlockNames","unlockProgram","visible","transparent","animationType","onRequestClose","children","modalOverlay","modalContent","modalTitle","icon","modalDifficulty","difficulty","modalDescription","description","modalSection","modalSectionTitle","modalText","totalWeeks","modalCloseButton","onPress","modalCloseText","loadingContainer","size","color","loadingText","container","header","headerTitle","statsContainer","statsText","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","minWidth","horizontalScroll","showsVerticalScrollIndicator","minHeight","paddingHorizontal","paddingVertical","verticalScroll","treeContainer","nodeContainer","onLongPress","legend","legendRow","legendItem","create","flex","background","justifyContent","alignItems","textPrimary","marginTop","fontSize","padding","borderBottomWidth","borderBottomColor","fontWeight","textAlign","marginBottom","textSecondary","borderRadius","zIndex","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopWidth","borderTopColor","surface","flexDirection","maxWidth","maxHeight","accent","lineHeight"],"sources":["C:/Users/robin/Documents/RpgHybrid/src/screens/SkillTreeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Dimensions,\r\n  StyleSheet,\r\n  Alert,\r\n  TouchableOpacity,\r\n  Modal,\r\n  ActivityIndicator,\r\n  SafeAreaView\r\n} from 'react-native';\r\nimport { collection, doc, getDocs, getDoc, query, where } from 'firebase/firestore';\r\nimport { db } from '../services/firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport SkillNode from '../components/SkillNode';\r\nimport programs from '../data/programs.json';\r\nimport { colors } from '../theme/colors';\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n\r\n// Dimensions responsives de l'arbre\r\nconst NODE_SIZE = 80;\r\nconst PADDING = 20;\r\n// Calcul responsive : largeur disponible / 5 colonnes\r\nconst COLUMN_WIDTH = Math.max(120, (screenWidth - PADDING * 2) / 5);\r\n// Hauteur adaptée pour 10 tiers\r\nconst ROW_HEIGHT = Math.max(140, COLUMN_WIDTH * 1.2);\r\nconst TREE_WIDTH = 5 * COLUMN_WIDTH;\r\nconst TREE_HEIGHT = 10 * ROW_HEIGHT;\r\n\r\nconst SkillTreeScreen = ({ navigation }) => {\r\n  const { user } = useAuth();\r\n  const userId = user?.uid;\r\n  const [userProgress, setUserProgress] = useState({});\r\n  const [completedPrograms, setCompletedPrograms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [selectedProgram, setSelectedProgram] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [userStats, setUserStats] = useState({\r\n    totalCompleted: 0,\r\n    totalXP: 0,\r\n    currentTier: 0\r\n  });\r\n\r\n  // Récupère la catégorie Street Workout\r\n  const streetCategory = programs.categories.find(cat => cat.id === 'street');\r\n  const streetPrograms = streetCategory?.programs || [];\r\n\r\n  // Charge les données utilisateur\r\n  const loadUserData = useCallback(async () => {\r\n    if (!userId) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Charge les progrès utilisateur\r\n      const progressQuery = query(\r\n        collection(db, 'userProgress'),\r\n        where('userId', '==', userId)\r\n      );\r\n      const progressSnapshot = await getDocs(progressQuery);\r\n      const progressData = {};\r\n      progressSnapshot.forEach(doc => {\r\n        const data = doc.data();\r\n        progressData[data.programId] = data;\r\n      });\r\n      setUserProgress(progressData);\r\n\r\n      // Charge les programmes complétés\r\n      const userDoc = await getDoc(doc(db, 'users', userId));\r\n      const userData = userDoc.data();\r\n      const completed = userData?.completedPrograms || [];\r\n      setCompletedPrograms(completed);\r\n\r\n      // Calcule les statistiques\r\n      const totalCompleted = completed.length;\r\n      const totalXP = completed.reduce((sum, programId) => {\r\n        const program = streetPrograms.find(p => p.id === programId);\r\n        return sum + (program?.xpReward || 0);\r\n      }, 0);\r\n\r\n      // Calcule le tier actuel (le plus haut tier débloqué)\r\n      let currentTier = 0;\r\n      streetPrograms.forEach(program => {\r\n        const isUnlocked = program.prerequisites.length === 0 || \r\n          program.prerequisites.every(prereq => completed.includes(prereq));\r\n        if (isUnlocked && program.position.tier > currentTier) {\r\n          currentTier = program.position.tier;\r\n        }\r\n      });\r\n\r\n      setUserStats({\r\n        totalCompleted,\r\n        totalXP,\r\n        currentTier\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des données:', error);\r\n      Alert.alert('Erreur', 'Impossible de charger vos progrès');\r\n    } finally {\r\n      setLoading(false);\r\n      setDataLoaded(true);\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (userId && !dataLoaded) {\r\n      loadUserData();\r\n    }\r\n  }, [userId]);\r\n\r\n  // Détermine l'état d'un programme\r\n  const getProgramState = useCallback((program) => {\r\n    const isCompleted = completedPrograms.includes(program.id);\r\n    const isUnlocked = program.prerequisites.length === 0 || \r\n      program.prerequisites.every(prereq => completedPrograms.includes(prereq));\r\n    const progress = userProgress[program.id];\r\n    const hasProgress = progress && progress.currentLevel > 0;\r\n\r\n    // Force \"Fondations Débutant\" comme débloqué pour nouveaux joueurs\r\n    if (program.id === 'beginner-foundation' && completedPrograms.length === 0 && Object.keys(userProgress).length === 0) {\r\n      return 'UNLOCKED';\r\n    }\r\n\r\n    if (isCompleted) return 'COMPLETED';\r\n    if (hasProgress) return 'IN_PROGRESS';\r\n    if (isUnlocked) return 'UNLOCKED';\r\n    return 'LOCKED';\r\n  }, [completedPrograms, userProgress]);\r\n\r\n  // Gère le tap sur un nœud\r\n  const handleNodePress = useCallback((program) => {\r\n    const state = getProgramState(program);\r\n    \r\n    // Déverrouillage spécial pour \"Fondations Débutant\" si c'est un nouveau joueur\r\n    if (program.id === 'beginner-foundation' && completedPrograms.length === 0 && Object.keys(userProgress).length === 0) {\r\n      setSelectedProgram(program);\r\n      setModalVisible(true);\r\n      return;\r\n    }\r\n    \r\n    if (state === 'LOCKED') {\r\n      const missingPrereqs = program.prerequisites.filter(\r\n        prereq => !completedPrograms.includes(prereq)\r\n      );\r\n      const missingNames = missingPrereqs.map(id => {\r\n        const prereqProgram = streetPrograms.find(p => p.id === id);\r\n        return prereqProgram?.name || id;\r\n      });\r\n\r\n      Alert.alert(\r\n        '🔒 Programme verrouillé',\r\n        `Vous devez d'abord compléter :\\n${missingNames.join('\\n')}`,\r\n        [{ text: 'OK' }]\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Navigation vers le détail du programme\r\n    navigation.navigate('ProgramDetail', {\r\n      program,\r\n      category: streetCategory,\r\n      userProgress: userProgress[program.id]\r\n    });\r\n  }, [getProgramState, completedPrograms, streetPrograms, navigation, streetCategory, userProgress]);\r\n\r\n  // Gère le long press sur un nœud\r\n  const handleNodeLongPress = useCallback((program) => {\r\n    setSelectedProgram(program);\r\n    setModalVisible(true);\r\n  }, []);\r\n\r\n  // Calcule la position d'une ligne entre deux nœuds (responsive)\r\n  const calculateConnectionLine = useCallback((fromProgram, toProgram) => {\r\n    // Positions responsives basées sur COLUMN_WIDTH et ROW_HEIGHT\r\n    const fromX = fromProgram.position.x * COLUMN_WIDTH + COLUMN_WIDTH / 2;\r\n    const fromY = fromProgram.position.y * ROW_HEIGHT + ROW_HEIGHT / 2;\r\n    const toX = toProgram.position.x * COLUMN_WIDTH + COLUMN_WIDTH / 2;\r\n    const toY = toProgram.position.y * ROW_HEIGHT + ROW_HEIGHT / 2;\r\n\r\n    const deltaX = toX - fromX;\r\n    const deltaY = toY - fromY;\r\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n    const angle = Math.atan2(deltaY, deltaX) * (180 / Math.PI);\r\n\r\n    return {\r\n      left: fromX,\r\n      top: fromY,\r\n      width: distance,\r\n      height: 3, // Ligne un peu plus épaisse pour la visibilité\r\n      transform: [{ rotate: `${angle}deg` }],\r\n      transformOrigin: '0 50%'\r\n    };\r\n  }, []);\r\n\r\n  // Rend les connexions entre les nœuds\r\n  const renderConnections = useCallback(() => {\r\n    const connections = [];\r\n\r\n    streetPrograms.forEach((program, index) => {\r\n      if (program.unlocks && program.unlocks.length > 0) {\r\n        program.unlocks.forEach(unlockedId => {\r\n          const unlockedProgram = streetPrograms.find(p => p.id === unlockedId);\r\n          if (unlockedProgram) {\r\n            const lineStyle = calculateConnectionLine(program, unlockedProgram);\r\n            const fromState = getProgramState(program);\r\n            const toState = getProgramState(unlockedProgram);\r\n            \r\n            // Couleur et opacité basées sur l'état des programmes\r\n            let lineColor = colors.border;\r\n            let opacity = 0.3;\r\n            \r\n            if (fromState === 'COMPLETED' && toState !== 'LOCKED') {\r\n              lineColor = colors.success;\r\n              opacity = 0.8;\r\n            } else if (fromState === 'COMPLETED' || fromState === 'IN_PROGRESS') {\r\n              lineColor = colors.primary;\r\n              opacity = 0.6;\r\n            }\r\n\r\n            connections.push(\r\n              <View\r\n                key={`${program.id}-${unlockedId}`}\r\n                style={[\r\n                  styles.connectionLine,\r\n                  {\r\n                    left: lineStyle.left,\r\n                    top: lineStyle.top,\r\n                    width: lineStyle.width,\r\n                    height: lineStyle.height,\r\n                    transform: lineStyle.transform,\r\n                    backgroundColor: lineColor,\r\n                    opacity\r\n                  }\r\n                ]}\r\n              />\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return connections;\r\n  }, [streetPrograms, calculateConnectionLine, getProgramState]);\r\n\r\n  // Modal de détails\r\n  const renderModal = () => {\r\n    if (!selectedProgram) return null;\r\n\r\n    const prereqNames = selectedProgram.prerequisites.map(id => {\r\n      const prereqProgram = streetPrograms.find(p => p.id === id);\r\n      return prereqProgram?.name || id;\r\n    });\r\n\r\n    const unlockNames = selectedProgram.unlocks?.map(id => {\r\n      const unlockProgram = streetPrograms.find(p => p.id === id);\r\n      return unlockProgram?.name || id;\r\n    }) || [];\r\n\r\n    return (\r\n      <Modal\r\n        visible={modalVisible}\r\n        transparent\r\n        animationType=\"fade\"\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>\r\n              {selectedProgram.icon} {selectedProgram.name}\r\n            </Text>\r\n            <Text style={styles.modalDifficulty}>\r\n              Difficulté: {selectedProgram.difficulty}\r\n            </Text>\r\n            <Text style={styles.modalDescription}>\r\n              {selectedProgram.description}\r\n            </Text>\r\n            \r\n            <View style={styles.modalSection}>\r\n              <Text style={styles.modalSectionTitle}>📊 Informations</Text>\r\n              <Text style={styles.modalText}>\r\n                Durée: {selectedProgram.totalWeeks} semaines\r\n              </Text>\r\n              <Text style={styles.modalText}>\r\n                Récompense XP: {selectedProgram.xpReward}\r\n              </Text>\r\n              <Text style={styles.modalText}>\r\n                Tier: {selectedProgram.position.tier}\r\n              </Text>\r\n            </View>\r\n\r\n            {prereqNames.length > 0 && (\r\n              <View style={styles.modalSection}>\r\n                <Text style={styles.modalSectionTitle}>🔒 Prérequis</Text>\r\n                {prereqNames.map(name => (\r\n                  <Text key={name} style={styles.modalText}>• {name}</Text>\r\n                ))}\r\n              </View>\r\n            )}\r\n\r\n            {unlockNames.length > 0 && (\r\n              <View style={styles.modalSection}>\r\n                <Text style={styles.modalSectionTitle}>🔓 Débloque</Text>\r\n                {unlockNames.map(name => (\r\n                  <Text key={name} style={styles.modalText}>• {name}</Text>\r\n                ))}\r\n              </View>\r\n            )}\r\n\r\n            <TouchableOpacity\r\n              style={styles.modalCloseButton}\r\n              onPress={() => setModalVisible(false)}\r\n            >\r\n              <Text style={styles.modalCloseText}>Fermer</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color={colors.primary} />\r\n        <Text style={styles.loadingText}>Chargement de votre arbre...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>🏋️ Street Workout</Text>\r\n        <View style={styles.statsContainer}>\r\n          <Text style={styles.statsText}>\r\n            {userStats.totalCompleted}/{streetPrograms.length} • {userStats.totalXP} XP • Tier {userStats.currentTier}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Arbre de compétences */}\r\n      <ScrollView\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={{ minWidth: TREE_WIDTH + PADDING * 2 }}\r\n        style={styles.horizontalScroll}\r\n      >\r\n        <ScrollView\r\n          showsVerticalScrollIndicator={false}\r\n          contentContainerStyle={{ minHeight: TREE_HEIGHT + PADDING * 2, paddingHorizontal: PADDING, paddingVertical: PADDING }}\r\n          style={styles.verticalScroll}\r\n        >\r\n          <View style={styles.treeContainer}>\r\n            {/* Connexions */}\r\n            {renderConnections()}\r\n\r\n            {/* Nœuds */}\r\n            {streetPrograms.map(program => {\r\n              const state = getProgramState(program);\r\n              const progress = userProgress[program.id];\r\n              \r\n              return (\r\n                <View\r\n                  key={program.id}\r\n                  style={[\r\n                    styles.nodeContainer,\r\n                    {\r\n                      left: program.position.x * COLUMN_WIDTH + (COLUMN_WIDTH - NODE_SIZE) / 2,\r\n                      top: program.position.y * ROW_HEIGHT + (ROW_HEIGHT - NODE_SIZE) / 2\r\n                    }\r\n                  ]}\r\n                >\r\n                  <SkillNode\r\n                    program={program}\r\n                    state={state}\r\n                    progress={progress}\r\n                    onPress={() => handleNodePress(program)}\r\n                    onLongPress={() => handleNodeLongPress(program)}\r\n                  />\r\n                </View>\r\n              );\r\n            })}\r\n          </View>\r\n        </ScrollView>\r\n      </ScrollView>\r\n\r\n      {/* Légende */}\r\n      <View style={styles.legend}>\r\n        <View style={styles.legendRow}>\r\n          <Text style={styles.legendItem}>🔒 Verrouillé</Text>\r\n          <Text style={styles.legendItem}>🟢 Disponible</Text>\r\n        </View>\r\n        <View style={styles.legendRow}>\r\n          <Text style={styles.legendItem}>🟡 En cours</Text>\r\n          <Text style={styles.legendItem}>✅ Complété</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Modal */}\r\n      {renderModal()}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: colors.background\r\n  },\r\n  loadingText: {\r\n    color: colors.textPrimary,\r\n    marginTop: 16,\r\n    fontSize: 16\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.border\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  statsContainer: {\r\n    alignItems: 'center'\r\n  },\r\n  statsText: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary\r\n  },\r\n  horizontalScroll: {\r\n    flex: 1\r\n  },\r\n  verticalScroll: {\r\n    flex: 1\r\n  },\r\n  treeContainer: {\r\n    width: TREE_WIDTH,\r\n    height: TREE_HEIGHT,\r\n    position: 'relative'\r\n  },\r\n  nodeContainer: {\r\n    position: 'absolute',\r\n    width: NODE_SIZE,\r\n    height: NODE_SIZE\r\n  },\r\n  connectionLine: {\r\n    position: 'absolute',\r\n    height: 3,\r\n    borderRadius: 1.5,\r\n    zIndex: 1,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    elevation: 2\r\n  },\r\n  legend: {\r\n    padding: 16,\r\n    borderTopWidth: 1,\r\n    borderTopColor: colors.border,\r\n    backgroundColor: colors.surface\r\n  },\r\n  legendRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginBottom: 4\r\n  },\r\n  legendItem: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20\r\n  },\r\n  modalContent: {\r\n    backgroundColor: colors.surface,\r\n    borderRadius: 16,\r\n    padding: 24,\r\n    maxWidth: '90%',\r\n    maxHeight: '80%'\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  modalDifficulty: {\r\n    fontSize: 14,\r\n    color: colors.accent,\r\n    textAlign: 'center',\r\n    marginBottom: 16\r\n  },\r\n  modalDescription: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n    lineHeight: 20\r\n  },\r\n  modalSection: {\r\n    marginBottom: 16\r\n  },\r\n  modalSectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    marginBottom: 8\r\n  },\r\n  modalText: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n    marginBottom: 4\r\n  },\r\n  modalCloseButton: {\r\n    backgroundColor: colors.primary,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginTop: 16\r\n  },\r\n  modalCloseText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: '600'\r\n  }\r\n});\r\n\r\nexport default SkillTreeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}