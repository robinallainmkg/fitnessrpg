{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Documents\\\\RpgHybrid\\\\src\\\\screens\\\\ProgressScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Card from \"react-native-paper/lib/module/components/Card/Card\";\nimport Text from \"react-native-paper/lib/module/components/Typography/Text\";\nimport ActivityIndicator from \"react-native-paper/lib/module/components/ActivityIndicator\";\nimport { LineChart } from 'react-native-chart-kit';\nimport { collection, query, where, orderBy, limit, getDocs } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\nimport { db } from '../services/firebase';\nimport { colors } from '../theme/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressScreen = () => {\n  const [workoutSessions, setWorkoutSessions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    user\n  } = useAuth();\n  const screenWidth = Dimensions.get('window').width;\n  useEffect(() => {\n    loadWorkoutSessions();\n  }, [user]);\n  const loadWorkoutSessions = async () => {\n    if (!user?.uid) return;\n    setLoading(true);\n    try {\n      const sessionsQuery = query(collection(db, 'workoutSessions'), where('userId', '==', user.uid), orderBy('createdAt', 'desc'), limit(10));\n      const snapshot = await getDocs(sessionsQuery);\n      const sessions = snapshot.docs.map(doc => Object.assign({\n        id: doc.id\n      }, doc.data(), {\n        createdAt: doc.data().createdAt?.toDate() || new Date()\n      }));\n      setWorkoutSessions(sessions.reverse());\n    } catch (error) {\n      console.error('Erreur chargement sessions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const calculateStats = () => {\n    if (workoutSessions.length === 0) {\n      return {\n        totalSessions: 0,\n        bestScore: 0,\n        averageScore: 0,\n        currentStreak: 0\n      };\n    }\n    const totalSessions = workoutSessions.length;\n    const scores = workoutSessions.map(session => session.score);\n    const bestScore = Math.max(...scores);\n    const averageScore = Math.round(scores.reduce((sum, score) => sum + score, 0) / scores.length);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    let currentStreak = 0;\n    let checkDate = new Date(today);\n    for (let i = 0; i < 30; i++) {\n      const hasSessionThisDay = workoutSessions.some(session => {\n        const sessionDate = new Date(session.createdAt);\n        sessionDate.setHours(0, 0, 0, 0);\n        return sessionDate.getTime() === checkDate.getTime();\n      });\n      if (hasSessionThisDay) {\n        currentStreak++;\n      } else if (currentStreak > 0) {\n        break;\n      }\n      checkDate.setDate(checkDate.getDate() - 1);\n    }\n    return {\n      totalSessions,\n      bestScore,\n      averageScore,\n      currentStreak\n    };\n  };\n  const prepareChartData = () => {\n    if (workoutSessions.length === 0) {\n      return {\n        labels: [],\n        datasets: [{\n          data: []\n        }]\n      };\n    }\n    const labels = workoutSessions.map(session => {\n      const date = new Date(session.createdAt);\n      return `${date.getDate()}/${date.getMonth() + 1}`;\n    });\n    const data = workoutSessions.map(session => session.score);\n    return {\n      labels,\n      datasets: [{\n        data,\n        color: (opacity = 1) => `rgba(108, 99, 255, ${opacity})`,\n        strokeWidth: 3\n      }]\n    };\n  };\n  const chartConfig = {\n    backgroundColor: colors.surface,\n    backgroundGradientFrom: colors.surface,\n    backgroundGradientTo: colors.surface,\n    decimalPlaces: 0,\n    color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n    labelColor: (opacity = 1) => `rgba(176, 176, 176, ${opacity})`,\n    style: {\n      borderRadius: 16\n    },\n    propsForDots: {\n      r: \"6\",\n      strokeWidth: \"2\",\n      stroke: colors.primary\n    }\n  };\n  const stats = calculateStats();\n  const chartData = prepareChartData();\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Chargement de vos statistiques...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: styles.content,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Vos Statistiques\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.statsGrid,\n      children: [_jsxDEV(Card, {\n        style: styles.statCard,\n        children: _jsxDEV(Card.Content, {\n          style: styles.statContent,\n          children: [_jsxDEV(Text, {\n            style: styles.statIcon,\n            children: \"\\uD83C\\uDFCB\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statValue,\n            children: stats.totalSessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"S\\xE9ances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), _jsxDEV(Card, {\n        style: styles.statCard,\n        children: _jsxDEV(Card.Content, {\n          style: styles.statContent,\n          children: [_jsxDEV(Text, {\n            style: styles.statIcon,\n            children: \"\\u2B50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statValue,\n            children: stats.bestScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Meilleur score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), _jsxDEV(Card, {\n        style: styles.statCard,\n        children: _jsxDEV(Card.Content, {\n          style: styles.statContent,\n          children: [_jsxDEV(Text, {\n            style: styles.statIcon,\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statValue,\n            children: stats.averageScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Moyenne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), _jsxDEV(Card, {\n        style: styles.statCard,\n        children: _jsxDEV(Card.Content, {\n          style: styles.statContent,\n          children: [_jsxDEV(Text, {\n            style: styles.statIcon,\n            children: \"\\uD83D\\uDD25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statValue,\n            children: stats.currentStreak\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Streak (jours)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), _jsxDEV(Card, {\n      style: styles.chartCard,\n      children: _jsxDEV(Card.Content, {\n        style: styles.chartContent,\n        children: [_jsxDEV(Text, {\n          style: styles.chartTitle,\n          children: \"\\xC9volution du score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), workoutSessions.length === 0 ? _jsxDEV(View, {\n          style: styles.noDataContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.noDataIcon,\n            children: \"\\uD83D\\uDCC8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.noDataTitle,\n            children: \"Aucune donn\\xE9e\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.noDataMessage,\n            children: \"Compl\\xE8te ta premi\\xE8re s\\xE9ance pour voir tes stats !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this) : _jsxDEV(View, {\n          style: styles.chartContainer,\n          children: _jsxDEV(LineChart, {\n            data: chartData,\n            width: screenWidth - 72,\n            height: 220,\n            chartConfig: chartConfig,\n            bezier: true,\n            style: styles.chart,\n            withInnerLines: false,\n            withOuterLines: false,\n            withDots: true,\n            withShadow: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), workoutSessions.length > 0 && _jsxDEV(Card, {\n      style: styles.historyCard,\n      children: _jsxDEV(Card.Content, {\n        style: styles.historyContent,\n        children: [_jsxDEV(Text, {\n          style: styles.historyTitle,\n          children: \"S\\xE9ances r\\xE9centes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), workoutSessions.slice(-5).reverse().map((session, index) => _jsxDEV(View, {\n          style: styles.sessionRow,\n          children: [_jsxDEV(View, {\n            style: styles.sessionInfo,\n            children: [_jsxDEV(Text, {\n              style: styles.sessionProgram,\n              children: [getProgramName(session.programId), \" - Niveau \", session.levelId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: styles.sessionDate,\n              children: formatDate(session.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), _jsxDEV(View, {\n            style: styles.sessionScore,\n            children: [_jsxDEV(Text, {\n              style: [styles.sessionScoreValue, {\n                color: getScoreColor(session.score)\n              }],\n              children: session.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: styles.sessionScoreLabel,\n              children: \"pts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)]\n        }, session.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\nconst getProgramName = programId => {\n  switch (programId) {\n    case 'muscleup':\n      return 'Muscle-Up';\n    default:\n      return 'Programme';\n  }\n};\nconst formatDate = date => {\n  const options = {\n    day: 'numeric',\n    month: 'short',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return date.toLocaleDateString('fr-FR', options);\n};\nconst getScoreColor = score => {\n  if (score >= 900) return colors.success;\n  if (score >= 800) return colors.warning;\n  return colors.error;\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  content: {\n    padding: 16\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.background\n  },\n  loadingText: {\n    marginTop: 16,\n    color: colors.textSecondary,\n    fontSize: 16\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 24,\n    textAlign: 'center'\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n    marginBottom: 24\n  },\n  statCard: {\n    backgroundColor: colors.surface,\n    flex: 1,\n    minWidth: '45%',\n    elevation: 4\n  },\n  statContent: {\n    alignItems: 'center',\n    padding: 16\n  },\n  statIcon: {\n    fontSize: 32,\n    marginBottom: 8\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 4\n  },\n  statLabel: {\n    fontSize: 12,\n    color: colors.textSecondary,\n    textAlign: 'center'\n  },\n  chartCard: {\n    backgroundColor: colors.surface,\n    marginBottom: 24,\n    elevation: 4\n  },\n  chartContent: {\n    padding: 20\n  },\n  chartTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  noDataContainer: {\n    alignItems: 'center',\n    padding: 40\n  },\n  noDataIcon: {\n    fontSize: 48,\n    marginBottom: 16\n  },\n  noDataTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 8\n  },\n  noDataMessage: {\n    fontSize: 14,\n    color: colors.textSecondary,\n    textAlign: 'center',\n    lineHeight: 20\n  },\n  chartContainer: {\n    alignItems: 'center'\n  },\n  chart: {\n    borderRadius: 16\n  },\n  historyCard: {\n    backgroundColor: colors.surface,\n    elevation: 4\n  },\n  historyContent: {\n    padding: 20\n  },\n  historyTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 16\n  },\n  sessionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border\n  },\n  sessionInfo: {\n    flex: 1\n  },\n  sessionProgram: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text,\n    marginBottom: 4\n  },\n  sessionDate: {\n    fontSize: 12,\n    color: colors.textSecondary\n  },\n  sessionScore: {\n    alignItems: 'flex-end'\n  },\n  sessionScoreValue: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  sessionScoreLabel: {\n    fontSize: 12,\n    color: colors.textSecondary\n  }\n});\nexport default ProgressScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","Dimensions","Card","Text","ActivityIndicator","LineChart","collection","query","where","orderBy","limit","getDocs","useAuth","db","colors","jsxDEV","_jsxDEV","ProgressScreen","workoutSessions","setWorkoutSessions","loading","setLoading","user","screenWidth","get","width","loadWorkoutSessions","uid","sessionsQuery","snapshot","sessions","docs","map","doc","Object","assign","id","data","createdAt","toDate","Date","reverse","error","console","calculateStats","length","totalSessions","bestScore","averageScore","currentStreak","scores","session","score","Math","max","round","reduce","sum","today","setHours","checkDate","i","hasSessionThisDay","some","sessionDate","getTime","setDate","getDate","prepareChartData","labels","datasets","date","getMonth","color","opacity","strokeWidth","chartConfig","backgroundColor","surface","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","style","borderRadius","propsForDots","r","stroke","primary","stats","chartData","styles","loadingContainer","children","size","fileName","_jsxFileName","lineNumber","columnNumber","loadingText","container","contentContainerStyle","content","title","statsGrid","statCard","Content","statContent","statIcon","statValue","statLabel","chartCard","chartContent","chartTitle","noDataContainer","noDataIcon","noDataTitle","noDataMessage","chartContainer","height","bezier","chart","withInnerLines","withOuterLines","withDots","withShadow","historyCard","historyContent","historyTitle","slice","index","sessionRow","sessionInfo","sessionProgram","getProgramName","programId","levelId","formatDate","sessionScore","sessionScoreValue","getScoreColor","sessionScoreLabel","options","day","month","hour","minute","toLocaleDateString","success","warning","create","flex","background","padding","justifyContent","alignItems","marginTop","textSecondary","fontSize","fontWeight","text","marginBottom","textAlign","flexDirection","flexWrap","gap","minWidth","elevation","lineHeight","paddingVertical","borderBottomWidth","borderBottomColor","border"],"sources":["C:/Users/robin/Documents/RpgHybrid/src/screens/ProgressScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Dimensions\r\n} from 'react-native';\r\nimport {\r\n  Card,\r\n  Text,\r\n  ActivityIndicator\r\n} from 'react-native-paper';\r\nimport { LineChart } from 'react-native-chart-kit';\r\nimport { collection, query, where, orderBy, limit, getDocs } from 'firebase/firestore';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db } from '../services/firebase';\r\nimport { colors } from '../theme/colors';\r\n\r\nconst ProgressScreen = () => {\r\n  const [workoutSessions, setWorkoutSessions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { user } = useAuth();\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  useEffect(() => {\r\n    loadWorkoutSessions();\r\n  }, [user]);\r\n\r\n  const loadWorkoutSessions = async () => {\r\n    if (!user?.uid) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const sessionsQuery = query(\r\n        collection(db, 'workoutSessions'),\r\n        where('userId', '==', user.uid),\r\n        orderBy('createdAt', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const snapshot = await getDocs(sessionsQuery);\r\n      const sessions = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        createdAt: doc.data().createdAt?.toDate() || new Date()\r\n      }));\r\n\r\n      setWorkoutSessions(sessions.reverse()); // Inverser pour avoir les plus anciennes en premier\r\n    } catch (error) {\r\n      console.error('Erreur chargement sessions:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = () => {\r\n    if (workoutSessions.length === 0) {\r\n      return {\r\n        totalSessions: 0,\r\n        bestScore: 0,\r\n        averageScore: 0,\r\n        currentStreak: 0\r\n      };\r\n    }\r\n\r\n    const totalSessions = workoutSessions.length;\r\n    const scores = workoutSessions.map(session => session.score);\r\n    const bestScore = Math.max(...scores);\r\n    const averageScore = Math.round(scores.reduce((sum, score) => sum + score, 0) / scores.length);\r\n\r\n    // Calcul simple du streak (jours consécutifs avec au moins une séance)\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    let currentStreak = 0;\r\n    let checkDate = new Date(today);\r\n\r\n    for (let i = 0; i < 30; i++) { // Vérifier les 30 derniers jours max\r\n      const hasSessionThisDay = workoutSessions.some(session => {\r\n        const sessionDate = new Date(session.createdAt);\r\n        sessionDate.setHours(0, 0, 0, 0);\r\n        return sessionDate.getTime() === checkDate.getTime();\r\n      });\r\n\r\n      if (hasSessionThisDay) {\r\n        currentStreak++;\r\n      } else if (currentStreak > 0) {\r\n        break; // Stop si on a déjà un streak et qu'on trouve un jour sans séance\r\n      }\r\n\r\n      checkDate.setDate(checkDate.getDate() - 1);\r\n    }\r\n\r\n    return {\r\n      totalSessions,\r\n      bestScore,\r\n      averageScore,\r\n      currentStreak\r\n    };\r\n  };\r\n\r\n  const prepareChartData = () => {\r\n    if (workoutSessions.length === 0) {\r\n      return {\r\n        labels: [],\r\n        datasets: [{\r\n          data: []\r\n        }]\r\n      };\r\n    }\r\n\r\n    const labels = workoutSessions.map(session => {\r\n      const date = new Date(session.createdAt);\r\n      return `${date.getDate()}/${date.getMonth() + 1}`;\r\n    });\r\n\r\n    const data = workoutSessions.map(session => session.score);\r\n\r\n    return {\r\n      labels,\r\n      datasets: [{\r\n        data,\r\n        color: (opacity = 1) => `rgba(108, 99, 255, ${opacity})`,\r\n        strokeWidth: 3\r\n      }]\r\n    };\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundColor: colors.surface,\r\n    backgroundGradientFrom: colors.surface,\r\n    backgroundGradientTo: colors.surface,\r\n    decimalPlaces: 0,\r\n    color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n    labelColor: (opacity = 1) => `rgba(176, 176, 176, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16\r\n    },\r\n    propsForDots: {\r\n      r: \"6\",\r\n      strokeWidth: \"2\",\r\n      stroke: colors.primary\r\n    }\r\n  };\r\n\r\n  const stats = calculateStats();\r\n  const chartData = prepareChartData();\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color={colors.primary} />\r\n        <Text style={styles.loadingText}>Chargement de vos statistiques...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container} contentContainerStyle={styles.content}>\r\n      <Text style={styles.title}>Vos Statistiques</Text>\r\n\r\n      {/* Stats globales */}\r\n      <View style={styles.statsGrid}>\r\n        <Card style={styles.statCard}>\r\n          <Card.Content style={styles.statContent}>\r\n            <Text style={styles.statIcon}>🏋️</Text>\r\n            <Text style={styles.statValue}>{stats.totalSessions}</Text>\r\n            <Text style={styles.statLabel}>Séances</Text>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        <Card style={styles.statCard}>\r\n          <Card.Content style={styles.statContent}>\r\n            <Text style={styles.statIcon}>⭐</Text>\r\n            <Text style={styles.statValue}>{stats.bestScore}</Text>\r\n            <Text style={styles.statLabel}>Meilleur score</Text>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        <Card style={styles.statCard}>\r\n          <Card.Content style={styles.statContent}>\r\n            <Text style={styles.statIcon}>📊</Text>\r\n            <Text style={styles.statValue}>{stats.averageScore}</Text>\r\n            <Text style={styles.statLabel}>Moyenne</Text>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        <Card style={styles.statCard}>\r\n          <Card.Content style={styles.statContent}>\r\n            <Text style={styles.statIcon}>🔥</Text>\r\n            <Text style={styles.statValue}>{stats.currentStreak}</Text>\r\n            <Text style={styles.statLabel}>Streak (jours)</Text>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n\r\n      {/* Graphique */}\r\n      <Card style={styles.chartCard}>\r\n        <Card.Content style={styles.chartContent}>\r\n          <Text style={styles.chartTitle}>Évolution du score</Text>\r\n          \r\n          {workoutSessions.length === 0 ? (\r\n            <View style={styles.noDataContainer}>\r\n              <Text style={styles.noDataIcon}>📈</Text>\r\n              <Text style={styles.noDataTitle}>Aucune donnée</Text>\r\n              <Text style={styles.noDataMessage}>\r\n                Complète ta première séance pour voir tes stats !\r\n              </Text>\r\n            </View>\r\n          ) : (\r\n            <View style={styles.chartContainer}>\r\n              <LineChart\r\n                data={chartData}\r\n                width={screenWidth - 72} // padding des cartes\r\n                height={220}\r\n                chartConfig={chartConfig}\r\n                bezier\r\n                style={styles.chart}\r\n                withInnerLines={false}\r\n                withOuterLines={false}\r\n                withDots={true}\r\n                withShadow={false}\r\n              />\r\n            </View>\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      {/* Historique récent */}\r\n      {workoutSessions.length > 0 && (\r\n        <Card style={styles.historyCard}>\r\n          <Card.Content style={styles.historyContent}>\r\n            <Text style={styles.historyTitle}>Séances récentes</Text>\r\n            \r\n            {workoutSessions.slice(-5).reverse().map((session, index) => (\r\n              <View key={session.id} style={styles.sessionRow}>\r\n                <View style={styles.sessionInfo}>\r\n                  <Text style={styles.sessionProgram}>\r\n                    {getProgramName(session.programId)} - Niveau {session.levelId}\r\n                  </Text>\r\n                  <Text style={styles.sessionDate}>\r\n                    {formatDate(session.createdAt)}\r\n                  </Text>\r\n                </View>\r\n                \r\n                <View style={styles.sessionScore}>\r\n                  <Text style={[\r\n                    styles.sessionScoreValue,\r\n                    { color: getScoreColor(session.score) }\r\n                  ]}>\r\n                    {session.score}\r\n                  </Text>\r\n                  <Text style={styles.sessionScoreLabel}>pts</Text>\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst getProgramName = (programId) => {\r\n  switch (programId) {\r\n    case 'muscleup':\r\n      return 'Muscle-Up';\r\n    default:\r\n      return 'Programme';\r\n  }\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  const options = { \r\n    day: 'numeric', \r\n    month: 'short', \r\n    hour: '2-digit', \r\n    minute: '2-digit' \r\n  };\r\n  return date.toLocaleDateString('fr-FR', options);\r\n};\r\n\r\nconst getScoreColor = (score) => {\r\n  if (score >= 900) return colors.success;\r\n  if (score >= 800) return colors.warning;\r\n  return colors.error;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n  content: {\r\n    padding: 16,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: colors.background,\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    color: colors.textSecondary,\r\n    fontSize: 16,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n    marginBottom: 24,\r\n    textAlign: 'center',\r\n  },\r\n  statsGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 12,\r\n    marginBottom: 24,\r\n  },\r\n  statCard: {\r\n    backgroundColor: colors.surface,\r\n    flex: 1,\r\n    minWidth: '45%',\r\n    elevation: 4,\r\n  },\r\n  statContent: {\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  statIcon: {\r\n    fontSize: 32,\r\n    marginBottom: 8,\r\n  },\r\n  statValue: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n    marginBottom: 4,\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary,\r\n    textAlign: 'center',\r\n  },\r\n  chartCard: {\r\n    backgroundColor: colors.surface,\r\n    marginBottom: 24,\r\n    elevation: 4,\r\n  },\r\n  chartContent: {\r\n    padding: 20,\r\n  },\r\n  chartTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n  },\r\n  noDataContainer: {\r\n    alignItems: 'center',\r\n    padding: 40,\r\n  },\r\n  noDataIcon: {\r\n    fontSize: 48,\r\n    marginBottom: 16,\r\n  },\r\n  noDataTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n    marginBottom: 8,\r\n  },\r\n  noDataMessage: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n    textAlign: 'center',\r\n    lineHeight: 20,\r\n  },\r\n  chartContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  chart: {\r\n    borderRadius: 16,\r\n  },\r\n  historyCard: {\r\n    backgroundColor: colors.surface,\r\n    elevation: 4,\r\n  },\r\n  historyContent: {\r\n    padding: 20,\r\n  },\r\n  historyTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n    marginBottom: 16,\r\n  },\r\n  sessionRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.border,\r\n  },\r\n  sessionInfo: {\r\n    flex: 1,\r\n  },\r\n  sessionProgram: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: colors.text,\r\n    marginBottom: 4,\r\n  },\r\n  sessionDate: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary,\r\n  },\r\n  sessionScore: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  sessionScoreValue: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  sessionScoreLabel: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary,\r\n  },\r\n});\r\n\r\nexport default ProgressScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}