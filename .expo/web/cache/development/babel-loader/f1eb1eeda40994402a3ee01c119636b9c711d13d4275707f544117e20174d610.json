{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Documents\\\\RpgHybrid\\\\src\\\\screens\\\\SkillTreeScreen.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-paper/lib/module/components/Modal\";\nimport Portal from \"react-native-paper/lib/module/components/Portal/Portal\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport Divider from \"react-native-paper/lib/module/components/Divider\";\nimport Badge from \"react-native-paper/lib/module/components/Badge\";\nimport IconButton from \"react-native-paper/lib/module/components/IconButton/IconButton\";\nimport { collection, doc, getDocs, getDoc, query, where } from 'firebase/firestore';\nimport { db } from '../services/firebase';\nimport { useAuth } from '../contexts/AuthContext';\nimport SkillNode from '../components/SkillNode';\nimport programs from '../data/programs.json';\nimport { colors } from '../theme/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  width: screenWidth,\n  height: screenHeight\n} = Dimensions.get('window');\nconst NODE_SIZE = 80;\nconst PADDING = 20;\nconst COLUMN_WIDTH = Math.max(120, (screenWidth - PADDING * 2) / 5);\nconst ROW_HEIGHT = Math.max(140, COLUMN_WIDTH * 1.2);\nconst TREE_WIDTH = 5 * COLUMN_WIDTH;\nconst TREE_HEIGHT = 10 * ROW_HEIGHT;\nconst SkillTreeScreen = ({\n  navigation\n}) => {\n  const {\n    user\n  } = useAuth();\n  const userId = user?.uid;\n  const [userProgress, setUserProgress] = useState({});\n  const [completedPrograms, setCompletedPrograms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [selectedProgram, setSelectedProgram] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const ADMIN_EMAILS = [];\n  const isAdmin = user?.email && ADMIN_EMAILS.includes(user.email);\n  const [userStats, setUserStats] = useState({\n    totalCompleted: 0,\n    totalXP: 0,\n    currentTier: 0\n  });\n  const streetCategory = programs.categories.find(cat => cat.id === 'street');\n  const streetPrograms = streetCategory?.programs || [];\n  const loadUserData = useCallback(async () => {\n    if (!userId) return;\n    try {\n      setLoading(true);\n      const progressQuery = query(collection(db, 'userProgress'), where('userId', '==', userId));\n      const progressSnapshot = await getDocs(progressQuery);\n      const progressData = {};\n      progressSnapshot.forEach(doc => {\n        const data = doc.data();\n        progressData[data.programId] = data;\n      });\n      setUserProgress(progressData);\n      const userDoc = await getDoc(doc(db, 'users', userId));\n      const userData = userDoc.data();\n      const completed = userData?.completedPrograms || [];\n      setCompletedPrograms(completed);\n      const totalCompleted = completed.length;\n      const totalXP = completed.reduce((sum, programId) => {\n        const program = streetPrograms.find(p => p.id === programId);\n        return sum + (program?.xpReward || 0);\n      }, 0);\n      let currentTier = 0;\n      streetPrograms.forEach(program => {\n        const isUnlocked = program.prerequisites.length === 0 || program.prerequisites.every(prereq => completed.includes(prereq));\n        if (isUnlocked && program.position.tier > currentTier) {\n          currentTier = program.position.tier;\n        }\n      });\n      setUserStats({\n        totalCompleted,\n        totalXP,\n        currentTier\n      });\n    } catch (error) {\n      console.error('Erreur lors du chargement des donn√©es:', error);\n      Alert.alert('Erreur', 'Impossible de charger vos progr√®s');\n    } finally {\n      setLoading(false);\n      setDataLoaded(true);\n    }\n  }, [userId]);\n  useEffect(() => {\n    if (userId && !dataLoaded) {\n      loadUserData();\n    }\n  }, [userId]);\n  const getProgramState = useCallback(program => {\n    const isCompleted = completedPrograms.includes(program.id);\n    const isUnlocked = program.prerequisites.length === 0 || program.prerequisites.every(prereq => completedPrograms.includes(prereq));\n    const progress = userProgress[program.id];\n    const hasProgress = progress && progress.currentLevel > 0;\n    if (isAdmin) {\n      if (isCompleted) return 'COMPLETED';\n      if (hasProgress) return 'IN_PROGRESS';\n      return 'UNLOCKED';\n    }\n    if (program.id === 'beginner-foundation') {\n      if (isCompleted) return 'COMPLETED';\n      if (hasProgress) return 'IN_PROGRESS';\n      return 'UNLOCKED';\n    }\n    if (isCompleted) return 'COMPLETED';\n    if (hasProgress) return 'IN_PROGRESS';\n    if (isUnlocked) return 'UNLOCKED';\n    return 'LOCKED';\n  }, [completedPrograms, userProgress, isAdmin]);\n  const handleNodePress = useCallback(program => {\n    console.log('üî• CLIC D√âTECT√â sur:', program.name, 'ID:', program.id);\n    const state = getProgramState(program);\n    const isUnlocked = state === 'UNLOCKED' || state === 'IN_PROGRESS' || state === 'COMPLETED';\n    const progress = userProgress[program.id];\n    console.log('üî• Clic sur programme:', program.name, '√âtat:', state, 'D√©bloqu√©:', isUnlocked);\n    navigation.navigate('ProgramDetail', {\n      program,\n      category: streetCategory?.name || 'Street Workout',\n      userProgress: progress || null,\n      isLocked: !isUnlocked,\n      programState: state,\n      completedPrograms,\n      allPrograms: streetPrograms\n    });\n  }, [getProgramState, completedPrograms, streetPrograms, navigation, streetCategory, userProgress]);\n  const handleNodeLongPress = useCallback(program => {\n    setSelectedProgram(program);\n    setModalVisible(true);\n  }, []);\n  const calculateConnectionLine = useCallback((fromProgram, toProgram) => {\n    const SKILLNODE_MARGIN = 8;\n    const SKILLNODE_CONTAINER_WIDTH = 100;\n    const fromContainerX = fromProgram.position.x * COLUMN_WIDTH + (COLUMN_WIDTH - SKILLNODE_CONTAINER_WIDTH) / 2 + PADDING;\n    const fromContainerY = fromProgram.position.y * ROW_HEIGHT + (ROW_HEIGHT - NODE_SIZE) / 2 + PADDING;\n    const toContainerX = toProgram.position.x * COLUMN_WIDTH + (COLUMN_WIDTH - SKILLNODE_CONTAINER_WIDTH) / 2 + PADDING;\n    const toContainerY = toProgram.position.y * ROW_HEIGHT + (ROW_HEIGHT - NODE_SIZE) / 2 + PADDING;\n    const nodeOffset = (SKILLNODE_CONTAINER_WIDTH - NODE_SIZE) / 2 + 5;\n    const fromCenterX = fromContainerX + nodeOffset + NODE_SIZE / 2;\n    const fromCenterY = fromContainerY + SKILLNODE_MARGIN + NODE_SIZE / 2;\n    const toCenterX = toContainerX + nodeOffset + NODE_SIZE / 2;\n    const toCenterY = toContainerY + SKILLNODE_MARGIN + NODE_SIZE / 2;\n    const deltaX = toCenterX - fromCenterX;\n    const deltaY = toCenterY - fromCenterY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const angle = Math.atan2(deltaY, deltaX) * (180 / Math.PI);\n    return {\n      position: 'absolute',\n      left: fromCenterX,\n      top: fromCenterY - 2,\n      width: distance,\n      height: 4,\n      backgroundColor: 'transparent',\n      transform: `rotate(${angle}deg)`,\n      transformOrigin: '0 50%',\n      zIndex: 0\n    };\n  }, []);\n  const renderConnections = useCallback(() => {\n    const connections = [];\n    streetPrograms.forEach((program, index) => {\n      if (program.unlocks && program.unlocks.length > 0) {\n        program.unlocks.forEach(unlockedId => {\n          const unlockedProgram = streetPrograms.find(p => p.id === unlockedId);\n          if (unlockedProgram) {\n            const lineStyle = calculateConnectionLine(program, unlockedProgram);\n            const fromState = getProgramState(program);\n            const toState = getProgramState(unlockedProgram);\n            let lineColor = colors.border;\n            let opacity = 0.5;\n            if (fromState === 'COMPLETED' && toState !== 'LOCKED') {\n              lineColor = colors.success;\n              opacity = 0.9;\n            } else if (fromState === 'COMPLETED' || fromState === 'IN_PROGRESS') {\n              lineColor = colors.primary;\n              opacity = 0.8;\n            } else if (fromState === 'UNLOCKED' || toState === 'UNLOCKED') {\n              lineColor = colors.secondary;\n              opacity = 0.7;\n            }\n            connections.push(_jsxDEV(View, {\n              style: [lineStyle, {\n                backgroundColor: lineColor,\n                opacity,\n                borderRadius: 2,\n                shadowColor: '#000',\n                shadowOffset: {\n                  width: 0,\n                  height: 1\n                },\n                shadowOpacity: 0.3,\n                shadowRadius: 2,\n                elevation: 2\n              }]\n            }, `${program.id}-${unlockedId}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this));\n          }\n        });\n      }\n    });\n    return connections;\n  }, [streetPrograms, calculateConnectionLine, getProgramState]);\n  const renderModal = () => {\n    console.log('üîç renderModal appel√©:', {\n      selectedProgram: selectedProgram?.name,\n      modalVisible,\n      hasSelectedProgram: !!selectedProgram\n    });\n    if (!selectedProgram) {\n      console.log('‚ùå Modal not rendered: selectedProgram is null');\n      return null;\n    }\n    const prereqNames = selectedProgram.prerequisites.map(id => {\n      const prereqProgram = streetPrograms.find(p => p.id === id);\n      return prereqProgram?.name || id;\n    });\n    const unlockNames = selectedProgram.unlocks?.map(id => {\n      const unlockProgram = streetPrograms.find(p => p.id === id);\n      return unlockProgram?.name || id;\n    }) || [];\n    return _jsxDEV(Modal, {\n      visible: modalVisible,\n      transparent: true,\n      animationType: \"fade\",\n      onRequestClose: () => setModalVisible(false),\n      children: _jsxDEV(View, {\n        style: styles.modalOverlay,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: [selectedProgram.icon, \" \", selectedProgram.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.modalDifficulty,\n            children: [\"Difficult\\xE9: \", selectedProgram.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.modalDescription,\n            children: selectedProgram.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.modalSection,\n            children: [_jsxDEV(Text, {\n              style: styles.modalSectionTitle,\n              children: \"\\uD83D\\uDCCA Informations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"Dur\\xE9e: \", selectedProgram.totalWeeks, \" semaines\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"R\\xE9compense XP: \", selectedProgram.xpReward]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"Tier: \", selectedProgram.position.tier]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), prereqNames.length > 0 && _jsxDEV(View, {\n            style: styles.modalSection,\n            children: [_jsxDEV(Text, {\n              style: styles.modalSectionTitle,\n              children: \"\\uD83D\\uDD12 Pr\\xE9requis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), prereqNames.map(name => _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"\\u2022 \", name]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), unlockNames.length > 0 && _jsxDEV(View, {\n            style: styles.modalSection,\n            children: [_jsxDEV(Text, {\n              style: styles.modalSectionTitle,\n              children: \"\\uD83D\\uDD13 D\\xE9bloque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), unlockNames.map(name => _jsxDEV(Text, {\n              style: styles.modalText,\n              children: [\"\\u2022 \", name]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), (selectedProgram.id === 'beginner-foundation' || getProgramState(selectedProgram) !== 'LOCKED') && _jsxDEV(TouchableOpacity, {\n            style: styles.modalStartButton,\n            onPress: () => {\n              setModalVisible(false);\n              navigation.navigate('ProgramDetail', {\n                program: selectedProgram,\n                category: streetCategory?.name || 'Street Workout',\n                userProgress: userProgress[selectedProgram.id]\n              });\n            },\n            children: _jsxDEV(Text, {\n              style: styles.modalStartText,\n              children: selectedProgram.id === 'beginner-foundation' ? 'Commencer maintenant üöÄ' : 'Commencer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.modalCloseButton,\n            onPress: () => setModalVisible(false),\n            children: _jsxDEV(Text, {\n              style: styles.modalCloseText,\n              children: \"Fermer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Chargement de votre arbre...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.headerTitle,\n        children: \"\\uD83C\\uDFCB\\uFE0F Street Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.statsContainer,\n        children: _jsxDEV(Text, {\n          style: styles.statsText,\n          children: [userStats.totalCompleted, \"/\", streetPrograms.length, \" \\u2022 \", userStats.totalXP, \" XP \\u2022 Tier \", userStats.currentTier]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), isAdmin && _jsxDEV(View, {\n      style: styles.adminBadge,\n      children: _jsxDEV(Text, {\n        style: styles.adminText,\n        children: \"\\uD83D\\uDC51 MODE ADMIN - Tous les programmes d\\xE9bloqu\\xE9s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this), _jsxDEV(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      contentContainerStyle: {\n        minWidth: TREE_WIDTH + PADDING * 2\n      },\n      style: styles.horizontalScroll,\n      children: _jsxDEV(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          minHeight: TREE_HEIGHT + PADDING * 2,\n          paddingHorizontal: PADDING,\n          paddingVertical: PADDING\n        },\n        style: styles.verticalScroll,\n        children: _jsxDEV(View, {\n          style: styles.treeContainer,\n          children: [renderConnections(), streetPrograms.map(program => {\n            let state = getProgramState(program);\n            const progress = userProgress[program.id];\n            if (program.id === 'beginner-foundation') {\n              state = progress && progress.currentLevel > 0 ? 'IN_PROGRESS' : completedPrograms.includes(program.id) ? 'COMPLETED' : 'UNLOCKED';\n            }\n            return _jsxDEV(View, {\n              style: [styles.nodeContainer, {\n                left: program.position.x * COLUMN_WIDTH + (COLUMN_WIDTH - 100) / 2 + PADDING,\n                top: program.position.y * ROW_HEIGHT + (ROW_HEIGHT - NODE_SIZE) / 2 + PADDING\n              }],\n              children: _jsxDEV(SkillNode, {\n                program: program,\n                state: state,\n                progress: progress,\n                onPress: () => handleNodePress(program),\n                onLongPress: () => handleNodeLongPress(program)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this)\n            }, program.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.legend,\n      children: [_jsxDEV(View, {\n        style: styles.legendRow,\n        children: [_jsxDEV(Text, {\n          style: styles.legendItem,\n          children: \"\\uD83D\\uDD12 Verrouill\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.legendItem,\n          children: \"\\uD83D\\uDFE2 Disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.legendRow,\n        children: [_jsxDEV(Text, {\n          style: styles.legendItem,\n          children: \"\\uD83D\\uDFE1 En cours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.legendItem,\n          children: \"\\u2705 Compl\\xE9t\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), renderModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.background\n  },\n  loadingText: {\n    color: colors.textPrimary,\n    marginTop: 16,\n    fontSize: 16\n  },\n  header: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  statsContainer: {\n    alignItems: 'center'\n  },\n  statsText: {\n    fontSize: 14,\n    color: colors.textSecondary\n  },\n  horizontalScroll: {\n    flex: 1\n  },\n  verticalScroll: {\n    flex: 1\n  },\n  treeContainer: {\n    width: TREE_WIDTH,\n    height: TREE_HEIGHT,\n    position: 'relative'\n  },\n  nodeContainer: {\n    position: 'absolute',\n    width: NODE_SIZE,\n    height: NODE_SIZE,\n    zIndex: 10\n  },\n  connectionLine: {\n    position: 'absolute',\n    height: 4,\n    borderRadius: 2,\n    zIndex: 1,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 3,\n    elevation: 3,\n    borderWidth: 0.5,\n    borderColor: 'rgba(255, 255, 255, 0.1)'\n  },\n  legend: {\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n    backgroundColor: colors.surface\n  },\n  legendRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 4\n  },\n  legendItem: {\n    fontSize: 12,\n    color: colors.textSecondary\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  modalContent: {\n    backgroundColor: colors.surface,\n    borderRadius: 16,\n    padding: 24,\n    maxWidth: '90%',\n    maxHeight: '80%'\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  modalDifficulty: {\n    fontSize: 14,\n    color: colors.accent,\n    textAlign: 'center',\n    marginBottom: 16\n  },\n  modalDescription: {\n    fontSize: 14,\n    color: colors.textSecondary,\n    textAlign: 'center',\n    marginBottom: 20,\n    lineHeight: 20\n  },\n  modalSection: {\n    marginBottom: 16\n  },\n  modalSectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    marginBottom: 8\n  },\n  modalText: {\n    fontSize: 14,\n    color: colors.textSecondary,\n    marginBottom: 4\n  },\n  modalStartButton: {\n    backgroundColor: colors.success,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16\n  },\n  modalStartText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  modalCloseButton: {\n    backgroundColor: colors.border,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 12\n  },\n  modalCloseText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  adminBadge: {\n    backgroundColor: colors.success,\n    marginHorizontal: 16,\n    marginVertical: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  adminText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default SkillTreeScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","ScrollView","Dimensions","StyleSheet","Alert","TouchableOpacity","ActivityIndicator","SafeAreaView","Modal","Portal","Button","Divider","Badge","IconButton","collection","doc","getDocs","getDoc","query","where","db","useAuth","SkillNode","programs","colors","jsxDEV","_jsxDEV","width","screenWidth","height","screenHeight","get","NODE_SIZE","PADDING","COLUMN_WIDTH","Math","max","ROW_HEIGHT","TREE_WIDTH","TREE_HEIGHT","SkillTreeScreen","navigation","user","userId","uid","userProgress","setUserProgress","completedPrograms","setCompletedPrograms","loading","setLoading","dataLoaded","setDataLoaded","selectedProgram","setSelectedProgram","modalVisible","setModalVisible","ADMIN_EMAILS","isAdmin","email","includes","userStats","setUserStats","totalCompleted","totalXP","currentTier","streetCategory","categories","find","cat","id","streetPrograms","loadUserData","progressQuery","progressSnapshot","progressData","forEach","data","programId","userDoc","userData","completed","length","reduce","sum","program","p","xpReward","isUnlocked","prerequisites","every","prereq","position","tier","error","console","alert","getProgramState","isCompleted","progress","hasProgress","currentLevel","handleNodePress","log","name","state","navigate","category","isLocked","programState","allPrograms","handleNodeLongPress","calculateConnectionLine","fromProgram","toProgram","SKILLNODE_MARGIN","SKILLNODE_CONTAINER_WIDTH","fromContainerX","x","fromContainerY","y","toContainerX","toContainerY","nodeOffset","fromCenterX","fromCenterY","toCenterX","toCenterY","deltaX","deltaY","distance","sqrt","angle","atan2","PI","left","top","backgroundColor","transform","transformOrigin","zIndex","renderConnections","connections","index","unlocks","unlockedId","unlockedProgram","lineStyle","fromState","toState","lineColor","border","opacity","success","primary","secondary","push","style","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fileName","_jsxFileName","lineNumber","columnNumber","renderModal","hasSelectedProgram","prereqNames","map","prereqProgram","unlockNames","unlockProgram","visible","transparent","animationType","onRequestClose","children","styles","modalOverlay","modalContent","modalTitle","icon","modalDifficulty","difficulty","modalDescription","description","modalSection","modalSectionTitle","modalText","totalWeeks","modalStartButton","onPress","modalStartText","modalCloseButton","modalCloseText","loadingContainer","size","color","loadingText","container","header","headerTitle","statsContainer","statsText","adminBadge","adminText","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","minWidth","horizontalScroll","showsVerticalScrollIndicator","minHeight","paddingHorizontal","paddingVertical","verticalScroll","treeContainer","nodeContainer","onLongPress","legend","legendRow","legendItem","create","flex","background","justifyContent","alignItems","textPrimary","marginTop","fontSize","padding","borderBottomWidth","borderBottomColor","fontWeight","textAlign","marginBottom","textSecondary","connectionLine","borderWidth","borderColor","borderTopWidth","borderTopColor","surface","flexDirection","maxWidth","maxHeight","accent","lineHeight","marginHorizontal","marginVertical"],"sources":["C:/Users/robin/Documents/RpgHybrid/src/screens/SkillTreeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Dimensions,\r\n  StyleSheet,\r\n  Alert,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  SafeAreaView\r\n} from 'react-native';\r\nimport { Modal, Portal, Button, Divider, Badge, IconButton } from 'react-native-paper';\r\nimport { collection, doc, getDocs, getDoc, query, where } from 'firebase/firestore';\r\nimport { db } from '../services/firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport SkillNode from '../components/SkillNode';\r\nimport programs from '../data/programs.json';\r\nimport { colors } from '../theme/colors';\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n\r\n// Dimensions responsives de l'arbre\r\nconst NODE_SIZE = 80;\r\nconst PADDING = 20;\r\n// Calcul responsive : largeur disponible / 5 colonnes\r\nconst COLUMN_WIDTH = Math.max(120, (screenWidth - PADDING * 2) / 5);\r\n// Hauteur adapt√©e pour 10 tiers\r\nconst ROW_HEIGHT = Math.max(140, COLUMN_WIDTH * 1.2);\r\nconst TREE_WIDTH = 5 * COLUMN_WIDTH;\r\nconst TREE_HEIGHT = 10 * ROW_HEIGHT;\r\n\r\nconst SkillTreeScreen = ({ navigation }) => {\r\n  const { user } = useAuth();\r\n  const userId = user?.uid;\r\n  const [userProgress, setUserProgress] = useState({});\r\n  const [completedPrograms, setCompletedPrograms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [selectedProgram, setSelectedProgram] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  \r\n  // Mode Admin - emails autoris√©s (actuellement d√©sactiv√©)\r\n  const ADMIN_EMAILS = []; // Vide pour d√©sactiver le mode admin\r\n  const isAdmin = user?.email && ADMIN_EMAILS.includes(user.email);\r\n  const [userStats, setUserStats] = useState({\r\n    totalCompleted: 0,\r\n    totalXP: 0,\r\n    currentTier: 0\r\n  });\r\n\r\n  // R√©cup√®re la cat√©gorie Street Workout\r\n  const streetCategory = programs.categories.find(cat => cat.id === 'street');\r\n  const streetPrograms = streetCategory?.programs || [];\r\n\r\n  // Charge les donn√©es utilisateur\r\n  const loadUserData = useCallback(async () => {\r\n    if (!userId) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Charge les progr√®s utilisateur\r\n      const progressQuery = query(\r\n        collection(db, 'userProgress'),\r\n        where('userId', '==', userId)\r\n      );\r\n      const progressSnapshot = await getDocs(progressQuery);\r\n      const progressData = {};\r\n      progressSnapshot.forEach(doc => {\r\n        const data = doc.data();\r\n        progressData[data.programId] = data;\r\n      });\r\n      setUserProgress(progressData);\r\n\r\n      // Charge les programmes compl√©t√©s\r\n      const userDoc = await getDoc(doc(db, 'users', userId));\r\n      const userData = userDoc.data();\r\n      const completed = userData?.completedPrograms || [];\r\n      setCompletedPrograms(completed);\r\n\r\n      // Calcule les statistiques\r\n      const totalCompleted = completed.length;\r\n      const totalXP = completed.reduce((sum, programId) => {\r\n        const program = streetPrograms.find(p => p.id === programId);\r\n        return sum + (program?.xpReward || 0);\r\n      }, 0);\r\n\r\n      // Calcule le tier actuel (le plus haut tier d√©bloqu√©)\r\n      let currentTier = 0;\r\n      streetPrograms.forEach(program => {\r\n        const isUnlocked = program.prerequisites.length === 0 || \r\n          program.prerequisites.every(prereq => completed.includes(prereq));\r\n        if (isUnlocked && program.position.tier > currentTier) {\r\n          currentTier = program.position.tier;\r\n        }\r\n      });\r\n\r\n      setUserStats({\r\n        totalCompleted,\r\n        totalXP,\r\n        currentTier\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des donn√©es:', error);\r\n      Alert.alert('Erreur', 'Impossible de charger vos progr√®s');\r\n    } finally {\r\n      setLoading(false);\r\n      setDataLoaded(true);\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (userId && !dataLoaded) {\r\n      loadUserData();\r\n    }\r\n  }, [userId]);\r\n\r\n  // D√©termine l'√©tat d'un programme\r\n  const getProgramState = useCallback((program) => {\r\n    const isCompleted = completedPrograms.includes(program.id);\r\n    const isUnlocked = program.prerequisites.length === 0 || \r\n      program.prerequisites.every(prereq => completedPrograms.includes(prereq));\r\n    const progress = userProgress[program.id];\r\n    const hasProgress = progress && progress.currentLevel > 0;\r\n\r\n    // MODE ADMIN : Tout est d√©bloqu√© !\r\n    if (isAdmin) {\r\n      if (isCompleted) return 'COMPLETED';\r\n      if (hasProgress) return 'IN_PROGRESS';\r\n      return 'UNLOCKED'; // Admin = tout d√©bloqu√©\r\n    }\r\n\r\n    // Force TOUJOURS \"Fondations D√©butant\" comme d√©bloqu√© (programme de base)\r\n    if (program.id === 'beginner-foundation') {\r\n      if (isCompleted) return 'COMPLETED';\r\n      if (hasProgress) return 'IN_PROGRESS';\r\n      return 'UNLOCKED'; // Toujours d√©bloqu√©\r\n    }\r\n\r\n    if (isCompleted) return 'COMPLETED';\r\n    if (hasProgress) return 'IN_PROGRESS';\r\n    if (isUnlocked) return 'UNLOCKED';\r\n    return 'LOCKED';\r\n  }, [completedPrograms, userProgress, isAdmin]);\r\n\r\n  // G√®re le tap sur un n≈ìud\r\n  const handleNodePress = useCallback((program) => {\r\n    console.log('üî• CLIC D√âTECT√â sur:', program.name, 'ID:', program.id);\r\n    \r\n    const state = getProgramState(program);\r\n    const isUnlocked = state === 'UNLOCKED' || state === 'IN_PROGRESS' || state === 'COMPLETED';\r\n    const progress = userProgress[program.id];\r\n    \r\n    console.log('üî• Clic sur programme:', program.name, '√âtat:', state, 'D√©bloqu√©:', isUnlocked);\r\n    \r\n    // Navigate dans TOUS les cas (locked ou unlocked)\r\n    navigation.navigate('ProgramDetail', {\r\n      program,\r\n      category: streetCategory?.name || 'Street Workout',\r\n      userProgress: progress || null,\r\n      isLocked: !isUnlocked, // NOUVEAU : passe l'info locked/unlocked\r\n      programState: state,\r\n      completedPrograms,\r\n      allPrograms: streetPrograms\r\n    });\r\n  }, [getProgramState, completedPrograms, streetPrograms, navigation, streetCategory, userProgress]);\r\n\r\n  // G√®re le long press sur un n≈ìud\r\n  const handleNodeLongPress = useCallback((program) => {\r\n    setSelectedProgram(program);\r\n    setModalVisible(true);\r\n  }, []);\r\n\r\n  // Calcul pr√©cis des positions de lignes avec compensation des marges SkillNode\r\n  const calculateConnectionLine = useCallback((fromProgram, toProgram) => {\r\n    // Position du container SkillNode (avec width: 100 et margin: 8)\r\n    const SKILLNODE_MARGIN = 8;\r\n    const SKILLNODE_CONTAINER_WIDTH = 100;\r\n    \r\n    // Position de base de chaque container SkillNode\r\n    const fromContainerX = fromProgram.position.x * COLUMN_WIDTH + (COLUMN_WIDTH - SKILLNODE_CONTAINER_WIDTH) / 2 + PADDING;\r\n    const fromContainerY = fromProgram.position.y * ROW_HEIGHT + (ROW_HEIGHT - NODE_SIZE) / 2 + PADDING;\r\n    const toContainerX = toProgram.position.x * COLUMN_WIDTH + (COLUMN_WIDTH - SKILLNODE_CONTAINER_WIDTH) / 2 + PADDING;\r\n    const toContainerY = toProgram.position.y * ROW_HEIGHT + (ROW_HEIGHT - NODE_SIZE) / 2 + PADDING;\r\n    \r\n    // Centre du n≈ìud circulaire (80x80) dans le container (100 width)\r\n    // Le n≈ìud est centr√© dans son container, donc offset de (100-80)/2 = 10px\r\n    // Ajustement de quelques pixels vers la droite pour un alignement parfait\r\n    const nodeOffset = (SKILLNODE_CONTAINER_WIDTH - NODE_SIZE) / 2 + 5; // +5px vers la droite\r\n    \r\n    const fromCenterX = fromContainerX + nodeOffset + NODE_SIZE / 2;\r\n    const fromCenterY = fromContainerY + SKILLNODE_MARGIN + NODE_SIZE / 2;\r\n    const toCenterX = toContainerX + nodeOffset + NODE_SIZE / 2;\r\n    const toCenterY = toContainerY + SKILLNODE_MARGIN + NODE_SIZE / 2;\r\n\r\n    // Calcul de la ligne\r\n    const deltaX = toCenterX - fromCenterX;\r\n    const deltaY = toCenterY - fromCenterY;\r\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n    const angle = Math.atan2(deltaY, deltaX) * (180 / Math.PI);\r\n\r\n    return {\r\n      position: 'absolute',\r\n      left: fromCenterX,\r\n      top: fromCenterY - 2, // Centrer la ligne verticalement\r\n      width: distance,\r\n      height: 4,\r\n      backgroundColor: 'transparent', // Sera d√©fini dans le rendu\r\n      transform: `rotate(${angle}deg)`,\r\n      transformOrigin: '0 50%',\r\n      zIndex: 0 // Derri√®re les n≈ìuds\r\n    };\r\n  }, []);\r\n\r\n  // Rend les connexions entre les n≈ìuds\r\n  const renderConnections = useCallback(() => {\r\n    const connections = [];\r\n\r\n    streetPrograms.forEach((program, index) => {\r\n      if (program.unlocks && program.unlocks.length > 0) {\r\n        program.unlocks.forEach(unlockedId => {\r\n          const unlockedProgram = streetPrograms.find(p => p.id === unlockedId);\r\n          if (unlockedProgram) {\r\n            const lineStyle = calculateConnectionLine(program, unlockedProgram);\r\n            const fromState = getProgramState(program);\r\n            const toState = getProgramState(unlockedProgram);\r\n            \r\n            // Couleur et opacit√© bas√©es sur l'√©tat des programmes\r\n            let lineColor = colors.border;\r\n            let opacity = 0.5; // Plus visible pour debug\r\n            \r\n            if (fromState === 'COMPLETED' && toState !== 'LOCKED') {\r\n              lineColor = colors.success;\r\n              opacity = 0.9;\r\n            } else if (fromState === 'COMPLETED' || fromState === 'IN_PROGRESS') {\r\n              lineColor = colors.primary;\r\n              opacity = 0.8;\r\n            } else if (fromState === 'UNLOCKED' || toState === 'UNLOCKED') {\r\n              lineColor = colors.secondary;\r\n              opacity = 0.7;\r\n            }\r\n\r\n            connections.push(\r\n              <View\r\n                key={`${program.id}-${unlockedId}`}\r\n                style={[\r\n                  lineStyle,\r\n                  {\r\n                    backgroundColor: lineColor,\r\n                    opacity,\r\n                    borderRadius: 2,\r\n                    shadowColor: '#000',\r\n                    shadowOffset: { width: 0, height: 1 },\r\n                    shadowOpacity: 0.3,\r\n                    shadowRadius: 2,\r\n                    elevation: 2\r\n                  }\r\n                ]}\r\n              />\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return connections;\r\n  }, [streetPrograms, calculateConnectionLine, getProgramState]);\r\n\r\n  // Modal de d√©tails\r\n  const renderModal = () => {\r\n    console.log('üîç renderModal appel√©:', {\r\n      selectedProgram: selectedProgram?.name,\r\n      modalVisible,\r\n      hasSelectedProgram: !!selectedProgram\r\n    });\r\n    \r\n    if (!selectedProgram) {\r\n      console.log('‚ùå Modal not rendered: selectedProgram is null');\r\n      return null;\r\n    }\r\n\r\n    const prereqNames = selectedProgram.prerequisites.map(id => {\r\n      const prereqProgram = streetPrograms.find(p => p.id === id);\r\n      return prereqProgram?.name || id;\r\n    });\r\n\r\n    const unlockNames = selectedProgram.unlocks?.map(id => {\r\n      const unlockProgram = streetPrograms.find(p => p.id === id);\r\n      return unlockProgram?.name || id;\r\n    }) || [];\r\n\r\n    return (\r\n      <Modal\r\n        visible={modalVisible}\r\n        transparent\r\n        animationType=\"fade\"\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>\r\n              {selectedProgram.icon} {selectedProgram.name}\r\n            </Text>\r\n            <Text style={styles.modalDifficulty}>\r\n              Difficult√©: {selectedProgram.difficulty}\r\n            </Text>\r\n            <Text style={styles.modalDescription}>\r\n              {selectedProgram.description}\r\n            </Text>\r\n            \r\n            <View style={styles.modalSection}>\r\n              <Text style={styles.modalSectionTitle}>üìä Informations</Text>\r\n              <Text style={styles.modalText}>\r\n                Dur√©e: {selectedProgram.totalWeeks} semaines\r\n              </Text>\r\n              <Text style={styles.modalText}>\r\n                R√©compense XP: {selectedProgram.xpReward}\r\n              </Text>\r\n              <Text style={styles.modalText}>\r\n                Tier: {selectedProgram.position.tier}\r\n              </Text>\r\n            </View>\r\n\r\n            {prereqNames.length > 0 && (\r\n              <View style={styles.modalSection}>\r\n                <Text style={styles.modalSectionTitle}>üîí Pr√©requis</Text>\r\n                {prereqNames.map(name => (\r\n                  <Text key={name} style={styles.modalText}>‚Ä¢ {name}</Text>\r\n                ))}\r\n              </View>\r\n            )}\r\n\r\n            {unlockNames.length > 0 && (\r\n              <View style={styles.modalSection}>\r\n                <Text style={styles.modalSectionTitle}>üîì D√©bloque</Text>\r\n                {unlockNames.map(name => (\r\n                  <Text key={name} style={styles.modalText}>‚Ä¢ {name}</Text>\r\n                ))}\r\n              </View>\r\n            )}\r\n\r\n            {/* Bouton Commencer - toujours disponible pour Fondations D√©butant */}\r\n            {(selectedProgram.id === 'beginner-foundation' || getProgramState(selectedProgram) !== 'LOCKED') && (\r\n              <TouchableOpacity\r\n                style={styles.modalStartButton}\r\n                onPress={() => {\r\n                  setModalVisible(false);\r\n                  navigation.navigate('ProgramDetail', {\r\n                    program: selectedProgram,\r\n                    category: streetCategory?.name || 'Street Workout',\r\n                    userProgress: userProgress[selectedProgram.id]\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.modalStartText}>\r\n                  {selectedProgram.id === 'beginner-foundation' ? 'Commencer maintenant üöÄ' : 'Commencer'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )}\r\n\r\n            <TouchableOpacity\r\n              style={styles.modalCloseButton}\r\n              onPress={() => setModalVisible(false)}\r\n            >\r\n              <Text style={styles.modalCloseText}>Fermer</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color={colors.primary} />\r\n        <Text style={styles.loadingText}>Chargement de votre arbre...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>üèãÔ∏è Street Workout</Text>\r\n        <View style={styles.statsContainer}>\r\n          <Text style={styles.statsText}>\r\n            {userStats.totalCompleted}/{streetPrograms.length} ‚Ä¢ {userStats.totalXP} XP ‚Ä¢ Tier {userStats.currentTier}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Badge Admin */}\r\n      {isAdmin && (\r\n        <View style={styles.adminBadge}>\r\n          <Text style={styles.adminText}>üëë MODE ADMIN - Tous les programmes d√©bloqu√©s</Text>\r\n        </View>\r\n      )}\r\n\r\n      {/* Arbre de comp√©tences */}\r\n      <ScrollView\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={{ minWidth: TREE_WIDTH + PADDING * 2 }}\r\n        style={styles.horizontalScroll}\r\n      >\r\n        <ScrollView\r\n          showsVerticalScrollIndicator={false}\r\n          contentContainerStyle={{ minHeight: TREE_HEIGHT + PADDING * 2, paddingHorizontal: PADDING, paddingVertical: PADDING }}\r\n          style={styles.verticalScroll}\r\n        >\r\n          <View style={styles.treeContainer}>\r\n            {/* Connexions */}\r\n            {renderConnections()}\r\n\r\n            {/* N≈ìuds */}\r\n            {streetPrograms.map(program => {\r\n              let state = getProgramState(program);\r\n              const progress = userProgress[program.id];\r\n              \r\n              // Force UNLOCKED pour Fondations D√©butant au niveau du rendu\r\n              if (program.id === 'beginner-foundation') {\r\n                state = progress && progress.currentLevel > 0 ? 'IN_PROGRESS' : \r\n                        completedPrograms.includes(program.id) ? 'COMPLETED' : 'UNLOCKED';\r\n              }\r\n              \r\n              return (\r\n                <View\r\n                  key={program.id}\r\n                  style={[\r\n                    styles.nodeContainer,\r\n                    {\r\n                      left: program.position.x * COLUMN_WIDTH + (COLUMN_WIDTH - 100) / 2 + PADDING, // 100 = SKILLNODE_CONTAINER_WIDTH\r\n                      top: program.position.y * ROW_HEIGHT + (ROW_HEIGHT - NODE_SIZE) / 2 + PADDING\r\n                    }\r\n                  ]}\r\n                >\r\n                  <SkillNode\r\n                    program={program}\r\n                    state={state}\r\n                    progress={progress}\r\n                    onPress={() => handleNodePress(program)}\r\n                    onLongPress={() => handleNodeLongPress(program)}\r\n                  />\r\n                </View>\r\n              );\r\n            })}\r\n          </View>\r\n        </ScrollView>\r\n      </ScrollView>\r\n\r\n      {/* L√©gende */}\r\n      <View style={styles.legend}>\r\n        <View style={styles.legendRow}>\r\n          <Text style={styles.legendItem}>üîí Verrouill√©</Text>\r\n          <Text style={styles.legendItem}>üü¢ Disponible</Text>\r\n        </View>\r\n        <View style={styles.legendRow}>\r\n          <Text style={styles.legendItem}>üü° En cours</Text>\r\n          <Text style={styles.legendItem}>‚úÖ Compl√©t√©</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Modal */}\r\n      {renderModal()}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: colors.background\r\n  },\r\n  loadingText: {\r\n    color: colors.textPrimary,\r\n    marginTop: 16,\r\n    fontSize: 16\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.border\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  statsContainer: {\r\n    alignItems: 'center'\r\n  },\r\n  statsText: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary\r\n  },\r\n  horizontalScroll: {\r\n    flex: 1\r\n  },\r\n  verticalScroll: {\r\n    flex: 1\r\n  },\r\n  treeContainer: {\r\n    width: TREE_WIDTH,\r\n    height: TREE_HEIGHT,\r\n    position: 'relative'\r\n  },\r\n  nodeContainer: {\r\n    position: 'absolute',\r\n    width: NODE_SIZE,\r\n    height: NODE_SIZE,\r\n    zIndex: 10 // Au-dessus des lignes\r\n  },\r\n  connectionLine: {\r\n    position: 'absolute',\r\n    height: 4,\r\n    borderRadius: 2,\r\n    zIndex: 1,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.4,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n    borderWidth: 0.5,\r\n    borderColor: 'rgba(255, 255, 255, 0.1)'\r\n  },\r\n  legend: {\r\n    padding: 16,\r\n    borderTopWidth: 1,\r\n    borderTopColor: colors.border,\r\n    backgroundColor: colors.surface\r\n  },\r\n  legendRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginBottom: 4\r\n  },\r\n  legendItem: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20\r\n  },\r\n  modalContent: {\r\n    backgroundColor: colors.surface,\r\n    borderRadius: 16,\r\n    padding: 24,\r\n    maxWidth: '90%',\r\n    maxHeight: '80%'\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  modalDifficulty: {\r\n    fontSize: 14,\r\n    color: colors.accent,\r\n    textAlign: 'center',\r\n    marginBottom: 16\r\n  },\r\n  modalDescription: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n    lineHeight: 20\r\n  },\r\n  modalSection: {\r\n    marginBottom: 16\r\n  },\r\n  modalSectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    marginBottom: 8\r\n  },\r\n  modalText: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n    marginBottom: 4\r\n  },\r\n  modalStartButton: {\r\n    backgroundColor: colors.success,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginTop: 16\r\n  },\r\n  modalStartText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: '600'\r\n  },\r\n  modalCloseButton: {\r\n    backgroundColor: colors.border,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginTop: 12\r\n  },\r\n  modalCloseText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: '600'\r\n  },\r\n  adminBadge: {\r\n    backgroundColor: colors.success,\r\n    marginHorizontal: 16,\r\n    marginVertical: 8,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 20,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  adminText: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default SkillTreeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}