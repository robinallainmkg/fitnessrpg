{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Documents\\\\RpgHybrid\\\\src\\\\screens\\\\HomeScreen.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Card from \"react-native-paper/lib/module/components/Card/Card\";\nimport Text from \"react-native-paper/lib/module/components/Typography/Text\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport ActivityIndicator from \"react-native-paper/lib/module/components/ActivityIndicator\";\nimport { collection, doc, getDocs, getDoc, query, where, orderBy, limit } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\nimport { db } from '../services/firebase';\nimport { colors } from '../theme/colors';\nimport SkillNode from '../components/SkillNode';\nimport programs from '../data/programs.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst streetCategory = programs.categories.find(cat => cat.id === 'street');\nconst streetPrograms = streetCategory?.programs || [];\nconst HomeScreen = ({\n  navigation\n}) => {\n  console.log('🏠 HomeScreen render');\n  const [userProgress, setUserProgress] = useState({});\n  const [completedPrograms, setCompletedPrograms] = useState([]);\n  const [lastWorkoutSession, setLastWorkoutSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [fadeAnim] = useState(new Animated.Value(0));\n  const {\n    userId\n  } = useAuth();\n  console.log('🔍 HomeScreen state:', {\n    userId,\n    loading,\n    dataLoaded\n  });\n  useEffect(() => {\n    console.log('📝 useEffect principal:', {\n      userId,\n      dataLoaded\n    });\n    if (userId && !dataLoaded) {\n      console.log('🚀 Démarrage loadUserData');\n      loadUserData();\n      startFadeAnimation();\n    }\n  }, [userId, dataLoaded]);\n  useEffect(() => {\n    console.log('🔄 Reset dataLoaded pour userId:', userId);\n    if (userId) {\n      setDataLoaded(false);\n    }\n  }, [userId]);\n  const startFadeAnimation = () => {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n  const loadUserData = useCallback(async () => {\n    console.log('📊 loadUserData appelé pour userId:', userId);\n    if (!userId) {\n      console.log('❌ Pas de userId, arrêt');\n      return;\n    }\n    try {\n      console.log('⏳ Début chargement données');\n      setLoading(true);\n      const progressQuery = query(collection(db, 'userProgress'), where('userId', '==', userId));\n      const progressSnapshot = await getDocs(progressQuery);\n      const progressData = {};\n      progressSnapshot.forEach(doc => {\n        const data = doc.data();\n        progressData[data.programId] = data;\n      });\n      setUserProgress(progressData);\n      const userDoc = await getDoc(doc(db, 'users', userId));\n      const userData = userDoc.exists() ? userDoc.data() : {};\n      const completed = userData.completedPrograms || [];\n      setCompletedPrograms(completed);\n      try {\n        const workoutQuery = query(collection(db, 'workoutSessions'), where('userId', '==', userId), orderBy('completedAt', 'desc'), limit(1));\n        const workoutSnapshot = await getDocs(workoutQuery);\n        if (!workoutSnapshot.empty) {\n          const lastSession = workoutSnapshot.docs[0].data();\n          setLastWorkoutSession(lastSession);\n        }\n      } catch (error) {\n        console.log('Aucune séance trouvée:', error);\n      }\n    } catch (error) {\n      console.error('❌ Erreur lors du chargement des données:', error);\n      Alert.alert('Erreur', 'Impossible de charger vos données');\n    } finally {\n      console.log('✅ Fin chargement données');\n      setLoading(false);\n      setDataLoaded(true);\n    }\n  }, [userId]);\n  const calculateUserStats = () => {\n    console.log('📊 calculateUserStats appelé');\n    const totalCompleted = completedPrograms.length;\n    const totalXP = completedPrograms.reduce((sum, programId) => {\n      const program = streetPrograms.find(p => p.id === programId);\n      return sum + (program?.xpReward || 0);\n    }, 0);\n    let currentTier = 0;\n    streetPrograms.forEach(program => {\n      const isUnlocked = program.prerequisites.length === 0 || program.prerequisites.every(prereq => completedPrograms.includes(prereq));\n      if (isUnlocked && program.position.tier > currentTier) {\n        currentTier = program.position.tier;\n      }\n    });\n    return {\n      totalCompleted,\n      totalXP,\n      currentTier\n    };\n  };\n  const getNextUnlockedChallenges = () => {\n    console.log('🎯 getNextUnlockedChallenges appelé');\n    const unlocked = streetPrograms.filter(program => {\n      const isCompleted = completedPrograms.includes(program.id);\n      const isUnlocked = program.prerequisites.length === 0 || program.prerequisites.every(prereq => completedPrograms.includes(prereq));\n      return !isCompleted && isUnlocked;\n    });\n    return unlocked.sort((a, b) => a.position.tier - b.position.tier).slice(0, 3);\n  };\n  const getProgramState = program => {\n    const isCompleted = completedPrograms.includes(program.id);\n    const isUnlocked = program.prerequisites.length === 0 || program.prerequisites.every(prereq => completedPrograms.includes(prereq));\n    const progress = userProgress[program.id];\n    const hasProgress = progress && progress.currentLevel > 0;\n    if (isCompleted) return 'COMPLETED';\n    if (hasProgress) return 'IN_PROGRESS';\n    if (isUnlocked) return 'UNLOCKED';\n    return 'LOCKED';\n  };\n  const navigateToSkillTree = () => {\n    navigation.navigate('SkillTree', {\n      category: streetCategory\n    });\n  };\n  const navigateToProgram = program => {\n    const progress = userProgress[program.id];\n    navigation.navigate('ProgramDetail', {\n      program,\n      category: streetCategory,\n      userProgress: progress\n    });\n  };\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Chargement de votre progression...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n  const userStats = calculateUserStats();\n  const nextChallenges = getNextUnlockedChallenges();\n  const hasNoProgress = completedPrograms.length === 0 && Object.keys(userProgress).length === 0;\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    showsVerticalScrollIndicator: false,\n    children: [_jsxDEV(Animated.View, {\n      style: [styles.header, {\n        opacity: fadeAnim\n      }],\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Mes Programmes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.subtitle,\n        children: hasNoProgress ? \"Commence ton aventure ! 🚀\" : `Bienvenue dans votre progression Street Workout`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), _jsxDEV(Animated.View, {\n      style: [styles.mainCardContainer, {\n        opacity: fadeAnim\n      }],\n      children: _jsxDEV(TouchableOpacity, {\n        onPress: navigateToSkillTree,\n        activeOpacity: 0.9,\n        children: _jsxDEV(View, {\n          style: styles.gradientCard,\n          children: _jsxDEV(View, {\n            style: styles.mainCardContent,\n            children: [_jsxDEV(View, {\n              style: styles.mainCardHeader,\n              children: [_jsxDEV(Text, {\n                style: styles.mainCardIcon,\n                children: \"\\uD83C\\uDFCB\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: styles.mainCardInfo,\n                children: [_jsxDEV(Text, {\n                  style: styles.mainCardTitle,\n                  children: \"Street Workout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), _jsxDEV(Text, {\n                  style: styles.mainCardDescription,\n                  children: \"Arbre de 20 comp\\xE9tences \\xE0 d\\xE9bloquer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), _jsxDEV(View, {\n              style: styles.statsContainer,\n              children: [_jsxDEV(View, {\n                style: styles.statItem,\n                children: [_jsxDEV(Text, {\n                  style: styles.statValue,\n                  children: [userStats.totalCompleted, \"/20\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), _jsxDEV(Text, {\n                  style: styles.statLabel,\n                  children: \"Challenges\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: styles.statItem,\n                children: [_jsxDEV(Text, {\n                  style: styles.statValue,\n                  children: [\"Tier \", userStats.currentTier]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), _jsxDEV(Text, {\n                  style: styles.statLabel,\n                  children: \"Niveau\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), _jsxDEV(View, {\n                style: styles.statItem,\n                children: [_jsxDEV(Text, {\n                  style: styles.statValue,\n                  children: userStats.totalXP\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), _jsxDEV(Text, {\n                  style: styles.statLabel,\n                  children: \"Total XP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), _jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: navigateToSkillTree,\n              style: styles.skillTreeButton,\n              contentStyle: styles.skillTreeButtonContent,\n              labelStyle: styles.skillTreeButtonLabel,\n              children: \"Voir l'arbre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), nextChallenges.length > 0 && _jsxDEV(Animated.View, {\n      style: [styles.sectionContainer, {\n        opacity: fadeAnim\n      }],\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"\\uD83C\\uDFAF Prochains d\\xE9fis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), _jsxDEV(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.challengesScroll,\n        children: nextChallenges.map((program, index) => _jsxDEV(View, {\n          style: styles.miniNodeContainer,\n          children: [_jsxDEV(SkillNode, {\n            program: program,\n            state: getProgramState(program),\n            progress: userProgress[program.id],\n            onPress: () => navigateToProgram(program),\n            size: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: styles.miniNodeName,\n            numberOfLines: 2,\n            children: program.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)]\n        }, program.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this), hasNoProgress && _jsxDEV(Animated.View, {\n      style: [styles.sectionContainer, {\n        opacity: fadeAnim\n      }],\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"\\uD83C\\uDF31 Commence ici\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), _jsxDEV(Card, {\n        style: styles.beginnerCard,\n        children: _jsxDEV(Card.Content, {\n          style: styles.beginnerCardContent,\n          children: [_jsxDEV(View, {\n            style: styles.beginnerHeader,\n            children: [_jsxDEV(Text, {\n              style: styles.beginnerIcon,\n              children: \"\\uD83C\\uDF31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: styles.beginnerInfo,\n              children: [_jsxDEV(Text, {\n                style: styles.beginnerTitle,\n                children: \"Fondations D\\xE9butant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), _jsxDEV(Text, {\n                style: styles.beginnerDescription,\n                children: \"Point de d\\xE9part pour tous. Construis ta premi\\xE8re base de force.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: () => {\n              const beginnerProgram = streetPrograms.find(p => p.id === 'beginner-foundation');\n              if (beginnerProgram) navigateToProgram(beginnerProgram);\n            },\n            style: styles.beginnerButton,\n            contentStyle: styles.beginnerButtonContent,\n            children: \"Commencer maintenant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), lastWorkoutSession && _jsxDEV(Animated.View, {\n      style: [styles.sectionContainer, {\n        opacity: fadeAnim\n      }],\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"\\uD83D\\uDCCA Derni\\xE8re s\\xE9ance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), _jsxDEV(Card, {\n        style: styles.lastSessionCard,\n        children: _jsxDEV(Card.Content, {\n          style: styles.lastSessionContent,\n          children: [_jsxDEV(View, {\n            style: styles.sessionInfo,\n            children: [_jsxDEV(Text, {\n              style: styles.sessionProgram,\n              children: streetPrograms.find(p => p.id === lastWorkoutSession.programId)?.name || 'Programme'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.sessionDate,\n              children: new Date(lastWorkoutSession.completedAt?.toDate()).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.sessionScore,\n              children: [\"Score: \", Math.round(lastWorkoutSession.finalScore || 0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), _jsxDEV(Button, {\n            mode: \"outlined\",\n            onPress: () => {\n              const program = streetPrograms.find(p => p.id === lastWorkoutSession.programId);\n              if (program) navigateToProgram(program);\n            },\n            style: styles.continueButton,\n            children: \"Continuer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.background\n  },\n  loadingText: {\n    marginTop: 16,\n    color: colors.textSecondary,\n    fontSize: 16\n  },\n  header: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    marginBottom: 8\n  },\n  subtitle: {\n    fontSize: 16,\n    color: colors.textSecondary,\n    textAlign: 'center',\n    lineHeight: 22\n  },\n  mainCardContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24\n  },\n  gradientCard: {\n    borderRadius: 20,\n    elevation: 8,\n    shadowColor: colors.primary,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    backgroundColor: colors.primary\n  },\n  mainCardContent: {\n    padding: 24\n  },\n  mainCardHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  mainCardIcon: {\n    fontSize: 64,\n    marginRight: 16\n  },\n  mainCardInfo: {\n    flex: 1\n  },\n  mainCardTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 4\n  },\n  mainCardDescription: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.9)',\n    lineHeight: 22\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 24,\n    paddingHorizontal: 12\n  },\n  statItem: {\n    alignItems: 'center'\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 4\n  },\n  statLabel: {\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.8)',\n    textTransform: 'uppercase',\n    letterSpacing: 0.5\n  },\n  skillTreeButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: 'rgba(255, 255, 255, 0.3)'\n  },\n  skillTreeButtonContent: {\n    paddingVertical: 12\n  },\n  skillTreeButtonLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: 'white'\n  },\n  sectionContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    marginBottom: 16\n  },\n  challengesScroll: {\n    paddingVertical: 8\n  },\n  miniNodeContainer: {\n    alignItems: 'center',\n    marginRight: 16,\n    width: 80\n  },\n  miniNodeName: {\n    fontSize: 12,\n    color: colors.textSecondary,\n    textAlign: 'center',\n    marginTop: 8,\n    lineHeight: 16\n  },\n  beginnerCard: {\n    backgroundColor: colors.surface,\n    borderRadius: 16,\n    elevation: 4\n  },\n  beginnerCardContent: {\n    padding: 20\n  },\n  beginnerHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  beginnerIcon: {\n    fontSize: 48,\n    marginRight: 16\n  },\n  beginnerInfo: {\n    flex: 1\n  },\n  beginnerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.textPrimary,\n    marginBottom: 4\n  },\n  beginnerDescription: {\n    fontSize: 14,\n    color: colors.textSecondary,\n    lineHeight: 20\n  },\n  beginnerButton: {\n    backgroundColor: colors.success,\n    borderRadius: 12\n  },\n  beginnerButtonContent: {\n    paddingVertical: 8\n  },\n  lastSessionCard: {\n    backgroundColor: colors.surface,\n    borderRadius: 16,\n    elevation: 2\n  },\n  lastSessionContent: {\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  sessionInfo: {\n    flex: 1\n  },\n  sessionProgram: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.textPrimary,\n    marginBottom: 4\n  },\n  sessionDate: {\n    fontSize: 12,\n    color: colors.textSecondary,\n    marginBottom: 2\n  },\n  sessionScore: {\n    fontSize: 14,\n    color: colors.accent,\n    fontWeight: '600'\n  },\n  continueButton: {\n    borderColor: colors.primary,\n    borderRadius: 8\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","StyleSheet","ScrollView","Alert","TouchableOpacity","Animated","Card","Text","Button","ActivityIndicator","collection","doc","getDocs","getDoc","query","where","orderBy","limit","useAuth","db","colors","SkillNode","programs","jsxDEV","_jsxDEV","streetCategory","categories","find","cat","id","streetPrograms","HomeScreen","navigation","console","log","userProgress","setUserProgress","completedPrograms","setCompletedPrograms","lastWorkoutSession","setLastWorkoutSession","loading","setLoading","dataLoaded","setDataLoaded","fadeAnim","Value","userId","loadUserData","startFadeAnimation","timing","toValue","duration","useNativeDriver","start","progressQuery","progressSnapshot","progressData","forEach","data","programId","userDoc","userData","exists","completed","workoutQuery","workoutSnapshot","empty","lastSession","docs","error","alert","calculateUserStats","totalCompleted","length","totalXP","reduce","sum","program","p","xpReward","currentTier","isUnlocked","prerequisites","every","prereq","includes","position","tier","getNextUnlockedChallenges","unlocked","filter","isCompleted","sort","a","b","slice","getProgramState","progress","hasProgress","currentLevel","navigateToSkillTree","navigate","category","navigateToProgram","style","styles","loadingContainer","children","size","color","primary","fileName","_jsxFileName","lineNumber","columnNumber","loadingText","userStats","nextChallenges","hasNoProgress","Object","keys","container","showsVerticalScrollIndicator","header","opacity","title","subtitle","mainCardContainer","onPress","activeOpacity","gradientCard","mainCardContent","mainCardHeader","mainCardIcon","mainCardInfo","mainCardTitle","mainCardDescription","statsContainer","statItem","statValue","statLabel","mode","skillTreeButton","contentStyle","skillTreeButtonContent","labelStyle","skillTreeButtonLabel","sectionContainer","sectionTitle","horizontal","showsHorizontalScrollIndicator","challengesScroll","map","index","miniNodeContainer","state","miniNodeName","numberOfLines","name","beginnerCard","Content","beginnerCardContent","beginnerHeader","beginnerIcon","beginnerInfo","beginnerTitle","beginnerDescription","beginnerProgram","beginnerButton","beginnerButtonContent","lastSessionCard","lastSessionContent","sessionInfo","sessionProgram","sessionDate","Date","completedAt","toDate","toLocaleDateString","sessionScore","Math","round","finalScore","continueButton","create","flex","backgroundColor","background","justifyContent","alignItems","marginTop","textSecondary","fontSize","padding","fontWeight","textPrimary","marginBottom","textAlign","lineHeight","paddingHorizontal","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","flexDirection","marginRight","textTransform","letterSpacing","borderWidth","borderColor","paddingVertical","surface","success","accent"],"sources":["C:/Users/robin/Documents/RpgHybrid/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Alert,\r\n  TouchableOpacity,\r\n  Animated\r\n} from 'react-native';\r\nimport {\r\n  Card,\r\n  Text,\r\n  Button,\r\n  ActivityIndicator\r\n} from 'react-native-paper';\r\nimport { collection, doc, getDocs, getDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db } from '../services/firebase';\r\nimport { colors } from '../theme/colors';\r\nimport SkillNode from '../components/SkillNode';\r\nimport programs from '../data/programs.json';\r\n\r\n// Données statiques en dehors du composant pour éviter les re-calculs\r\nconst streetCategory = programs.categories.find(cat => cat.id === 'street');\r\nconst streetPrograms = streetCategory?.programs || [];\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  console.log('🏠 HomeScreen render');\r\n  const [userProgress, setUserProgress] = useState({});\r\n  const [completedPrograms, setCompletedPrograms] = useState([]);\r\n  const [lastWorkoutSession, setLastWorkoutSession] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [fadeAnim] = useState(new Animated.Value(0));\r\n  const { userId } = useAuth();\r\n  \r\n  console.log('🔍 HomeScreen state:', { userId, loading, dataLoaded });\r\n\r\n  useEffect(() => {\r\n    console.log('📝 useEffect principal:', { userId, dataLoaded });\r\n    if (userId && !dataLoaded) {\r\n      console.log('🚀 Démarrage loadUserData');\r\n      loadUserData();\r\n      startFadeAnimation();\r\n    }\r\n  }, [userId, dataLoaded]);\r\n\r\n  // Reset le flag quand l'utilisateur change (mais pas si c'est undefined)\r\n  useEffect(() => {\r\n    console.log('🔄 Reset dataLoaded pour userId:', userId);\r\n    if (userId) {\r\n      setDataLoaded(false);\r\n    }\r\n  }, [userId]);\r\n\r\n  const startFadeAnimation = () => {\r\n    Animated.timing(fadeAnim, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: false  // Changé pour éviter l'erreur\r\n    }).start();\r\n  };\r\n\r\n  const loadUserData = useCallback(async () => {\r\n    console.log('📊 loadUserData appelé pour userId:', userId);\r\n    if (!userId) {\r\n      console.log('❌ Pas de userId, arrêt');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('⏳ Début chargement données');\r\n      setLoading(true);\r\n\r\n      // Charge les progrès utilisateur\r\n      const progressQuery = query(\r\n        collection(db, 'userProgress'),\r\n        where('userId', '==', userId)\r\n      );\r\n      const progressSnapshot = await getDocs(progressQuery);\r\n      const progressData = {};\r\n      progressSnapshot.forEach(doc => {\r\n        const data = doc.data();\r\n        progressData[data.programId] = data;\r\n      });\r\n      setUserProgress(progressData);\r\n\r\n      // Charge les programmes complétés\r\n      const userDoc = await getDoc(doc(db, 'users', userId));\r\n      const userData = userDoc.exists() ? userDoc.data() : {};\r\n      const completed = userData.completedPrograms || [];\r\n      setCompletedPrograms(completed);\r\n\r\n      // Charge la dernière séance d'entraînement\r\n      try {\r\n        const workoutQuery = query(\r\n          collection(db, 'workoutSessions'),\r\n          where('userId', '==', userId),\r\n          orderBy('completedAt', 'desc'),\r\n          limit(1)\r\n        );\r\n        const workoutSnapshot = await getDocs(workoutQuery);\r\n        if (!workoutSnapshot.empty) {\r\n          const lastSession = workoutSnapshot.docs[0].data();\r\n          setLastWorkoutSession(lastSession);\r\n        }\r\n      } catch (error) {\r\n        console.log('Aucune séance trouvée:', error);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('❌ Erreur lors du chargement des données:', error);\r\n      Alert.alert('Erreur', 'Impossible de charger vos données');\r\n    } finally {\r\n      console.log('✅ Fin chargement données');\r\n      setLoading(false);\r\n      setDataLoaded(true); // Marque les données comme chargées\r\n    }\r\n  }, [userId]);\r\n\r\n  // Calcule les statistiques utilisateur\r\n  const calculateUserStats = () => {\r\n    console.log('📊 calculateUserStats appelé');\r\n    const totalCompleted = completedPrograms.length;\r\n    const totalXP = completedPrograms.reduce((sum, programId) => {\r\n      const program = streetPrograms.find(p => p.id === programId);\r\n      return sum + (program?.xpReward || 0);\r\n    }, 0);\r\n\r\n    // Calcule le tier actuel (le plus haut tier débloqué)\r\n    let currentTier = 0;\r\n    streetPrograms.forEach(program => {\r\n      const isUnlocked = program.prerequisites.length === 0 || \r\n        program.prerequisites.every(prereq => completedPrograms.includes(prereq));\r\n      if (isUnlocked && program.position.tier > currentTier) {\r\n        currentTier = program.position.tier;\r\n      }\r\n    });\r\n\r\n    return { totalCompleted, totalXP, currentTier };\r\n  };\r\n\r\n  // Trouve les prochains challenges débloqués\r\n  const getNextUnlockedChallenges = () => {\r\n    console.log('🎯 getNextUnlockedChallenges appelé');\r\n    const unlocked = streetPrograms.filter(program => {\r\n      const isCompleted = completedPrograms.includes(program.id);\r\n      const isUnlocked = program.prerequisites.length === 0 || \r\n        program.prerequisites.every(prereq => completedPrograms.includes(prereq));\r\n      return !isCompleted && isUnlocked;\r\n    });\r\n\r\n    return unlocked\r\n      .sort((a, b) => a.position.tier - b.position.tier)\r\n      .slice(0, 3);\r\n  };\r\n\r\n  // Détermine l'état d'un programme\r\n  const getProgramState = (program) => {\r\n    const isCompleted = completedPrograms.includes(program.id);\r\n    const isUnlocked = program.prerequisites.length === 0 || \r\n      program.prerequisites.every(prereq => completedPrograms.includes(prereq));\r\n    const progress = userProgress[program.id];\r\n    const hasProgress = progress && progress.currentLevel > 0;\r\n\r\n    if (isCompleted) return 'COMPLETED';\r\n    if (hasProgress) return 'IN_PROGRESS';\r\n    if (isUnlocked) return 'UNLOCKED';\r\n    return 'LOCKED';\r\n  };\r\n\r\n  // Navigation vers l'arbre de compétences\r\n  const navigateToSkillTree = () => {\r\n    navigation.navigate('SkillTree', { category: streetCategory });\r\n  };\r\n\r\n  // Navigation vers un programme spécifique\r\n  const navigateToProgram = (program) => {\r\n    const progress = userProgress[program.id];\r\n    navigation.navigate('ProgramDetail', {\r\n      program,\r\n      category: streetCategory,\r\n      userProgress: progress\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color={colors.primary} />\r\n        <Text style={styles.loadingText}>Chargement de votre progression...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const userStats = calculateUserStats();\r\n  const nextChallenges = getNextUnlockedChallenges();\r\n  const hasNoProgress = completedPrograms.length === 0 && Object.keys(userProgress).length === 0;\r\n\r\n  return (\r\n    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>\r\n      {/* Header */}\r\n      <Animated.View style={[styles.header, { opacity: fadeAnim }]}>\r\n        <Text style={styles.title}>Mes Programmes</Text>\r\n        <Text style={styles.subtitle}>\r\n          {hasNoProgress \r\n            ? \"Commence ton aventure ! 🚀\" \r\n            : `Bienvenue dans votre progression Street Workout`\r\n          }\r\n        </Text>\r\n      </Animated.View>\r\n\r\n      {/* Card principale Street Workout */}\r\n      <Animated.View style={[styles.mainCardContainer, { opacity: fadeAnim }]}>\r\n        <TouchableOpacity onPress={navigateToSkillTree} activeOpacity={0.9}>\r\n          <View style={styles.gradientCard}>\r\n            <View style={styles.mainCardContent}>\r\n              <View style={styles.mainCardHeader}>\r\n                <Text style={styles.mainCardIcon}>🏋️</Text>\r\n                <View style={styles.mainCardInfo}>\r\n                  <Text style={styles.mainCardTitle}>Street Workout</Text>\r\n                  <Text style={styles.mainCardDescription}>\r\n                    Arbre de 20 compétences à débloquer\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n\r\n              <View style={styles.statsContainer}>\r\n                <View style={styles.statItem}>\r\n                  <Text style={styles.statValue}>{userStats.totalCompleted}/20</Text>\r\n                  <Text style={styles.statLabel}>Challenges</Text>\r\n                </View>\r\n                <View style={styles.statItem}>\r\n                  <Text style={styles.statValue}>Tier {userStats.currentTier}</Text>\r\n                  <Text style={styles.statLabel}>Niveau</Text>\r\n                </View>\r\n                <View style={styles.statItem}>\r\n                  <Text style={styles.statValue}>{userStats.totalXP}</Text>\r\n                  <Text style={styles.statLabel}>Total XP</Text>\r\n                </View>\r\n              </View>\r\n\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={navigateToSkillTree}\r\n                style={styles.skillTreeButton}\r\n                contentStyle={styles.skillTreeButtonContent}\r\n                labelStyle={styles.skillTreeButtonLabel}\r\n              >\r\n                Voir l'arbre\r\n              </Button>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </Animated.View>\r\n\r\n      {/* Section Progression rapide */}\r\n      {nextChallenges.length > 0 && (\r\n        <Animated.View style={[styles.sectionContainer, { opacity: fadeAnim }]}>\r\n          <Text style={styles.sectionTitle}>🎯 Prochains défis</Text>\r\n          <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.challengesScroll}>\r\n            {nextChallenges.map((program, index) => (\r\n              <View key={program.id} style={styles.miniNodeContainer}>\r\n                <SkillNode\r\n                  program={program}\r\n                  state={getProgramState(program)}\r\n                  progress={userProgress[program.id]}\r\n                  onPress={() => navigateToProgram(program)}\r\n                  size={60}\r\n                />\r\n                <Text style={styles.miniNodeName} numberOfLines={2}>\r\n                  {program.name}\r\n                </Text>\r\n              </View>\r\n            ))}\r\n          </ScrollView>\r\n        </Animated.View>\r\n      )}\r\n\r\n      {/* Highlight pour débutant */}\r\n      {hasNoProgress && (\r\n        <Animated.View style={[styles.sectionContainer, { opacity: fadeAnim }]}>\r\n          <Text style={styles.sectionTitle}>🌱 Commence ici</Text>\r\n          <Card style={styles.beginnerCard}>\r\n            <Card.Content style={styles.beginnerCardContent}>\r\n              <View style={styles.beginnerHeader}>\r\n                <Text style={styles.beginnerIcon}>🌱</Text>\r\n                <View style={styles.beginnerInfo}>\r\n                  <Text style={styles.beginnerTitle}>Fondations Débutant</Text>\r\n                  <Text style={styles.beginnerDescription}>\r\n                    Point de départ pour tous. Construis ta première base de force.\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={() => {\r\n                  const beginnerProgram = streetPrograms.find(p => p.id === 'beginner-foundation');\r\n                  if (beginnerProgram) navigateToProgram(beginnerProgram);\r\n                }}\r\n                style={styles.beginnerButton}\r\n                contentStyle={styles.beginnerButtonContent}\r\n              >\r\n                Commencer maintenant\r\n              </Button>\r\n            </Card.Content>\r\n          </Card>\r\n        </Animated.View>\r\n      )}\r\n\r\n      {/* Section Dernière séance */}\r\n      {lastWorkoutSession && (\r\n        <Animated.View style={[styles.sectionContainer, { opacity: fadeAnim }]}>\r\n          <Text style={styles.sectionTitle}>📊 Dernière séance</Text>\r\n          <Card style={styles.lastSessionCard}>\r\n            <Card.Content style={styles.lastSessionContent}>\r\n              <View style={styles.sessionInfo}>\r\n                <Text style={styles.sessionProgram}>\r\n                  {streetPrograms.find(p => p.id === lastWorkoutSession.programId)?.name || 'Programme'}\r\n                </Text>\r\n                <Text style={styles.sessionDate}>\r\n                  {new Date(lastWorkoutSession.completedAt?.toDate()).toLocaleDateString()}\r\n                </Text>\r\n                <Text style={styles.sessionScore}>\r\n                  Score: {Math.round(lastWorkoutSession.finalScore || 0)}%\r\n                </Text>\r\n              </View>\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() => {\r\n                  const program = streetPrograms.find(p => p.id === lastWorkoutSession.programId);\r\n                  if (program) navigateToProgram(program);\r\n                }}\r\n                style={styles.continueButton}\r\n              >\r\n                Continuer\r\n              </Button>\r\n            </Card.Content>\r\n          </Card>\r\n        </Animated.View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: colors.background,\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    color: colors.textSecondary,\r\n    fontSize: 16,\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: colors.textSecondary,\r\n    textAlign: 'center',\r\n    lineHeight: 22,\r\n  },\r\n  mainCardContainer: {\r\n    paddingHorizontal: 20,\r\n    marginBottom: 24,\r\n  },\r\n  gradientCard: {\r\n    borderRadius: 20,\r\n    elevation: 8,\r\n    shadowColor: colors.primary,\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 8,\r\n    backgroundColor: colors.primary,\r\n  },\r\n  mainCardContent: {\r\n    padding: 24,\r\n  },\r\n  mainCardHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  mainCardIcon: {\r\n    fontSize: 64,\r\n    marginRight: 16,\r\n  },\r\n  mainCardInfo: {\r\n    flex: 1,\r\n  },\r\n  mainCardTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    marginBottom: 4,\r\n  },\r\n  mainCardDescription: {\r\n    fontSize: 16,\r\n    color: 'rgba(255, 255, 255, 0.9)',\r\n    lineHeight: 22,\r\n  },\r\n  statsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginBottom: 24,\r\n    paddingHorizontal: 12,\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n  },\r\n  statValue: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    marginBottom: 4,\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: 'rgba(255, 255, 255, 0.8)',\r\n    textTransform: 'uppercase',\r\n    letterSpacing: 0.5,\r\n  },\r\n  skillTreeButton: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(255, 255, 255, 0.3)',\r\n  },\r\n  skillTreeButtonContent: {\r\n    paddingVertical: 12,\r\n  },\r\n  skillTreeButtonLabel: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: 'white',\r\n  },\r\n  sectionContainer: {\r\n    paddingHorizontal: 20,\r\n    marginBottom: 24,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    marginBottom: 16,\r\n  },\r\n  challengesScroll: {\r\n    paddingVertical: 8,\r\n  },\r\n  miniNodeContainer: {\r\n    alignItems: 'center',\r\n    marginRight: 16,\r\n    width: 80,\r\n  },\r\n  miniNodeName: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary,\r\n    textAlign: 'center',\r\n    marginTop: 8,\r\n    lineHeight: 16,\r\n  },\r\n  beginnerCard: {\r\n    backgroundColor: colors.surface,\r\n    borderRadius: 16,\r\n    elevation: 4,\r\n  },\r\n  beginnerCardContent: {\r\n    padding: 20,\r\n  },\r\n  beginnerHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  beginnerIcon: {\r\n    fontSize: 48,\r\n    marginRight: 16,\r\n  },\r\n  beginnerInfo: {\r\n    flex: 1,\r\n  },\r\n  beginnerTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: colors.textPrimary,\r\n    marginBottom: 4,\r\n  },\r\n  beginnerDescription: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n    lineHeight: 20,\r\n  },\r\n  beginnerButton: {\r\n    backgroundColor: colors.success,\r\n    borderRadius: 12,\r\n  },\r\n  beginnerButtonContent: {\r\n    paddingVertical: 8,\r\n  },\r\n  lastSessionCard: {\r\n    backgroundColor: colors.surface,\r\n    borderRadius: 16,\r\n    elevation: 2,\r\n  },\r\n  lastSessionContent: {\r\n    padding: 16,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  sessionInfo: {\r\n    flex: 1,\r\n  },\r\n  sessionProgram: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: colors.textPrimary,\r\n    marginBottom: 4,\r\n  },\r\n  sessionDate: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary,\r\n    marginBottom: 2,\r\n  },\r\n  sessionScore: {\r\n    fontSize: 14,\r\n    color: colors.accent,\r\n    fontWeight: '600',\r\n  },\r\n  continueButton: {\r\n    borderColor: colors.primary,\r\n    borderRadius: 8,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}