{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Documents\\\\RpgHybrid\\\\src\\\\contexts\\\\AuthContext.js\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { doc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { auth, db } from '../services/firebase';\nimport { testFirebaseConnection } from '../utils/firebaseTest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log('üöÄ AuthProvider: Setting up auth listener');\n    testFirebaseConnection();\n    if (!auth) {\n      console.error('‚ùå AUTH NOT AVAILABLE');\n      Alert.alert('Erreur Firebase', 'Auth service non disponible');\n      setLoading(false);\n      return;\n    }\n    if (!db) {\n      console.error('‚ùå FIRESTORE NOT AVAILABLE');\n      Alert.alert('Erreur Firebase', 'Firestore service non disponible');\n    }\n    console.log('‚úÖ Firebase services OK, setting up listener...');\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      console.log('üîÑ Auth state changed:', user ? `Logged in: ${user.email}` : 'Logged out');\n      setUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const signup = async (email, password) => {\n    try {\n      const {\n        user\n      } = await createUserWithEmailAndPassword(auth, email, password);\n      await setDoc(doc(db, 'users', user.uid), {\n        email: user.email,\n        totalXP: 0,\n        createdAt: serverTimestamp()\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Erreur signup:', error);\n      return {\n        success: false,\n        error: translateFirebaseError(error.code)\n      };\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      console.log('Tentative de connexion avec:', email);\n      await signInWithEmailAndPassword(auth, email, password);\n      console.log('Connexion r√©ussie');\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Erreur login:', error);\n      console.error('Code erreur:', error.code);\n      console.error('Message:', error.message);\n      return {\n        success: false,\n        error: translateFirebaseError(error.code)\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Erreur logout:', error);\n      return {\n        success: false,\n        error: 'Erreur lors de la d√©connexion'\n      };\n    }\n  };\n  const translateFirebaseError = errorCode => {\n    switch (errorCode) {\n      case 'auth/email-already-in-use':\n        return 'Cette adresse email est d√©j√† utilis√©e';\n      case 'auth/invalid-email':\n        return 'Adresse email invalide';\n      case 'auth/operation-not-allowed':\n        return 'Op√©ration non autoris√©e';\n      case 'auth/weak-password':\n        return 'Le mot de passe doit contenir au moins 6 caract√®res';\n      case 'auth/user-disabled':\n        return 'Ce compte a √©t√© d√©sactiv√©';\n      case 'auth/user-not-found':\n        return 'Aucun compte trouv√© avec cette adresse email';\n      case 'auth/wrong-password':\n        return 'Mot de passe incorrect';\n      case 'auth/invalid-credential':\n        return 'Email ou mot de passe incorrect';\n      case 'auth/too-many-requests':\n        return 'Trop de tentatives. R√©essayez plus tard';\n      case 'auth/network-request-failed':\n        return 'Erreur de connexion. V√©rifiez votre connexion internet';\n      default:\n        return 'Une erreur est survenue. Veuillez r√©essayer';\n    }\n  };\n  const value = {\n    user,\n    loading,\n    signup,\n    login,\n    logout\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Alert","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","doc","setDoc","serverTimestamp","auth","db","testFirebaseConnection","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","console","log","error","alert","unsubscribe","email","signup","password","uid","totalXP","createdAt","success","translateFirebaseError","code","login","message","logout","errorCode","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","useAuth","context","Error"],"sources":["C:/Users/robin/Documents/RpgHybrid/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { Alert } from 'react-native';\r\nimport { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword, \r\n  signOut, \r\n  onAuthStateChanged \r\n} from 'firebase/auth';\r\nimport { doc, setDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { auth, db } from '../services/firebase';\r\nimport { testFirebaseConnection } from '../utils/firebaseTest';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log('üöÄ AuthProvider: Setting up auth listener');\r\n    \r\n    // Test Firebase connection\r\n    testFirebaseConnection();\r\n    \r\n    // V√©rification visuelle\r\n    if (!auth) {\r\n      console.error('‚ùå AUTH NOT AVAILABLE');\r\n      Alert.alert('Erreur Firebase', 'Auth service non disponible');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    if (!db) {\r\n      console.error('‚ùå FIRESTORE NOT AVAILABLE');\r\n      Alert.alert('Erreur Firebase', 'Firestore service non disponible');\r\n    }\r\n    \r\n    console.log('‚úÖ Firebase services OK, setting up listener...');\r\n    \r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      console.log('üîÑ Auth state changed:', user ? `Logged in: ${user.email}` : 'Logged out');\r\n      setUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  /**\r\n   * Inscription avec email et mot de passe\r\n   */\r\n  const signup = async (email, password) => {\r\n    try {\r\n      const { user } = await createUserWithEmailAndPassword(auth, email, password);\r\n      \r\n      // Cr√©er le document utilisateur dans Firestore\r\n      await setDoc(doc(db, 'users', user.uid), {\r\n        email: user.email,\r\n        totalXP: 0,\r\n        createdAt: serverTimestamp()\r\n      });\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur signup:', error);\r\n      return { success: false, error: translateFirebaseError(error.code) };\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Connexion avec email et mot de passe\r\n   */\r\n  const login = async (email, password) => {\r\n    try {\r\n      console.log('Tentative de connexion avec:', email);\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      console.log('Connexion r√©ussie');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur login:', error);\r\n      console.error('Code erreur:', error.code);\r\n      console.error('Message:', error.message);\r\n      return { success: false, error: translateFirebaseError(error.code) };\r\n    }\r\n  };\r\n\r\n  /**\r\n   * D√©connexion\r\n   */\r\n  const logout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur logout:', error);\r\n      return { success: false, error: 'Erreur lors de la d√©connexion' };\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Traduit les codes d'erreur Firebase en fran√ßais\r\n   */\r\n  const translateFirebaseError = (errorCode) => {\r\n    switch (errorCode) {\r\n      case 'auth/email-already-in-use':\r\n        return 'Cette adresse email est d√©j√† utilis√©e';\r\n      case 'auth/invalid-email':\r\n        return 'Adresse email invalide';\r\n      case 'auth/operation-not-allowed':\r\n        return 'Op√©ration non autoris√©e';\r\n      case 'auth/weak-password':\r\n        return 'Le mot de passe doit contenir au moins 6 caract√®res';\r\n      case 'auth/user-disabled':\r\n        return 'Ce compte a √©t√© d√©sactiv√©';\r\n      case 'auth/user-not-found':\r\n        return 'Aucun compte trouv√© avec cette adresse email';\r\n      case 'auth/wrong-password':\r\n        return 'Mot de passe incorrect';\r\n      case 'auth/invalid-credential':\r\n        return 'Email ou mot de passe incorrect';\r\n      case 'auth/too-many-requests':\r\n        return 'Trop de tentatives. R√©essayez plus tard';\r\n      case 'auth/network-request-failed':\r\n        return 'Erreur de connexion. V√©rifiez votre connexion internet';\r\n      default:\r\n        return 'Une erreur est survenue. Veuillez r√©essayer';\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    signup,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Hook personnalis√© pour acc√©der au contexte d'authentification\r\n */\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}