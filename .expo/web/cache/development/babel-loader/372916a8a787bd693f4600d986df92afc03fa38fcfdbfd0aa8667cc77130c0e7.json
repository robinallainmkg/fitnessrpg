{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Documents\\\\RpgHybrid\\\\src\\\\screens\\\\ProgramDetailScreen.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Card from \"react-native-paper/lib/module/components/Card/Card\";\nimport Text from \"react-native-paper/lib/module/components/Typography/Text\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport Chip from \"react-native-paper/lib/module/components/Chip/Chip\";\nimport * as List from \"react-native-paper/lib/module/components/List/List\";\nimport Badge from \"react-native-paper/lib/module/components/Badge\";\nimport Surface from \"react-native-paper/lib/module/components/Surface\";\nimport { colors } from '../theme/colors';\nimport programsData from '../data/programs.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgramDetailScreen = ({\n  route,\n  navigation\n}) => {\n  const {\n    program,\n    category,\n    userProgress,\n    isLocked,\n    programState,\n    completedPrograms,\n    allPrograms\n  } = route.params;\n  const [expandedLevels, setExpandedLevels] = useState(new Set());\n  const [expandedExercises, setExpandedExercises] = useState(new Set());\n  const scrollViewRef = useRef(null);\n  const isProgramLocked = isLocked === true;\n  const currentLevel = userProgress?.currentLevel || 1;\n  useEffect(() => {\n    if (!isProgramLocked) {\n      setExpandedLevels(new Set([currentLevel]));\n      setTimeout(() => {\n        scrollToCurrentLevel();\n      }, 500);\n    }\n  }, [currentLevel, isProgramLocked]);\n  const scrollToCurrentLevel = () => {\n    if (scrollViewRef.current && !isProgramLocked) {\n      const levelIndex = currentLevel - 1;\n      const scrollPosition = levelIndex * 250;\n      scrollViewRef.current.scrollTo({\n        y: scrollPosition,\n        animated: true\n      });\n    }\n  };\n  const getLevelStatus = level => {\n    if (isProgramLocked) {\n      return {\n        status: 'program_locked',\n        color: '#666666',\n        text: '🔒 Programme verrouillé',\n        backgroundColor: '#2A2A2A',\n        canPlay: false,\n        message: 'Débloque ce programme pour accéder aux niveaux'\n      };\n    }\n    if (level.id < currentLevel) {\n      return {\n        status: 'completed',\n        color: colors.success,\n        text: '✅ Complété',\n        backgroundColor: '#4CAF5026',\n        canPlay: true,\n        buttonText: 'Refaire',\n        buttonMode: 'outlined'\n      };\n    } else if (level.id === currentLevel) {\n      return {\n        status: 'current',\n        color: program.color,\n        text: '🎯 Niveau actuel',\n        backgroundColor: program.color + '33',\n        canPlay: true,\n        buttonText: 'Commencer',\n        buttonMode: 'contained'\n      };\n    } else {\n      return {\n        status: 'locked_level',\n        color: '#666666',\n        text: '🔒 Verrouillé',\n        backgroundColor: 'rgba(255,255,255,0.05)',\n        canPlay: false,\n        message: `Complète le niveau ${currentLevel} pour débloquer`,\n        opacity: 0.6\n      };\n    }\n  };\n  const getPrerequisites = () => {\n    if (!program.prerequisites || program.prerequisites.length === 0) return [];\n    return program.prerequisites.map(prereqId => {\n      const prereqProgram = allPrograms?.find(p => p.id === prereqId);\n      const isCompleted = completedPrograms?.includes(prereqId);\n      return {\n        id: prereqId,\n        name: prereqProgram?.name || prereqId,\n        completed: isCompleted,\n        program: prereqProgram\n      };\n    });\n  };\n  const navigateToPrerequisite = prereqProgram => {\n    if (prereqProgram) {\n      navigation.push('ProgramDetail', {\n        program: prereqProgram,\n        category,\n        userProgress: userProgress,\n        programState: completedPrograms?.includes(prereqProgram.id) ? 'COMPLETED' : 'UNLOCKED',\n        completedPrograms,\n        allPrograms\n      });\n    }\n  };\n  const toggleLevelExpansion = levelId => {\n    const newExpanded = new Set(expandedLevels);\n    if (newExpanded.has(levelId)) {\n      newExpanded.delete(levelId);\n    } else {\n      newExpanded.add(levelId);\n    }\n    setExpandedLevels(newExpanded);\n  };\n  const toggleExerciseExpansion = exerciseKey => {\n    const newExpanded = new Set(expandedExercises);\n    if (newExpanded.has(exerciseKey)) {\n      newExpanded.delete(exerciseKey);\n    } else {\n      newExpanded.add(exerciseKey);\n    }\n    setExpandedExercises(newExpanded);\n  };\n  const getEstimatedLevelDuration = level => {\n    const exerciseCount = level.exercises?.length || 0;\n    return exerciseCount * 5;\n  };\n  const getRPEColor = rpe => {\n    if (rpe <= 6) return colors.success;\n    if (rpe <= 8) return colors.warning;\n    return colors.error;\n  };\n  const findProgramById = programId => {\n    if (programsData.categories) {\n      for (const cat of programsData.categories) {\n        const found = cat.programs.find(p => p.id === programId);\n        if (found) return found;\n      }\n    } else if (programsData.programs) {\n      return programsData.programs.find(p => p.id === programId);\n    }\n    return null;\n  };\n  const isPrerequisiteCompleted = prerequisiteId => {\n    return userProgress?.completedPrograms?.includes(prerequisiteId) || false;\n  };\n  const handlePrerequisiteClick = prerequisite => {\n    if (!isPrerequisiteCompleted(prerequisite.id)) {\n      Alert.alert('Programme requis', `Vous devez d'abord compléter \"${prerequisite.name}\" pour accéder à ce programme.`, [{\n        text: 'OK'\n      }]);\n    }\n  };\n  const startWorkout = level => {\n    navigation.navigate('Workout', {\n      program,\n      level\n    });\n  };\n  const getTotalExercises = level => {\n    return level.exercises?.length || 0;\n  };\n  const prerequisites = getPrerequisites();\n  return _jsxDEV(ScrollView, {\n    ref: scrollViewRef,\n    style: styles.container,\n    contentContainerStyle: styles.content,\n    children: [isProgramLocked && _jsxDEV(Surface, {\n      style: styles.lockedBanner,\n      children: [_jsxDEV(Text, {\n        style: styles.lockedBannerTitle,\n        children: \"\\uD83D\\uDD12 Programme verrouill\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), _jsxDEV(Text, {\n        style: styles.lockedBannerText,\n        children: \"Compl\\xE8te les pr\\xE9requis pour d\\xE9bloquer ce challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), prerequisites.length > 0 && _jsxDEV(View, {\n        style: styles.prerequisitesList,\n        children: prerequisites.map((prereq, index) => _jsxDEV(TouchableOpacity, {\n          style: styles.prerequisiteItem,\n          onPress: () => navigateToPrerequisite(prereq.program),\n          children: [_jsxDEV(Text, {\n            style: styles.prerequisiteIcon,\n            children: prereq.completed ? '✅' : '❌'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 19\n          }, this), _jsxDEV(Text, {\n            style: [styles.prerequisiteName, {\n              color: prereq.completed ? colors.success : colors.error\n            }],\n            children: prereq.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), _jsxDEV(Button, {\n        mode: \"outlined\",\n        onPress: () => navigation.goBack(),\n        style: styles.backButton,\n        children: \"Retour \\xE0 l'arbre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), _jsxDEV(Card, {\n      style: styles.headerCard,\n      children: _jsxDEV(Card.Content, {\n        style: styles.headerContent,\n        children: [_jsxDEV(Text, {\n          style: styles.programIcon,\n          children: program.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.programName,\n          children: program.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.programDescription,\n          children: program.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.programStats,\n          children: [_jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statNumber,\n              children: program.levels.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: \"Niveaux\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statNumber,\n              children: userProgress?.currentLevel || 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: \"Niveau actuel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.statItem,\n            children: [_jsxDEV(Text, {\n              style: styles.statNumber,\n              children: userProgress?.totalSessions || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.statLabel,\n              children: \"S\\xE9ances\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), _jsxDEV(Card, {\n      style: [styles.card, styles.infoCard],\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Text, {\n          style: styles.sectionTitle,\n          children: \"Informations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.infoRow,\n          children: [_jsxDEV(Text, {\n            style: styles.infoLabel,\n            children: \"Cat\\xE9gorie:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.infoValue,\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.infoRow,\n          children: [_jsxDEV(Text, {\n            style: styles.infoLabel,\n            children: \"Difficult\\xE9:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.infoValue,\n            children: program.difficulty || 'Intermédiaire'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.infoRow,\n          children: [_jsxDEV(Text, {\n            style: styles.infoLabel,\n            children: \"Dur\\xE9e estim\\xE9e:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.infoValue,\n            children: [getEstimatedLevelDuration(program.levels[0]), \" min par s\\xE9ance\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.infoRow,\n          children: [_jsxDEV(Text, {\n            style: styles.infoLabel,\n            children: \"Fr\\xE9quence:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.infoValue,\n            children: \"2-3 s\\xE9ances par semaine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      children: program.levels.map((level, index) => {\n        const levelStatus = getLevelStatus(level);\n        const isLevelExpanded = expandedLevels.has(level.id);\n        return _jsxDEV(Card, {\n          style: [styles.levelCard, {\n            backgroundColor: levelStatus.backgroundColor,\n            opacity: levelStatus.opacity || 1\n          }],\n          children: [_jsxDEV(TouchableOpacity, {\n            onPress: () => toggleLevelExpansion(level.id),\n            style: styles.levelHeaderContainer,\n            children: _jsxDEV(View, {\n              style: styles.levelHeader,\n              children: [_jsxDEV(View, {\n                style: styles.levelTitleContainer,\n                children: [_jsxDEV(Text, {\n                  style: [styles.levelTitle, {\n                    color: levelStatus.color\n                  }],\n                  children: [\"Niveau \", level.id, \" - \", level.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 21\n                }, this), _jsxDEV(Text, {\n                  style: styles.levelSubtitle,\n                  children: level.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: styles.levelBadges,\n                children: [_jsxDEV(Badge, {\n                  style: [styles.statusBadge, {\n                    backgroundColor: levelStatus.color\n                  }],\n                  children: levelStatus.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 21\n                }, this), _jsxDEV(Badge, {\n                  style: styles.xpBadge,\n                  children: [level.xpReward || 100, \" XP\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 21\n                }, this), _jsxDEV(Text, {\n                  style: styles.expandIcon,\n                  children: isLevelExpanded ? '▼' : '▶'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), isLevelExpanded && _jsxDEV(Card.Content, {\n            children: [_jsxDEV(View, {\n              style: styles.levelInfo,\n              children: _jsxDEV(Text, {\n                style: styles.levelInfoText,\n                children: [level.exercises?.length || 0, \" exercices \\u2022 ~\", getEstimatedLevelDuration(level), \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this), levelStatus.message && _jsxDEV(View, {\n              style: styles.statusMessageContainer,\n              children: _jsxDEV(Text, {\n                style: styles.statusMessage,\n                children: levelStatus.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 21\n            }, this), levelStatus.canPlay && _jsxDEV(Button, {\n              mode: levelStatus.buttonMode,\n              onPress: () => navigation.navigate('Workout', {\n                program,\n                level\n              }),\n              style: [styles.levelButton, levelStatus.status === 'current' && styles.currentLevelButton],\n              children: levelStatus.buttonText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 21\n            }, this), levelStatus.status === 'completed' && userProgress?.bestScores?.[level.id] && _jsxDEV(View, {\n              style: styles.bestScoreContainer,\n              children: _jsxDEV(Text, {\n                style: styles.bestScoreText,\n                children: [\"\\uD83C\\uDFC6 Meilleur score: \", userProgress.bestScores[level.id], \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this)]\n        }, level.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  content: {\n    padding: 16\n  },\n  headerCard: {\n    backgroundColor: colors.surface,\n    marginBottom: 24,\n    elevation: 4\n  },\n  headerContent: {\n    alignItems: 'center',\n    padding: 24\n  },\n  programIcon: {\n    fontSize: 64,\n    marginBottom: 16\n  },\n  programName: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 8,\n    textAlign: 'center'\n  },\n  programDescription: {\n    fontSize: 16,\n    color: colors.textSecondary,\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  programStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: colors.border\n  },\n  statItem: {\n    alignItems: 'center'\n  },\n  statNumber: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.text\n  },\n  statLabel: {\n    fontSize: 12,\n    color: colors.textSecondary,\n    marginTop: 4\n  },\n  levelsSection: {\n    gap: 16\n  },\n  sectionTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  levelCard: {\n    elevation: 3,\n    borderRadius: 12,\n    marginBottom: 8\n  },\n  levelContent: {\n    padding: 20\n  },\n  levelHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 16\n  },\n  levelInfo: {\n    flex: 1,\n    marginRight: 16\n  },\n  levelNumber: {\n    fontSize: 14,\n    color: colors.primary,\n    fontWeight: '600',\n    marginBottom: 4\n  },\n  levelTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 4\n  },\n  levelSubtitle: {\n    fontSize: 15,\n    color: colors.textSecondary,\n    marginBottom: 4\n  },\n  levelWeek: {\n    fontSize: 13,\n    color: colors.textSecondary,\n    fontStyle: 'italic'\n  },\n  statusChip: {\n    height: 32,\n    borderRadius: 16\n  },\n  statusChipText: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  levelStats: {\n    marginBottom: 16\n  },\n  statRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    backgroundColor: colors.surface,\n    padding: 16,\n    borderRadius: 8,\n    elevation: 1\n  },\n  statItem: {\n    alignItems: 'center'\n  },\n  statValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text\n  },\n  statLabel: {\n    fontSize: 12,\n    color: colors.textSecondary,\n    marginTop: 4\n  },\n  xpValue: {\n    color: colors.warning\n  },\n  bestScoreContainer: {\n    backgroundColor: colors.success + '20',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 16,\n    alignItems: 'center'\n  },\n  bestScoreText: {\n    fontSize: 14,\n    color: colors.success,\n    fontWeight: '600'\n  },\n  lockMessageContainer: {\n    backgroundColor: colors.textSecondary + '20',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 16,\n    alignItems: 'center'\n  },\n  lockMessage: {\n    fontSize: 14,\n    color: colors.textSecondary,\n    textAlign: 'center',\n    fontStyle: 'italic'\n  },\n  actionButton: {\n    borderRadius: 10,\n    marginTop: 8\n  },\n  primaryButton: {\n    backgroundColor: colors.primary,\n    elevation: 2\n  },\n  primaryButtonContent: {\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  secondaryButton: {\n    borderColor: colors.success,\n    borderWidth: 1.5\n  },\n  infoCard: {\n    backgroundColor: colors.surface,\n    borderLeftWidth: 4,\n    borderLeftColor: colors.primary,\n    marginBottom: 16\n  },\n  infoRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 4\n  },\n  infoLabel: {\n    fontSize: 16,\n    color: colors.textSecondary,\n    fontWeight: '500'\n  },\n  infoValue: {\n    fontSize: 16,\n    color: colors.text,\n    fontWeight: '600'\n  },\n  prerequisiteCard: {\n    backgroundColor: colors.surface,\n    borderLeftWidth: 4,\n    borderLeftColor: colors.warning,\n    marginBottom: 16\n  },\n  prerequisiteItem: {\n    paddingVertical: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border\n  },\n  prerequisiteContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  prerequisiteName: {\n    fontSize: 16,\n    color: colors.text,\n    fontWeight: '500'\n  },\n  prerequisiteStatus: {\n    alignItems: 'flex-end'\n  },\n  completedStatus: {\n    fontSize: 14,\n    color: colors.success,\n    fontWeight: '600'\n  },\n  incompleteStatus: {\n    fontSize: 14,\n    color: colors.warning,\n    fontWeight: '600'\n  },\n  unlocksCard: {\n    backgroundColor: colors.surface,\n    borderLeftWidth: 4,\n    borderLeftColor: colors.success,\n    marginBottom: 16\n  },\n  unlockItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border\n  },\n  unlockName: {\n    fontSize: 16,\n    color: colors.text,\n    fontWeight: '500'\n  },\n  unlockIcon: {\n    fontSize: 18\n  },\n  lockedBanner: {\n    backgroundColor: colors.error + '20',\n    padding: 16,\n    marginBottom: 16,\n    borderRadius: 8,\n    borderLeftWidth: 4,\n    borderLeftColor: colors.error\n  },\n  lockedBannerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.error,\n    marginBottom: 8\n  },\n  lockedBannerText: {\n    fontSize: 14,\n    color: colors.text,\n    marginBottom: 12\n  },\n  prerequisitesList: {\n    marginBottom: 16\n  },\n  prerequisiteItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: colors.surface,\n    borderRadius: 8,\n    marginBottom: 8\n  },\n  prerequisiteIcon: {\n    fontSize: 16,\n    marginRight: 8\n  },\n  prerequisiteName: {\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  backButton: {\n    borderColor: colors.error\n  },\n  levelsContainer: {\n    marginTop: 16\n  },\n  levelCard: {\n    marginBottom: 16,\n    borderRadius: 12\n  },\n  levelHeaderContainer: {\n    padding: 16\n  },\n  levelHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  levelTitleContainer: {\n    flex: 1\n  },\n  levelTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  levelSubtitle: {\n    fontSize: 14,\n    color: colors.textSecondary\n  },\n  levelBadges: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8\n  },\n  statusBadge: {\n    color: 'white'\n  },\n  xpBadge: {\n    backgroundColor: colors.warning,\n    color: 'white'\n  },\n  expandIcon: {\n    fontSize: 16,\n    color: colors.textSecondary,\n    marginLeft: 8\n  },\n  levelInfo: {\n    marginBottom: 12\n  },\n  levelInfoText: {\n    fontSize: 14,\n    color: colors.textSecondary\n  },\n  statusMessageContainer: {\n    backgroundColor: colors.warning + '20',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 12\n  },\n  statusMessage: {\n    fontSize: 14,\n    color: colors.text,\n    textAlign: 'center'\n  },\n  levelButton: {\n    marginVertical: 12\n  },\n  currentLevelButton: {\n    backgroundColor: colors.primary\n  },\n  bestScoreContainer: {\n    backgroundColor: colors.success + '20',\n    padding: 8,\n    borderRadius: 6,\n    marginTop: 8\n  },\n  bestScoreText: {\n    fontSize: 14,\n    color: colors.success,\n    textAlign: 'center',\n    fontWeight: '600'\n  },\n  exerciseCard: {\n    backgroundColor: colors.surface,\n    marginVertical: 4,\n    borderRadius: 8\n  },\n  exerciseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12\n  },\n  exerciseName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: colors.text\n  },\n  exerciseExpandIcon: {\n    fontSize: 14,\n    color: colors.textSecondary\n  },\n  exerciseDetails: {\n    paddingTop: 0\n  },\n  exerciseDescription: {\n    fontSize: 14,\n    color: colors.textSecondary,\n    marginBottom: 12,\n    lineHeight: 20\n  },\n  exerciseSpecs: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    gap: 8,\n    marginBottom: 12\n  },\n  exerciseSpec: {\n    fontSize: 14,\n    color: colors.text,\n    backgroundColor: colors.surface,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4\n  },\n  rpeBadge: {\n    color: 'white'\n  },\n  tipsContainer: {\n    backgroundColor: colors.warning + '20',\n    padding: 12,\n    borderRadius: 8,\n    borderLeftWidth: 3,\n    borderLeftColor: colors.warning\n  },\n  tipsTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: colors.text,\n    marginBottom: 6\n  },\n  tipsText: {\n    fontSize: 13,\n    color: colors.textSecondary,\n    lineHeight: 18\n  }\n});\nexport default ProgramDetailScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","StyleSheet","ScrollView","Alert","TouchableOpacity","Card","Text","Button","Chip","List","Badge","Surface","colors","programsData","jsxDEV","_jsxDEV","ProgramDetailScreen","route","navigation","program","category","userProgress","isLocked","programState","completedPrograms","allPrograms","params","expandedLevels","setExpandedLevels","Set","expandedExercises","setExpandedExercises","scrollViewRef","isProgramLocked","currentLevel","setTimeout","scrollToCurrentLevel","current","levelIndex","scrollPosition","scrollTo","y","animated","getLevelStatus","level","status","color","text","backgroundColor","canPlay","message","id","success","buttonText","buttonMode","opacity","getPrerequisites","prerequisites","length","map","prereqId","prereqProgram","find","p","isCompleted","includes","name","completed","navigateToPrerequisite","push","toggleLevelExpansion","levelId","newExpanded","has","delete","add","toggleExerciseExpansion","exerciseKey","getEstimatedLevelDuration","exerciseCount","exercises","getRPEColor","rpe","warning","error","findProgramById","programId","categories","cat","found","programs","isPrerequisiteCompleted","prerequisiteId","handlePrerequisiteClick","prerequisite","alert","startWorkout","navigate","getTotalExercises","ref","style","styles","container","contentContainerStyle","content","children","lockedBanner","lockedBannerTitle","fileName","_jsxFileName","lineNumber","columnNumber","lockedBannerText","prerequisitesList","prereq","index","prerequisiteItem","onPress","prerequisiteIcon","prerequisiteName","mode","goBack","backButton","headerCard","Content","headerContent","programIcon","icon","programName","programDescription","description","programStats","statItem","statNumber","levels","statLabel","totalSessions","card","infoCard","sectionTitle","infoRow","infoLabel","infoValue","difficulty","levelStatus","isLevelExpanded","levelCard","levelHeaderContainer","levelHeader","levelTitleContainer","levelTitle","levelSubtitle","subtitle","levelBadges","statusBadge","xpBadge","xpReward","expandIcon","levelInfo","levelInfoText","statusMessageContainer","statusMessage","levelButton","currentLevelButton","bestScores","bestScoreContainer","bestScoreText","create","flex","background","padding","surface","marginBottom","elevation","alignItems","fontSize","fontWeight","textAlign","textSecondary","flexDirection","justifyContent","width","paddingTop","borderTopWidth","borderTopColor","border","marginTop","levelsSection","gap","borderRadius","levelContent","marginRight","levelNumber","primary","levelWeek","fontStyle","statusChip","height","statusChipText","levelStats","statRow","statValue","xpValue","lockMessageContainer","lockMessage","actionButton","primaryButton","primaryButtonContent","paddingVertical","paddingHorizontal","secondaryButton","borderColor","borderWidth","borderLeftWidth","borderLeftColor","prerequisiteCard","borderBottomWidth","borderBottomColor","prerequisiteContent","prerequisiteStatus","completedStatus","incompleteStatus","unlocksCard","unlockItem","unlockName","unlockIcon","levelsContainer","marginLeft","marginVertical","exerciseCard","exerciseHeader","exerciseName","exerciseExpandIcon","exerciseDetails","exerciseDescription","lineHeight","exerciseSpecs","flexWrap","exerciseSpec","rpeBadge","tipsContainer","tipsTitle","tipsText"],"sources":["C:/Users/robin/Documents/RpgHybrid/src/screens/ProgramDetailScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Alert,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport {\r\n  Card,\r\n  Text,\r\n  Button,\r\n  Chip,\r\n  List,\r\n  Badge,\r\n  Surface\r\n} from 'react-native-paper';\r\nimport { colors } from '../theme/colors';\r\nimport programsData from '../data/programs.json';\r\n\r\nconst ProgramDetailScreen = ({ route, navigation }) => {\r\n  const { \r\n    program, \r\n    category, \r\n    userProgress, \r\n    isLocked, // NOUVEAU : paramètre direct pour indiquer si locked\r\n    programState,\r\n    completedPrograms,\r\n    allPrograms \r\n  } = route.params;\r\n\r\n  const [expandedLevels, setExpandedLevels] = useState(new Set());\r\n  const [expandedExercises, setExpandedExercises] = useState(new Set());\r\n  const scrollViewRef = useRef(null);\r\n\r\n  // État du programme - utilise maintenant isLocked directement\r\n  const isProgramLocked = isLocked === true;\r\n  const currentLevel = userProgress?.currentLevel || 1;\r\n\r\n  // Initialisation des niveaux expandés : niveau actuel ouvert par défaut\r\n  useEffect(() => {\r\n    if (!isProgramLocked) {\r\n      setExpandedLevels(new Set([currentLevel]));\r\n      \r\n      // Scroll vers le niveau actuel après un délai\r\n      setTimeout(() => {\r\n        scrollToCurrentLevel();\r\n      }, 500);\r\n    }\r\n  }, [currentLevel, isProgramLocked]);\r\n\r\n  const scrollToCurrentLevel = () => {\r\n    if (scrollViewRef.current && !isProgramLocked) {\r\n      // Scroll approximatif vers le niveau actuel\r\n      const levelIndex = currentLevel - 1;\r\n      const scrollPosition = levelIndex * 250; // Hauteur approximative par niveau\r\n      scrollViewRef.current.scrollTo({ y: scrollPosition, animated: true });\r\n    }\r\n  };\r\n\r\n  // Logique d'état des niveaux\r\n  const getLevelStatus = (level) => {\r\n    if (isProgramLocked) {\r\n      return {\r\n        status: 'program_locked',\r\n        color: '#666666',\r\n        text: '🔒 Programme verrouillé',\r\n        backgroundColor: '#2A2A2A',\r\n        canPlay: false,\r\n        message: 'Débloque ce programme pour accéder aux niveaux'\r\n      };\r\n    }\r\n\r\n    if (level.id < currentLevel) {\r\n      return {\r\n        status: 'completed',\r\n        color: colors.success,\r\n        text: '✅ Complété',\r\n        backgroundColor: '#4CAF5026', // vert 15% opacity\r\n        canPlay: true,\r\n        buttonText: 'Refaire',\r\n        buttonMode: 'outlined'\r\n      };\r\n    } else if (level.id === currentLevel) {\r\n      return {\r\n        status: 'current',\r\n        color: program.color,\r\n        text: '🎯 Niveau actuel',\r\n        backgroundColor: program.color + '33', // 20% opacity\r\n        canPlay: true,\r\n        buttonText: 'Commencer',\r\n        buttonMode: 'contained'\r\n      };\r\n    } else {\r\n      return {\r\n        status: 'locked_level',\r\n        color: '#666666',\r\n        text: '🔒 Verrouillé',\r\n        backgroundColor: 'rgba(255,255,255,0.05)',\r\n        canPlay: false,\r\n        message: `Complète le niveau ${currentLevel} pour débloquer`,\r\n        opacity: 0.6\r\n      };\r\n    }\r\n  };\r\n\r\n  // Gestion des prérequis\r\n  const getPrerequisites = () => {\r\n    if (!program.prerequisites || program.prerequisites.length === 0) return [];\r\n    \r\n    return program.prerequisites.map(prereqId => {\r\n      const prereqProgram = allPrograms?.find(p => p.id === prereqId);\r\n      const isCompleted = completedPrograms?.includes(prereqId);\r\n      return {\r\n        id: prereqId,\r\n        name: prereqProgram?.name || prereqId,\r\n        completed: isCompleted,\r\n        program: prereqProgram\r\n      };\r\n    });\r\n  };\r\n\r\n  // Navigation vers un prérequis\r\n  const navigateToPrerequisite = (prereqProgram) => {\r\n    if (prereqProgram) {\r\n      navigation.push('ProgramDetail', {\r\n        program: prereqProgram,\r\n        category,\r\n        userProgress: userProgress,\r\n        programState: completedPrograms?.includes(prereqProgram.id) ? 'COMPLETED' : 'UNLOCKED',\r\n        completedPrograms,\r\n        allPrograms\r\n      });\r\n    }\r\n  };\r\n\r\n  // Toggle expansion des niveaux\r\n  const toggleLevelExpansion = (levelId) => {\r\n    const newExpanded = new Set(expandedLevels);\r\n    if (newExpanded.has(levelId)) {\r\n      newExpanded.delete(levelId);\r\n    } else {\r\n      newExpanded.add(levelId);\r\n    }\r\n    setExpandedLevels(newExpanded);\r\n  };\r\n\r\n  // Toggle expansion des exercices\r\n  const toggleExerciseExpansion = (exerciseKey) => {\r\n    const newExpanded = new Set(expandedExercises);\r\n    if (newExpanded.has(exerciseKey)) {\r\n      newExpanded.delete(exerciseKey);\r\n    } else {\r\n      newExpanded.add(exerciseKey);\r\n    }\r\n    setExpandedExercises(newExpanded);\r\n  };\r\n\r\n  const getEstimatedLevelDuration = (level) => {\r\n    const exerciseCount = level.exercises?.length || 0;\r\n    return exerciseCount * 5; // 5 minutes par exercice (simplifié)\r\n  };\r\n\r\n  const getRPEColor = (rpe) => {\r\n    if (rpe <= 6) return colors.success;\r\n    if (rpe <= 8) return colors.warning;\r\n    return colors.error;\r\n  };\r\n\r\n  const findProgramById = (programId) => {\r\n    // Chercher dans toutes les catégories (si elles existent) ou dans programs\r\n    if (programsData.categories) {\r\n      for (const cat of programsData.categories) {\r\n        const found = cat.programs.find(p => p.id === programId);\r\n        if (found) return found;\r\n      }\r\n    } else if (programsData.programs) {\r\n      return programsData.programs.find(p => p.id === programId);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const isPrerequisiteCompleted = (prerequisiteId) => {\r\n    // Vérifier si un prérequis est complété (placeholder logic)\r\n    return userProgress?.completedPrograms?.includes(prerequisiteId) || false;\r\n  };\r\n\r\n  const handlePrerequisiteClick = (prerequisite) => {\r\n    if (!isPrerequisiteCompleted(prerequisite.id)) {\r\n      Alert.alert(\r\n        'Programme requis',\r\n        `Vous devez d'abord compléter \"${prerequisite.name}\" pour accéder à ce programme.`,\r\n        [{ text: 'OK' }]\r\n      );\r\n    }\r\n  };\r\n\r\n  const startWorkout = (level) => {\r\n    navigation.navigate('Workout', { program, level });\r\n  };\r\n\r\n  const getTotalExercises = (level) => {\r\n    return level.exercises?.length || 0;\r\n  };\r\n\r\n  const prerequisites = getPrerequisites();\r\n\r\n  return (\r\n    <ScrollView \r\n      ref={scrollViewRef}\r\n      style={styles.container} \r\n      contentContainerStyle={styles.content}\r\n    >\r\n      {/* Banner rouge si programme verrouillé */}\r\n      {isProgramLocked && (\r\n        <Surface style={styles.lockedBanner}>\r\n          <Text style={styles.lockedBannerTitle}>🔒 Programme verrouillé</Text>\r\n          <Text style={styles.lockedBannerText}>\r\n            Complète les prérequis pour débloquer ce challenge\r\n          </Text>\r\n          \r\n          {/* Liste des prérequis */}\r\n          {prerequisites.length > 0 && (\r\n            <View style={styles.prerequisitesList}>\r\n              {prerequisites.map((prereq, index) => (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  style={styles.prerequisiteItem}\r\n                  onPress={() => navigateToPrerequisite(prereq.program)}\r\n                >\r\n                  <Text style={styles.prerequisiteIcon}>\r\n                    {prereq.completed ? '✅' : '❌'}\r\n                  </Text>\r\n                  <Text style={[\r\n                    styles.prerequisiteName,\r\n                    { color: prereq.completed ? colors.success : colors.error }\r\n                  ]}>\r\n                    {prereq.name}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          )}\r\n          \r\n          <Button\r\n            mode=\"outlined\"\r\n            onPress={() => navigation.goBack()}\r\n            style={styles.backButton}\r\n          >\r\n            Retour à l'arbre\r\n          </Button>\r\n        </Surface>\r\n      )}\r\n\r\n      {/* Header du programme */}\r\n      <Card style={styles.headerCard}>\r\n        <Card.Content style={styles.headerContent}>\r\n          <Text style={styles.programIcon}>{program.icon}</Text>\r\n          <Text style={styles.programName}>{program.name}</Text>\r\n          <Text style={styles.programDescription}>\r\n            {program.description}\r\n          </Text>\r\n          \r\n          {/* Stats du programme */}\r\n          <View style={styles.programStats}>\r\n            <View style={styles.statItem}>\r\n              <Text style={styles.statNumber}>{program.levels.length}</Text>\r\n              <Text style={styles.statLabel}>Niveaux</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Text style={styles.statNumber}>\r\n                {userProgress?.currentLevel || 1}\r\n              </Text>\r\n              <Text style={styles.statLabel}>Niveau actuel</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Text style={styles.statNumber}>\r\n                {userProgress?.totalSessions || 0}\r\n              </Text>\r\n              <Text style={styles.statLabel}>Séances</Text>\r\n            </View>\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      {/* Informations du programme */}\r\n      <Card style={[styles.card, styles.infoCard]}>\r\n        <Card.Content>\r\n          <Text style={styles.sectionTitle}>Informations</Text>\r\n          <View style={styles.infoRow}>\r\n            <Text style={styles.infoLabel}>Catégorie:</Text>\r\n            <Text style={styles.infoValue}>{category}</Text>\r\n          </View>\r\n          <View style={styles.infoRow}>\r\n            <Text style={styles.infoLabel}>Difficulté:</Text>\r\n            <Text style={styles.infoValue}>{program.difficulty || 'Intermédiaire'}</Text>\r\n          </View>\r\n          <View style={styles.infoRow}>\r\n            <Text style={styles.infoLabel}>Durée estimée:</Text>\r\n            <Text style={styles.infoValue}>\r\n              {getEstimatedLevelDuration(program.levels[0])} min par séance\r\n            </Text>\r\n          </View>\r\n          <View style={styles.infoRow}>\r\n            <Text style={styles.infoLabel}>Fréquence:</Text>\r\n            <Text style={styles.infoValue}>2-3 séances par semaine</Text>\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      <View>\r\n        {program.levels.map((level, index) => {\r\n          const levelStatus = getLevelStatus(level);\r\n          const isLevelExpanded = expandedLevels.has(level.id);\r\n\r\n          return (\r\n            <Card \r\n              key={level.id} \r\n              style={[\r\n                styles.levelCard,\r\n                { \r\n                  backgroundColor: levelStatus.backgroundColor,\r\n                  opacity: levelStatus.opacity || 1 \r\n                }\r\n              ]}\r\n            >\r\n              {/* Header cliquable du niveau */}\r\n              <TouchableOpacity\r\n                onPress={() => toggleLevelExpansion(level.id)}\r\n                style={styles.levelHeaderContainer}\r\n              >\r\n                <View style={styles.levelHeader}>\r\n                  <View style={styles.levelTitleContainer}>\r\n                    <Text style={[styles.levelTitle, { color: levelStatus.color }]}>\r\n                      Niveau {level.id} - {level.name}\r\n                    </Text>\r\n                    <Text style={styles.levelSubtitle}>\r\n                      {level.subtitle}\r\n                    </Text>\r\n                  </View>\r\n                  \r\n                  <View style={styles.levelBadges}>\r\n                    <Badge \r\n                      style={[styles.statusBadge, { backgroundColor: levelStatus.color }]}\r\n                    >\r\n                      {levelStatus.text}\r\n                    </Badge>\r\n                    <Badge style={styles.xpBadge}>\r\n                      {level.xpReward || 100} XP\r\n                    </Badge>\r\n                    <Text style={styles.expandIcon}>\r\n                      {isLevelExpanded ? '▼' : '▶'}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              </TouchableOpacity>\r\n\r\n              {/* Contenu expandable du niveau */}\r\n              {isLevelExpanded && (\r\n                <Card.Content>\r\n                  {/* Info rapide du niveau */}\r\n                  <View style={styles.levelInfo}>\r\n                    <Text style={styles.levelInfoText}>\r\n                      {level.exercises?.length || 0} exercices • ~{getEstimatedLevelDuration(level)} min\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {/* Message pour les niveaux verrouillés */}\r\n                  {levelStatus.message && (\r\n                    <View style={styles.statusMessageContainer}>\r\n                      <Text style={styles.statusMessage}>\r\n                        {levelStatus.message}\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n\r\n                  {/* Bouton d'action selon le statut */}\r\n                  {levelStatus.canPlay && (\r\n                    <Button\r\n                      mode={levelStatus.buttonMode}\r\n                      onPress={() => navigation.navigate('Workout', { program, level })}\r\n                      style={[\r\n                        styles.levelButton,\r\n                        levelStatus.status === 'current' && styles.currentLevelButton\r\n                      ]}\r\n                    >\r\n                      {levelStatus.buttonText}\r\n                    </Button>\r\n                  )}\r\n\r\n                  {/* Meilleur score pour les niveaux complétés */}\r\n                  {levelStatus.status === 'completed' && userProgress?.bestScores?.[level.id] && (\r\n                    <View style={styles.bestScoreContainer}>\r\n                      <Text style={styles.bestScoreText}>\r\n                        🏆 Meilleur score: {userProgress.bestScores[level.id]}%\r\n                      </Text>\r\n                    </View>\r\n                  )}\r\n                </Card.Content>\r\n              )}\r\n            </Card>\r\n          );\r\n        })}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n  content: {\r\n    padding: 16,\r\n  },\r\n  headerCard: {\r\n    backgroundColor: colors.surface,\r\n    marginBottom: 24,\r\n    elevation: 4,\r\n  },\r\n  headerContent: {\r\n    alignItems: 'center',\r\n    padding: 24,\r\n  },\r\n  programIcon: {\r\n    fontSize: 64,\r\n    marginBottom: 16,\r\n  },\r\n  programName: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n    marginBottom: 8,\r\n    textAlign: 'center',\r\n  },\r\n  programDescription: {\r\n    fontSize: 16,\r\n    color: colors.textSecondary,\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  programStats: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    width: '100%',\r\n    paddingTop: 16,\r\n    borderTopWidth: 1,\r\n    borderTopColor: colors.border,\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n  },\r\n  statNumber: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary,\r\n    marginTop: 4,\r\n  },\r\n  levelsSection: {\r\n    gap: 16,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n  },\r\n  levelCard: {\r\n    elevation: 3,\r\n    borderRadius: 12,\r\n    marginBottom: 8,\r\n  },\r\n  levelContent: {\r\n    padding: 20,\r\n  },\r\n  levelHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n    marginBottom: 16,\r\n  },\r\n  levelInfo: {\r\n    flex: 1,\r\n    marginRight: 16,\r\n  },\r\n  levelNumber: {\r\n    fontSize: 14,\r\n    color: colors.primary,\r\n    fontWeight: '600',\r\n    marginBottom: 4,\r\n  },\r\n  levelTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n    marginBottom: 4,\r\n  },\r\n  levelSubtitle: {\r\n    fontSize: 15,\r\n    color: colors.textSecondary,\r\n    marginBottom: 4,\r\n  },\r\n  levelWeek: {\r\n    fontSize: 13,\r\n    color: colors.textSecondary,\r\n    fontStyle: 'italic',\r\n  },\r\n  statusChip: {\r\n    height: 32,\r\n    borderRadius: 16,\r\n  },\r\n  statusChipText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  levelStats: {\r\n    marginBottom: 16,\r\n  },\r\n  statRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    backgroundColor: colors.surface,\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    elevation: 1,\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n  },\r\n  statValue: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: colors.text,\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: colors.textSecondary,\r\n    marginTop: 4,\r\n  },\r\n  xpValue: {\r\n    color: colors.warning,\r\n  },\r\n  bestScoreContainer: {\r\n    backgroundColor: colors.success + '20',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n    alignItems: 'center',\r\n  },\r\n  bestScoreText: {\r\n    fontSize: 14,\r\n    color: colors.success,\r\n    fontWeight: '600',\r\n  },\r\n  lockMessageContainer: {\r\n    backgroundColor: colors.textSecondary + '20',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n    alignItems: 'center',\r\n  },\r\n  lockMessage: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n    textAlign: 'center',\r\n    fontStyle: 'italic',\r\n  },\r\n  actionButton: {\r\n    borderRadius: 10,\r\n    marginTop: 8,\r\n  },\r\n  primaryButton: {\r\n    backgroundColor: colors.primary,\r\n    elevation: 2,\r\n  },\r\n  primaryButtonContent: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n  secondaryButton: {\r\n    borderColor: colors.success,\r\n    borderWidth: 1.5,\r\n  },\r\n  // Styles pour les informations de prérequis\r\n  infoCard: {\r\n    backgroundColor: colors.surface,\r\n    borderLeftWidth: 4,\r\n    borderLeftColor: colors.primary,\r\n    marginBottom: 16,\r\n  },\r\n  infoRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 4,\r\n  },\r\n  infoLabel: {\r\n    fontSize: 16,\r\n    color: colors.textSecondary,\r\n    fontWeight: '500',\r\n  },\r\n  infoValue: {\r\n    fontSize: 16,\r\n    color: colors.text,\r\n    fontWeight: '600',\r\n  },\r\n  prerequisiteCard: {\r\n    backgroundColor: colors.surface,\r\n    borderLeftWidth: 4,\r\n    borderLeftColor: colors.warning,\r\n    marginBottom: 16,\r\n  },\r\n  prerequisiteItem: {\r\n    paddingVertical: 8,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.border,\r\n  },\r\n  prerequisiteContent: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  prerequisiteName: {\r\n    fontSize: 16,\r\n    color: colors.text,\r\n    fontWeight: '500',\r\n  },\r\n  prerequisiteStatus: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  completedStatus: {\r\n    fontSize: 14,\r\n    color: colors.success,\r\n    fontWeight: '600',\r\n  },\r\n  incompleteStatus: {\r\n    fontSize: 14,\r\n    color: colors.warning,\r\n    fontWeight: '600',\r\n  },\r\n  unlocksCard: {\r\n    backgroundColor: colors.surface,\r\n    borderLeftWidth: 4,\r\n    borderLeftColor: colors.success,\r\n    marginBottom: 16,\r\n  },\r\n  unlockItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 8,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.border,\r\n  },\r\n  unlockName: {\r\n    fontSize: 16,\r\n    color: colors.text,\r\n    fontWeight: '500',\r\n  },\r\n  unlockIcon: {\r\n    fontSize: 18,\r\n  },\r\n  // Nouveaux styles pour la refactorisation\r\n  lockedBanner: {\r\n    backgroundColor: colors.error + '20',\r\n    padding: 16,\r\n    marginBottom: 16,\r\n    borderRadius: 8,\r\n    borderLeftWidth: 4,\r\n    borderLeftColor: colors.error,\r\n  },\r\n  lockedBannerTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: colors.error,\r\n    marginBottom: 8,\r\n  },\r\n  lockedBannerText: {\r\n    fontSize: 14,\r\n    color: colors.text,\r\n    marginBottom: 12,\r\n  },\r\n  prerequisitesList: {\r\n    marginBottom: 16,\r\n  },\r\n  prerequisiteItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    backgroundColor: colors.surface,\r\n    borderRadius: 8,\r\n    marginBottom: 8,\r\n  },\r\n  prerequisiteIcon: {\r\n    fontSize: 16,\r\n    marginRight: 8,\r\n  },\r\n  prerequisiteName: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n  },\r\n  backButton: {\r\n    borderColor: colors.error,\r\n  },\r\n  levelsContainer: {\r\n    marginTop: 16,\r\n  },\r\n  levelCard: {\r\n    marginBottom: 16,\r\n    borderRadius: 12,\r\n  },\r\n  levelHeaderContainer: {\r\n    padding: 16,\r\n  },\r\n  levelHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  levelTitleContainer: {\r\n    flex: 1,\r\n  },\r\n  levelTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  levelSubtitle: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n  },\r\n  levelBadges: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 8,\r\n  },\r\n  statusBadge: {\r\n    color: 'white',\r\n  },\r\n  xpBadge: {\r\n    backgroundColor: colors.warning,\r\n    color: 'white',\r\n  },\r\n  expandIcon: {\r\n    fontSize: 16,\r\n    color: colors.textSecondary,\r\n    marginLeft: 8,\r\n  },\r\n  levelInfo: {\r\n    marginBottom: 12,\r\n  },\r\n  levelInfoText: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n  },\r\n  statusMessageContainer: {\r\n    backgroundColor: colors.warning + '20',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    marginBottom: 12,\r\n  },\r\n  statusMessage: {\r\n    fontSize: 14,\r\n    color: colors.text,\r\n    textAlign: 'center',\r\n  },\r\n  levelButton: {\r\n    marginVertical: 12,\r\n  },\r\n  currentLevelButton: {\r\n    backgroundColor: colors.primary,\r\n  },\r\n  bestScoreContainer: {\r\n    backgroundColor: colors.success + '20',\r\n    padding: 8,\r\n    borderRadius: 6,\r\n    marginTop: 8,\r\n  },\r\n  bestScoreText: {\r\n    fontSize: 14,\r\n    color: colors.success,\r\n    textAlign: 'center',\r\n    fontWeight: '600',\r\n  },\r\n  exerciseCard: {\r\n    backgroundColor: colors.surface,\r\n    marginVertical: 4,\r\n    borderRadius: 8,\r\n  },\r\n  exerciseHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 12,\r\n  },\r\n  exerciseName: {\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n    color: colors.text,\r\n  },\r\n  exerciseExpandIcon: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n  },\r\n  exerciseDetails: {\r\n    paddingTop: 0,\r\n  },\r\n  exerciseDescription: {\r\n    fontSize: 14,\r\n    color: colors.textSecondary,\r\n    marginBottom: 12,\r\n    lineHeight: 20,\r\n  },\r\n  exerciseSpecs: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    gap: 8,\r\n    marginBottom: 12,\r\n  },\r\n  exerciseSpec: {\r\n    fontSize: 14,\r\n    color: colors.text,\r\n    backgroundColor: colors.surface,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 4,\r\n  },\r\n  rpeBadge: {\r\n    color: 'white',\r\n  },\r\n  tipsContainer: {\r\n    backgroundColor: colors.warning + '20',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    borderLeftWidth: 3,\r\n    borderLeftColor: colors.warning,\r\n  },\r\n  tipsTitle: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n    color: colors.text,\r\n    marginBottom: 6,\r\n  },\r\n  tipsText: {\r\n    fontSize: 13,\r\n    color: colors.textSecondary,\r\n    lineHeight: 18,\r\n  },\r\n});\r\n\r\nexport default ProgramDetailScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}