{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robin\\\\Documents\\\\RpgHybrid\\\\src\\\\components\\\\SkillNode.js\";\nimport React, { useEffect, useRef, useState, memo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { colors } from '../theme/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  width\n} = Dimensions.get('window');\nconst SkillNode = ({\n  program,\n  userProgress,\n  isUnlocked,\n  isCompleted,\n  onPress\n}) => {\n  const pulseAnim = useRef(new Animated.Value(1)).current;\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n  const pressAnim = useRef(new Animated.Value(1)).current;\n  const [isPressed, setIsPressed] = useState(false);\n  const getNodeState = () => {\n    if (!isUnlocked && !isCompleted) return 'LOCKED';\n    if (isCompleted) return 'COMPLETED';\n    if (userProgress && userProgress.currentLevel > 1) return 'IN_PROGRESS';\n    return 'UNLOCKED';\n  };\n  const nodeState = getNodeState();\n  const getProgressPercentage = () => {\n    if (!userProgress || !program.levels) return 0;\n    return (userProgress.currentLevel - 1) / program.levels.length;\n  };\n  useEffect(() => {\n    if (nodeState === 'UNLOCKED') {\n      const startPulseAnimation = () => {\n        Animated.sequence([Animated.timing(pulseAnim, {\n          toValue: 1.08,\n          duration: 2000,\n          useNativeDriver: true\n        }), Animated.timing(pulseAnim, {\n          toValue: 1.0,\n          duration: 2000,\n          useNativeDriver: true\n        })]).start(() => startPulseAnimation());\n      };\n      startPulseAnimation();\n    } else {\n      pulseAnim.setValue(1);\n    }\n  }, [nodeState, pulseAnim]);\n  const handlePressIn = () => {\n    setIsPressed(true);\n    Animated.spring(pressAnim, {\n      toValue: 0.95,\n      useNativeDriver: true\n    }).start();\n  };\n  const handlePressOut = () => {\n    setIsPressed(false);\n    Animated.spring(pressAnim, {\n      toValue: 1,\n      useNativeDriver: true\n    }).start();\n  };\n  const getNodeContainerStyle = () => {\n    const baseTransform = [{\n      scale: pressAnim\n    }];\n    if (nodeState === 'UNLOCKED') {\n      baseTransform.push({\n        scale: pulseAnim\n      });\n    }\n    const baseStyle = {\n      transform: baseTransform,\n      width: 110,\n      height: 110,\n      borderRadius: 55,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderWidth: 3\n    };\n    switch (nodeState) {\n      case 'LOCKED':\n        return Object.assign({}, baseStyle, {\n          backgroundColor: '#1A1A1A',\n          borderColor: '#333333',\n          borderWidth: 2\n        });\n      case 'UNLOCKED':\n        return Object.assign({}, baseStyle, {\n          backgroundColor: program.color + '4D',\n          borderColor: program.color,\n          borderWidth: 3,\n          shadowColor: program.color,\n          shadowOffset: {\n            width: 0,\n            height: 0\n          },\n          shadowOpacity: 0.6,\n          shadowRadius: 10,\n          elevation: 12\n        });\n      case 'IN_PROGRESS':\n        return Object.assign({}, baseStyle, {\n          backgroundColor: program.color + '40',\n          borderColor: '#FFD700',\n          borderWidth: 3,\n          shadowColor: '#FFD700',\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.8,\n          shadowRadius: 8,\n          elevation: 8\n        });\n      case 'COMPLETED':\n        return Object.assign({}, baseStyle, {\n          backgroundColor: '#4CAF50' + '66',\n          borderColor: '#4CAF50',\n          borderWidth: 3,\n          shadowColor: '#4CAF50',\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.8,\n          shadowRadius: 8,\n          elevation: 8\n        });\n      default:\n        return baseStyle;\n    }\n  };\n  const getIconStyle = () => {\n    switch (nodeState) {\n      case 'LOCKED':\n        return {\n          fontSize: 50,\n          opacity: 0.3,\n          filter: 'grayscale(100%)'\n        };\n      case 'UNLOCKED':\n      case 'IN_PROGRESS':\n      case 'COMPLETED':\n        return {\n          fontSize: 50,\n          opacity: 1\n        };\n      default:\n        return {\n          fontSize: 50\n        };\n    }\n  };\n  const getTextStyle = () => {\n    switch (nodeState) {\n      case 'LOCKED':\n        return {\n          color: '#666666',\n          fontWeight: 'normal'\n        };\n      case 'UNLOCKED':\n      case 'IN_PROGRESS':\n      case 'COMPLETED':\n        return {\n          color: '#FFFFFF',\n          fontWeight: 'bold'\n        };\n      default:\n        return {\n          color: '#FFFFFF'\n        };\n    }\n  };\n  if (program.id === 'beginner-foundation') {\n    console.log('üîç SkillNode Fondations:', {\n      nodeState,\n      isClickable,\n      onPress: !!onPress\n    });\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: onPress,\n      onPressIn: isClickable ? handlePressIn : null,\n      onPressOut: isClickable ? handlePressOut : null,\n      disabled: false,\n      activeOpacity: 0.8,\n      children: _jsxDEV(Animated.View, {\n        style: [styles.nodeContainer, {\n          borderColor: getBorderColor()\n        }, getNodeStyles()],\n        children: [_jsxDEV(Text, {\n          style: styles.programIcon,\n          children: program.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), nodeState === 'IN_PROGRESS' && _jsxDEV(View, {\n          style: styles.progressContainer,\n          children: _jsxDEV(View, {\n            style: [styles.progressBar, {\n              backgroundColor: program.color,\n              width: `${getProgressPercentage() * 100}%`\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.badgeContainer,\n          children: [nodeState === 'LOCKED' && _jsxDEV(View, {\n            style: [styles.badge, styles.lockedBadge],\n            children: _jsxDEV(Text, {\n              style: styles.badgeIcon,\n              children: \"\\uD83D\\uDD12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), nodeState === 'UNLOCKED' && _jsxDEV(View, {\n            style: [styles.badge, styles.unlockedBadge],\n            children: _jsxDEV(Text, {\n              style: styles.badgeIcon,\n              children: \"\\uD83D\\uDD13\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), nodeState === 'IN_PROGRESS' && _jsxDEV(View, {\n            style: [styles.badge, styles.progressBadge],\n            children: _jsxDEV(Text, {\n              style: styles.badgeIcon,\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), nodeState === 'COMPLETED' && _jsxDEV(View, {\n            style: [styles.badge, styles.completedBadge],\n            children: _jsxDEV(Text, {\n              style: styles.badgeIcon,\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: [styles.programName, {\n        opacity: nodeState === 'LOCKED' ? 0.5 : 1\n      }],\n      numberOfLines: 2,\n      children: program.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: [styles.difficultyText, {\n        color: getDifficultyColor(program.difficulty),\n        opacity: nodeState === 'LOCKED' ? 0.5 : 1\n      }],\n      children: program.difficulty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    margin: 8,\n    width: 100\n  },\n  nodeContainer: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    borderWidth: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.surface,\n    position: 'relative'\n  },\n  programIcon: {\n    fontSize: 32,\n    textAlign: 'center'\n  },\n  progressContainer: {\n    position: 'absolute',\n    bottom: -2,\n    left: -2,\n    right: -2,\n    height: 4,\n    backgroundColor: colors.border,\n    borderRadius: 2,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    height: '100%',\n    borderRadius: 2\n  },\n  badgeContainer: {\n    position: 'absolute',\n    top: -8,\n    right: -8\n  },\n  badge: {\n    borderRadius: 12,\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    minWidth: 24,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  lockedBadge: {\n    backgroundColor: colors.surface,\n    borderWidth: 1,\n    borderColor: colors.border\n  },\n  unlockedBadge: {\n    backgroundColor: colors.primary,\n    borderWidth: 1,\n    borderColor: colors.accent\n  },\n  progressBadge: {\n    backgroundColor: colors.warning,\n    paddingHorizontal: 8\n  },\n  completedBadge: {\n    backgroundColor: colors.success\n  },\n  badgeIcon: {\n    fontSize: 12\n  },\n  badgeText: {\n    fontSize: 10,\n    color: colors.background,\n    fontWeight: 'bold'\n  },\n  programName: {\n    marginTop: 8,\n    fontSize: 12,\n    fontWeight: '600',\n    color: colors.text,\n    textAlign: 'center',\n    lineHeight: 14\n  },\n  difficultyText: {\n    marginTop: 2,\n    fontSize: 10,\n    fontWeight: '500',\n    textAlign: 'center'\n  }\n});\nexport default SkillNode;","map":{"version":3,"names":["React","useEffect","useRef","useState","memo","View","Text","TouchableOpacity","StyleSheet","Animated","Dimensions","colors","jsxDEV","_jsxDEV","width","get","SkillNode","program","userProgress","isUnlocked","isCompleted","onPress","pulseAnim","Value","current","scaleAnim","pressAnim","isPressed","setIsPressed","getNodeState","currentLevel","nodeState","getProgressPercentage","levels","length","startPulseAnimation","sequence","timing","toValue","duration","useNativeDriver","start","setValue","handlePressIn","spring","handlePressOut","getNodeContainerStyle","baseTransform","scale","push","baseStyle","transform","height","borderRadius","justifyContent","alignItems","borderWidth","Object","assign","backgroundColor","borderColor","color","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","getIconStyle","fontSize","opacity","filter","getTextStyle","fontWeight","id","console","log","isClickable","style","styles","container","children","onPressIn","onPressOut","disabled","activeOpacity","nodeContainer","getBorderColor","getNodeStyles","programIcon","icon","fileName","_jsxFileName","lineNumber","columnNumber","progressContainer","progressBar","badgeContainer","badge","lockedBadge","badgeIcon","unlockedBadge","progressBadge","completedBadge","programName","numberOfLines","name","difficultyText","getDifficultyColor","difficulty","create","margin","surface","position","textAlign","bottom","left","right","border","overflow","top","paddingHorizontal","paddingVertical","minWidth","primary","accent","warning","success","badgeText","background","marginTop","text","lineHeight"],"sources":["C:/Users/robin/Documents/RpgHybrid/src/components/SkillNode.js"],"sourcesContent":["import React, { useEffect, useRef, useState, memo } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Animated,\r\n  Dimensions\r\n} from 'react-native';\r\nimport { colors } from '../theme/colors';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n/**\r\n * SkillNode - N≈ìud individuel dans l'arbre de comp√©tences avec visuels am√©lior√©s\r\n * \r\n * √âtats visuels drastiquement diff√©renci√©s :\r\n * - LOCKED : Noir, gris, ic√¥ne d√©satur√©e + cadenas\r\n * - UNLOCKED : Brillant, color√©, badge \"NOUVEAU\", animation pulse\r\n * - IN_PROGRESS : Bordure dor√©e, barre de progression circulaire\r\n * - COMPLETED : Vert vibrant, badge \"‚úÖ Compl√©t√©\", XP affich√©\r\n */\r\nconst SkillNode = ({ \r\n  program, \r\n  userProgress, \r\n  isUnlocked, \r\n  isCompleted, \r\n  onPress \r\n}) => {\r\n  const pulseAnim = useRef(new Animated.Value(1)).current;\r\n  const scaleAnim = useRef(new Animated.Value(1)).current;\r\n  const pressAnim = useRef(new Animated.Value(1)).current;\r\n  const [isPressed, setIsPressed] = useState(false);\r\n\r\n  // D√©terminer l'√©tat du n≈ìud avec logique am√©lior√©e\r\n  const getNodeState = () => {\r\n    if (!isUnlocked && !isCompleted) return 'LOCKED';\r\n    if (isCompleted) return 'COMPLETED';\r\n    if (userProgress && userProgress.currentLevel > 1) return 'IN_PROGRESS';\r\n    return 'UNLOCKED';\r\n  };\r\n\r\n  const nodeState = getNodeState();\r\n\r\n  // Calculer le pourcentage de progression\r\n  const getProgressPercentage = () => {\r\n    if (!userProgress || !program.levels) return 0;\r\n    return (userProgress.currentLevel - 1) / program.levels.length;\r\n  };\r\n\r\n  // Animation pulse pour les n≈ìuds UNLOCKED (plus visible)\r\n  useEffect(() => {\r\n    if (nodeState === 'UNLOCKED') {\r\n      const startPulseAnimation = () => {\r\n        Animated.sequence([\r\n          Animated.timing(pulseAnim, {\r\n            toValue: 1.08, // Plus prononc√©\r\n            duration: 2000, // Plus lent\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(pulseAnim, {\r\n            toValue: 1.0,\r\n            duration: 2000,\r\n            useNativeDriver: true,\r\n          }),\r\n        ]).start(() => startPulseAnimation());\r\n      };\r\n      startPulseAnimation();\r\n    } else {\r\n      // Arr√™ter l'animation pour les autres √©tats\r\n      pulseAnim.setValue(1);\r\n    }\r\n  }, [nodeState, pulseAnim]);\r\n\r\n  // Animation de pression am√©lior√©e\r\n  const handlePressIn = () => {\r\n    setIsPressed(true);\r\n    Animated.spring(pressAnim, {\r\n      toValue: 0.95,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const handlePressOut = () => {\r\n    setIsPressed(false);\r\n    Animated.spring(pressAnim, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n\r\n\r\n  // Styles visuels drastiquement am√©lior√©s selon l'√©tat\r\n  const getNodeContainerStyle = () => {\r\n    const baseTransform = [{ scale: pressAnim }];\r\n    \r\n    // Ajouter l'animation pulse seulement pour UNLOCKED\r\n    if (nodeState === 'UNLOCKED') {\r\n      baseTransform.push({ scale: pulseAnim });\r\n    }\r\n\r\n    const baseStyle = {\r\n      transform: baseTransform,\r\n      width: 110,\r\n      height: 110,\r\n      borderRadius: 55,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderWidth: 3,\r\n    };\r\n\r\n    switch (nodeState) {\r\n      case 'LOCKED':\r\n        return {\r\n          ...baseStyle,\r\n          backgroundColor: '#1A1A1A', // Tr√®s sombre, presque noir\r\n          borderColor: '#333333', // Gris tr√®s fonc√©\r\n          borderWidth: 2,\r\n          // Pas de shadow\r\n        };\r\n        \r\n      case 'UNLOCKED':\r\n        return {\r\n          ...baseStyle,\r\n          backgroundColor: program.color + '4D', // 30% opacity pour effet vibrant\r\n          borderColor: program.color,\r\n          borderWidth: 3,\r\n          // Shadow/glow vibrant\r\n          shadowColor: program.color,\r\n          shadowOffset: { width: 0, height: 0 },\r\n          shadowOpacity: 0.6,\r\n          shadowRadius: 10,\r\n          elevation: 12,\r\n        };\r\n        \r\n      case 'IN_PROGRESS':\r\n        return {\r\n          ...baseStyle,\r\n          backgroundColor: program.color + '40', // 25% opacity\r\n          borderColor: '#FFD700', // Or\r\n          borderWidth: 3,\r\n          shadowColor: '#FFD700',\r\n          shadowOffset: { width: 0, height: 2 },\r\n          shadowOpacity: 0.8,\r\n          shadowRadius: 8,\r\n          elevation: 8,\r\n        };\r\n        \r\n      case 'COMPLETED':\r\n        return {\r\n          ...baseStyle,\r\n          backgroundColor: '#4CAF50' + '66', // Vert vibrant 40% opacity  \r\n          borderColor: '#4CAF50',\r\n          borderWidth: 3,\r\n          shadowColor: '#4CAF50',\r\n          shadowOffset: { width: 0, height: 2 },\r\n          shadowOpacity: 0.8,\r\n          shadowRadius: 8,\r\n          elevation: 8,\r\n        };\r\n        \r\n      default:\r\n        return baseStyle;\r\n    }\r\n  };\r\n\r\n  // Style de l'ic√¥ne selon l'√©tat\r\n  const getIconStyle = () => {\r\n    switch (nodeState) {\r\n      case 'LOCKED':\r\n        return {\r\n          fontSize: 50,\r\n          opacity: 0.3, // Tr√®s d√©satur√©e\r\n          filter: 'grayscale(100%)', // Grayscale (ne marche pas sur RN, mais bon)\r\n        };\r\n      case 'UNLOCKED':\r\n      case 'IN_PROGRESS':\r\n      case 'COMPLETED':\r\n        return {\r\n          fontSize: 50,\r\n          opacity: 1,\r\n        };\r\n      default:\r\n        return { fontSize: 50 };\r\n    }\r\n  };\r\n\r\n  // Style du texte selon l'√©tat\r\n  const getTextStyle = () => {\r\n    switch (nodeState) {\r\n      case 'LOCKED':\r\n        return {\r\n          color: '#666666',\r\n          fontWeight: 'normal',\r\n        };\r\n      case 'UNLOCKED':\r\n      case 'IN_PROGRESS':  \r\n      case 'COMPLETED':\r\n        return {\r\n          color: '#FFFFFF',\r\n          fontWeight: 'bold',\r\n        };\r\n      default:\r\n        return { color: '#FFFFFF' };\r\n    }\r\n  };\r\n\r\n  // Debug pour Fondations D√©butant\r\n  if (program.id === 'beginner-foundation') {\r\n    console.log('üîç SkillNode Fondations:', {\r\n      nodeState,\r\n      isClickable,\r\n      onPress: !!onPress\r\n    });\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        onPress={onPress} // Toujours actif maintenant\r\n        onPressIn={isClickable ? handlePressIn : null}\r\n        onPressOut={isClickable ? handlePressOut : null}\r\n        disabled={false} // Jamais d√©sactiv√©\r\n        activeOpacity={0.8}\r\n      >\r\n        <Animated.View \r\n          style={[\r\n            styles.nodeContainer,\r\n            { borderColor: getBorderColor() },\r\n            getNodeStyles()\r\n          ]}\r\n        >\r\n          {/* Ic√¥ne principale du programme */}\r\n          <Text style={styles.programIcon}>{program.icon}</Text>\r\n\r\n          {/* Barre de progression circulaire pour IN_PROGRESS */}\r\n          {nodeState === 'IN_PROGRESS' && (\r\n            <View style={styles.progressContainer}>\r\n              <View \r\n                style={[\r\n                  styles.progressBar,\r\n                  { \r\n                    backgroundColor: program.color,\r\n                    width: `${getProgressPercentage() * 100}%`\r\n                  }\r\n                ]} \r\n              />\r\n            </View>\r\n          )}\r\n\r\n          {/* Badge d'√©tat en haut √† droite */}\r\n          <View style={styles.badgeContainer}>\r\n            {nodeState === 'LOCKED' && (\r\n              <View style={[styles.badge, styles.lockedBadge]}>\r\n                <Text style={styles.badgeIcon}>üîí</Text>\r\n              </View>\r\n            )}\r\n            \r\n            {nodeState === 'UNLOCKED' && (\r\n              <View style={[styles.badge, styles.unlockedBadge]}>\r\n                <Text style={styles.badgeIcon}>üîì</Text>\r\n              </View>\r\n            )}\r\n            \r\n            {nodeState === 'IN_PROGRESS' && (\r\n              <View style={[styles.badge, styles.progressBadge]}>\r\n                <Text style={styles.badgeIcon}>‚ö°</Text>\r\n              </View>\r\n            )}\r\n            \r\n            {nodeState === 'COMPLETED' && (\r\n              <View style={[styles.badge, styles.completedBadge]}>\r\n                <Text style={styles.badgeIcon}>‚úÖ</Text>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n\r\n      {/* Nom du programme */}\r\n      <Text \r\n        style={[\r\n          styles.programName,\r\n          { opacity: nodeState === 'LOCKED' ? 0.5 : 1 } // D√©sactiv√© si verrouill√©\r\n        ]}\r\n        numberOfLines={2}\r\n      >\r\n        {program.name}\r\n      </Text>\r\n\r\n      {/* Difficult√© */}\r\n      <Text \r\n        style={[\r\n          styles.difficultyText,\r\n          { \r\n            color: getDifficultyColor(program.difficulty),\r\n            opacity: nodeState === 'LOCKED' ? 0.5 : 1 // D√©sactiv√© si verrouill√©\r\n          }\r\n        ]}\r\n      >\r\n        {program.difficulty}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    margin: 8,\r\n    width: 100,\r\n  },\r\n  nodeContainer: {\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 40, // Cercle parfait\r\n    borderWidth: 2,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: colors.surface,\r\n    position: 'relative',\r\n  },\r\n  programIcon: {\r\n    fontSize: 32,\r\n    textAlign: 'center',\r\n  },\r\n  progressContainer: {\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: -2,\r\n    right: -2,\r\n    height: 4,\r\n    backgroundColor: colors.border,\r\n    borderRadius: 2,\r\n    overflow: 'hidden',\r\n  },\r\n  progressBar: {\r\n    height: '100%',\r\n    borderRadius: 2,\r\n  },\r\n  badgeContainer: {\r\n    position: 'absolute',\r\n    top: -8,\r\n    right: -8,\r\n  },\r\n  badge: {\r\n    borderRadius: 12,\r\n    paddingHorizontal: 6,\r\n    paddingVertical: 2,\r\n    minWidth: 24,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  lockedBadge: {\r\n    backgroundColor: colors.surface,\r\n    borderWidth: 1,\r\n    borderColor: colors.border,\r\n  },\r\n  unlockedBadge: {\r\n    backgroundColor: colors.primary,\r\n    borderWidth: 1,\r\n    borderColor: colors.accent,\r\n  },\r\n  progressBadge: {\r\n    backgroundColor: colors.warning,\r\n    paddingHorizontal: 8,\r\n  },\r\n  completedBadge: {\r\n    backgroundColor: colors.success,\r\n  },\r\n  badgeIcon: {\r\n    fontSize: 12,\r\n  },\r\n  badgeText: {\r\n    fontSize: 10,\r\n    color: colors.background,\r\n    fontWeight: 'bold',\r\n  },\r\n  programName: {\r\n    marginTop: 8,\r\n    fontSize: 12,\r\n    fontWeight: '600',\r\n    color: colors.text,\r\n    textAlign: 'center',\r\n    lineHeight: 14,\r\n  },\r\n  difficultyText: {\r\n    marginTop: 2,\r\n    fontSize: 10,\r\n    fontWeight: '500',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default SkillNode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}